{
  "Description": "(SO0190-OneClickLauncher) - Automated Data Analytics on AWS. Version v1.3.0",
  "Parameters": {
    "adminEmail": {
      "Type": "String",
      "AllowedPattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
      "ConstraintDescription": " must be a valid email address.",
      "Description": "The email address of the administrator. This has to be a valid address, you will receive the temporary password to this address."
    },
    "adminPhoneNumber": {
      "Type": "String",
      "Default": "+15555550123",
      "AllowedPattern": "^\\+[1-9]\\d{1,14}$",
      "ConstraintDescription": " must be a valid phone number in E.164 format, e.g. +15555550123",
      "Description": "The phone number of the administrator. Must be a valid phone number in E.164 format (e.g. +15555550123) that can receive OTP messages if MFA is enabled. Change the default value to your phone number if you want to enable this functionality"
    },
    "adminMFA": {
      "Type": "String",
      "Default": "OPTIONAL",
      "AllowedValues": [
        "OPTIONAL",
        "ON"
      ],
      "Description": "Indicates if Multi-Factor Authentication (MFA) is enabled for root administrator."
    },
    "advancedSecurityMode": {
      "Type": "String",
      "Default": "ENFORCED",
      "AllowedValues": [
        "AUDIT",
        "ENFORCED",
        "OFF"
      ],
      "Description": "The advanced security mode for cognito user pool"
    },
    "autoAssociateAdmin": {
      "Type": "String",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Indicates if the admin role is automatically mapped to the users from external identity providers if the email matches the admin email address provided as parameter during the deployment."
    },
    "sendAnonymousData": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Send anonymized operational metrics to AWS. We use this data to better understand how customers use this solution and related services and products. Choose No to opt out of this feature."
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "adminMFAPhoneNumberRule": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "adminMFA"
          },
          "ON"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "adminPhoneNumber"
                  },
                  "+15555550123"
                ]
              }
            ]
          },
          "AssertDescription": "When Multi-Factor Authentication (MFA) is enabled, a valid phone number of the administrator must be provided"
        }
      ]
    },
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  },
  "Resources": {
    "AdaOneClickBuildProjectRole71D42DAA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/AdaOneClickBuildProject/Role/Resource"
      }
    },
    "AdaOneClickBuildProjectRoleDefaultPolicy9C18C07E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "AdaOneClickBuildProjectB3875FE4"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "AdaOneClickBuildProjectB3875FE4"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "AdaOneClickBuildProjectB3875FE4"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AdaOneClickBuildProjectRoleDefaultPolicy9C18C07E",
        "Roles": [
          {
            "Ref": "AdaOneClickBuildProjectRole71D42DAA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/AdaOneClickBuildProject/Role/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "This launcher role requires permissions to build project for cdk deploy (likely close to full admin)"
            },
            {
              "id": "F4",
              "reason": "This launcher role requires permissions to build project for cdk deploy (likely close to full admin)"
            },
            {
              "id": "F39",
              "reason": "This launcher role requires permissions to build project for cdk deploy (likely close to full admin)"
            }
          ]
        }
      }
    },
    "AdaOneClickBuildProjectB3875FE4": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS"
        },
        "Cache": {
          "Modes": [
            "LOCAL_DOCKER_LAYER_CACHE"
          ],
          "Type": "LOCAL"
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name": "adminEmail",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "adminEmail"
              }
            },
            {
              "Name": "adminPhoneNumber",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "adminPhoneNumber"
              }
            },
            {
              "Name": "adminMFA",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "adminMFA"
              }
            },
            {
              "Name": "autoAssociateAdmin",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "autoAssociateAdmin"
              }
            },
            {
              "Name": "advancedSecurityMode",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "advancedSecurityMode"
              }
            },
            {
              "Name": "sendAnonymousData",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "sendAnonymousData"
              }
            },
            {
              "Name": "cloudAssemblyBucketName",
              "Type": "PLAINTEXT",
              "Value": "solutions-reference"
            }
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "AdaOneClickBuildProjectRole71D42DAA",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"shell\": \"bash\"\n  },\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"nodejs\": 14\n      },\n      \"commands\": [\n        \"yarn global add aws-cdk@2.88.0\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"if [ $CFN_EVENT_REQUEST_TYPE = 'Delete' ]; then exit 0; else echo proceeding; fi\",\n        \"aws s3 cp s3://$cloudAssemblyBucketName/automated-data-analytics-on-aws/v1.3.0/ada-cloud-assembly.zip .\",\n        \"unzip ada-cloud-assembly.zip\",\n        \"rm -f ada-cloud-assembly.zip\",\n        \"cdk deploy -a cdk.out --require-approval never --parameters adminEmail=$adminEmail --parameters adminPhoneNumber=$adminPhoneNumber --parameters adminMFA=$adminMFA --parameters autoAssociateAdmin=$autoAssociateAdmin --parameters advancedSecurityMode=$advancedSecurityMode --parameters sendAnonymousData=$sendAnonymousData\"\n      ]\n    }\n  }\n}",
          "Type": "NO_SOURCE"
        },
        "TimeoutInMinutes": 120
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/AdaOneClickBuildProject/Resource"
      }
    },
    "CodeBuildExecutionStartBuildHandlerServiceRole6A435D3A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildHandler/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionStartBuildHandlerServiceRoleDefaultPolicyA6651902": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AdaOneClickBuildProjectB3875FE4",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionStartBuildHandlerServiceRoleDefaultPolicyA6651902",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionStartBuildHandlerServiceRole6A435D3A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildHandler/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionStartBuildHandler791168CC": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/asset93ca564c3e85c8aadc66b7e11c2609ea8a8c4097e2d19962a6406ebef7c02c61.zip"
        },
        "Environment": {
          "Variables": {
            "MAX_RESOURCE_TIMEOUT": "3600000",
            "RESOURCE_TIMEOUT_BUFFER": "300000",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.onStartBuildEventHandler",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuildHandlerServiceRole6A435D3A",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x"
      },
      "DependsOn": [
        "CodeBuildExecutionStartBuildHandlerServiceRoleDefaultPolicyA6651902",
        "CodeBuildExecutionStartBuildHandlerServiceRole6A435D3A"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildHandler/Resource",
        "aws:asset:path": "asset.93ca564c3e85c8aadc66b7e11c2609ea8a8c4097e2d19962a6406ebef7c02c61",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionIsCompleteHandlerServiceRoleF46DC7AD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/IsCompleteHandler/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionIsCompleteHandlerServiceRoleDefaultPolicyD082CEFA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AdaOneClickBuildProjectB3875FE4",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionIsCompleteHandlerServiceRoleDefaultPolicyD082CEFA",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionIsCompleteHandlerServiceRoleF46DC7AD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/IsCompleteHandler/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionIsCompleteHandler3BB88806": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/asset93ca564c3e85c8aadc66b7e11c2609ea8a8c4097e2d19962a6406ebef7c02c61.zip"
        },
        "Environment": {
          "Variables": {
            "MAX_RESOURCE_TIMEOUT": "3600000",
            "RESOURCE_TIMEOUT_BUFFER": "300000",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.isCompleteHandler",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionIsCompleteHandlerServiceRoleF46DC7AD",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x"
      },
      "DependsOn": [
        "CodeBuildExecutionIsCompleteHandlerServiceRoleDefaultPolicyD082CEFA",
        "CodeBuildExecutionIsCompleteHandlerServiceRoleF46DC7AD"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/IsCompleteHandler/Resource",
        "aws:asset:path": "asset.93ca564c3e85c8aadc66b7e11c2609ea8a8c4097e2d19962a6406ebef7c02c61",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkonEventServiceRole4A60F025": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkonEventServiceRoleDefaultPolicy75D60284": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionStartBuildHandler791168CC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionStartBuildHandler791168CC",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "CodeBuildExecutionStartBuildProviderwaiterstatemachineF7A9D193"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionStartBuildProviderframeworkonEventServiceRoleDefaultPolicy75D60284",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionStartBuildProviderframeworkonEventServiceRole4A60F025"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkonEvent798DE2D0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - onEvent (AdaOneClick/CodeBuildExecution/StartBuildProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionStartBuildHandler791168CC",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "CodeBuildExecutionStartBuildProviderwaiterstatemachineF7A9D193"
            }
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuildProviderframeworkonEventServiceRole4A60F025",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionStartBuildProviderframeworkonEventServiceRoleDefaultPolicy75D60284",
        "CodeBuildExecutionStartBuildProviderframeworkonEventServiceRole4A60F025"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-onEvent/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkisCompleteServiceRole150D9A91": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-isComplete/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkisCompleteServiceRoleDefaultPolicy94860B65": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionStartBuildHandler791168CC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionStartBuildHandler791168CC",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionStartBuildProviderframeworkisCompleteServiceRoleDefaultPolicy94860B65",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionStartBuildProviderframeworkisCompleteServiceRole150D9A91"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-isComplete/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkisCompleteBE986346": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - isComplete (AdaOneClick/CodeBuildExecution/StartBuildProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionStartBuildHandler791168CC",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuildProviderframeworkisCompleteServiceRole150D9A91",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionStartBuildProviderframeworkisCompleteServiceRoleDefaultPolicy94860B65",
        "CodeBuildExecutionStartBuildProviderframeworkisCompleteServiceRole150D9A91"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-isComplete/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkonTimeoutServiceRole988AD7AC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-onTimeout/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkonTimeoutServiceRoleDefaultPolicy090F238A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionStartBuildHandler791168CC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionStartBuildHandler791168CC",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionStartBuildProviderframeworkonTimeoutServiceRoleDefaultPolicy090F238A",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionStartBuildProviderframeworkonTimeoutServiceRole988AD7AC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-onTimeout/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionStartBuildProviderframeworkonTimeout7D5FCAA0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - onTimeout (AdaOneClick/CodeBuildExecution/StartBuildProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionStartBuildHandler791168CC",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuildProviderframeworkonTimeoutServiceRole988AD7AC",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionStartBuildProviderframeworkonTimeoutServiceRoleDefaultPolicy090F238A",
        "CodeBuildExecutionStartBuildProviderframeworkonTimeoutServiceRole988AD7AC"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/framework-onTimeout/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionStartBuildProviderwaiterstatemachineRoleCF8FEDA7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "states"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/waiter-state-machine/Role/Resource"
      }
    },
    "CodeBuildExecutionStartBuildProviderwaiterstatemachineRoleDefaultPolicy14C5AF81": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionStartBuildProviderframeworkisCompleteBE986346",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionStartBuildProviderframeworkisCompleteBE986346",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionStartBuildProviderframeworkonTimeout7D5FCAA0",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionStartBuildProviderframeworkonTimeout7D5FCAA0",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionStartBuildProviderwaiterstatemachineRoleDefaultPolicy14C5AF81",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionStartBuildProviderwaiterstatemachineRoleCF8FEDA7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/waiter-state-machine/Role/DefaultPolicy/Resource"
      }
    },
    "CodeBuildExecutionStartBuildProviderwaiterstatemachineF7A9D193": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"framework-isComplete-task\",\"States\":{\"framework-isComplete-task\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":30,\"MaxAttempts\":120,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"framework-onTimeout-task\"}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "CodeBuildExecutionStartBuildProviderframeworkisCompleteBE986346",
                  "Arn"
                ]
              },
              "\"},\"framework-onTimeout-task\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "CodeBuildExecutionStartBuildProviderframeworkonTimeout7D5FCAA0",
                  "Arn"
                ]
              },
              "\"}}}"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuildProviderwaiterstatemachineRoleCF8FEDA7",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CodeBuildExecutionStartBuildProviderwaiterstatemachineRoleDefaultPolicy14C5AF81",
        "CodeBuildExecutionStartBuildProviderwaiterstatemachineRoleCF8FEDA7"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuildProvider/waiter-state-machine/Resource"
      }
    },
    "CodeBuildExecutionStartBuild3E38B40F": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuildProviderframeworkonEvent798DE2D0",
            "Arn"
          ]
        },
        "projectName": {
          "Ref": "AdaOneClickBuildProjectB3875FE4"
        },
        "isFinal": "false",
        "timeoutInMillis": "7200000"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/StartBuild/Default"
      }
    },
    "CodeBuildExecutionWaiterHandlerServiceRoleB2588A96": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterHandler/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionWaiterHandlerServiceRoleDefaultPolicyE0EE1B59": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AdaOneClickBuildProjectB3875FE4",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterHandlerServiceRoleDefaultPolicyE0EE1B59",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterHandlerServiceRoleB2588A96"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterHandler/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterHandler7B1E1300": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/asset93ca564c3e85c8aadc66b7e11c2609ea8a8c4097e2d19962a6406ebef7c02c61.zip"
        },
        "Environment": {
          "Variables": {
            "MAX_RESOURCE_TIMEOUT": "3600000",
            "RESOURCE_TIMEOUT_BUFFER": "300000",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.onWaiterEventHandler",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterHandlerServiceRoleB2588A96",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x"
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterHandlerServiceRoleDefaultPolicyE0EE1B59",
        "CodeBuildExecutionWaiterHandlerServiceRoleB2588A96"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterHandler/Resource",
        "aws:asset:path": "asset.93ca564c3e85c8aadc66b7e11c2609ea8a8c4097e2d19962a6406ebef7c02c61",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkonEventServiceRole8AA27164": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-onEvent/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkonEventServiceRoleDefaultPolicy1F045190": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterHandler7B1E1300",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterHandler7B1E1300",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "CodeBuildExecutionWaiterProvider1waiterstatemachineEBB0A93C"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterProvider1frameworkonEventServiceRoleDefaultPolicy1F045190",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterProvider1frameworkonEventServiceRole8AA27164"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-onEvent/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkonEventCD0D45D0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - onEvent (AdaOneClick/CodeBuildExecution/WaiterProvider1)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionWaiterHandler7B1E1300",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "CodeBuildExecutionWaiterProvider1waiterstatemachineEBB0A93C"
            }
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider1frameworkonEventServiceRole8AA27164",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterProvider1frameworkonEventServiceRoleDefaultPolicy1F045190",
        "CodeBuildExecutionWaiterProvider1frameworkonEventServiceRole8AA27164"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-onEvent/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkisCompleteServiceRoleA4E8FF41": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-isComplete/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkisCompleteServiceRoleDefaultPolicy6C3DDBA0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterHandler7B1E1300",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterHandler7B1E1300",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterProvider1frameworkisCompleteServiceRoleDefaultPolicy6C3DDBA0",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterProvider1frameworkisCompleteServiceRoleA4E8FF41"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-isComplete/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkisComplete8BDA1871": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - isComplete (AdaOneClick/CodeBuildExecution/WaiterProvider1)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionWaiterHandler7B1E1300",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider1frameworkisCompleteServiceRoleA4E8FF41",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterProvider1frameworkisCompleteServiceRoleDefaultPolicy6C3DDBA0",
        "CodeBuildExecutionWaiterProvider1frameworkisCompleteServiceRoleA4E8FF41"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-isComplete/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkonTimeoutServiceRoleCDFF50E6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-onTimeout/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkonTimeoutServiceRoleDefaultPolicyC8834AA0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterHandler7B1E1300",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterHandler7B1E1300",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterProvider1frameworkonTimeoutServiceRoleDefaultPolicyC8834AA0",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterProvider1frameworkonTimeoutServiceRoleCDFF50E6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-onTimeout/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider1frameworkonTimeout32C19DDD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - onTimeout (AdaOneClick/CodeBuildExecution/WaiterProvider1)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionWaiterHandler7B1E1300",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider1frameworkonTimeoutServiceRoleCDFF50E6",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterProvider1frameworkonTimeoutServiceRoleDefaultPolicyC8834AA0",
        "CodeBuildExecutionWaiterProvider1frameworkonTimeoutServiceRoleCDFF50E6"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/framework-onTimeout/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider1waiterstatemachineRole6F5D5047": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "states"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/waiter-state-machine/Role/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider1waiterstatemachineRoleDefaultPolicy4231EBCD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterProvider1frameworkisComplete8BDA1871",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterProvider1frameworkisComplete8BDA1871",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterProvider1frameworkonTimeout32C19DDD",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterProvider1frameworkonTimeout32C19DDD",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterProvider1waiterstatemachineRoleDefaultPolicy4231EBCD",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterProvider1waiterstatemachineRole6F5D5047"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/waiter-state-machine/Role/DefaultPolicy/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider1waiterstatemachineEBB0A93C": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"framework-isComplete-task\",\"States\":{\"framework-isComplete-task\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":30,\"MaxAttempts\":120,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"framework-onTimeout-task\"}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "CodeBuildExecutionWaiterProvider1frameworkisComplete8BDA1871",
                  "Arn"
                ]
              },
              "\"},\"framework-onTimeout-task\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "CodeBuildExecutionWaiterProvider1frameworkonTimeout32C19DDD",
                  "Arn"
                ]
              },
              "\"}}}"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider1waiterstatemachineRole6F5D5047",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterProvider1waiterstatemachineRoleDefaultPolicy4231EBCD",
        "CodeBuildExecutionWaiterProvider1waiterstatemachineRole6F5D5047"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider1/waiter-state-machine/Resource"
      }
    },
    "CodeBuildExecutionWaiter15934973D": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider1frameworkonEventCD0D45D0",
            "Arn"
          ]
        },
        "projectName": {
          "Ref": "AdaOneClickBuildProjectB3875FE4"
        },
        "isFinal": "false",
        "timeoutInMillis": "7200000",
        "buildId": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuild3E38B40F",
            "buildId"
          ]
        },
        "executionStartTime": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuild3E38B40F",
            "executionStartTime"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/Waiter1/Default"
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkonEventServiceRole486341C9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-onEvent/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkonEventServiceRoleDefaultPolicy084C2028": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterHandler7B1E1300",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterHandler7B1E1300",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "CodeBuildExecutionWaiterProvider2waiterstatemachineC88ED0D6"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterProvider2frameworkonEventServiceRoleDefaultPolicy084C2028",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterProvider2frameworkonEventServiceRole486341C9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-onEvent/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkonEvent5A713028": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - onEvent (AdaOneClick/CodeBuildExecution/WaiterProvider2)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionWaiterHandler7B1E1300",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "CodeBuildExecutionWaiterProvider2waiterstatemachineC88ED0D6"
            }
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider2frameworkonEventServiceRole486341C9",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterProvider2frameworkonEventServiceRoleDefaultPolicy084C2028",
        "CodeBuildExecutionWaiterProvider2frameworkonEventServiceRole486341C9"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-onEvent/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkisCompleteServiceRole885ACA92": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-isComplete/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkisCompleteServiceRoleDefaultPolicyF70111C1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterHandler7B1E1300",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterHandler7B1E1300",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterProvider2frameworkisCompleteServiceRoleDefaultPolicyF70111C1",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterProvider2frameworkisCompleteServiceRole885ACA92"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-isComplete/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkisComplete7C08D008": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - isComplete (AdaOneClick/CodeBuildExecution/WaiterProvider2)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionWaiterHandler7B1E1300",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider2frameworkisCompleteServiceRole885ACA92",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterProvider2frameworkisCompleteServiceRoleDefaultPolicyF70111C1",
        "CodeBuildExecutionWaiterProvider2frameworkisCompleteServiceRole885ACA92"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-isComplete/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkonTimeoutServiceRole50A84319": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-onTimeout/ServiceRole/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkonTimeoutServiceRoleDefaultPolicy94E04675": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterHandler7B1E1300",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterHandler7B1E1300",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionIsCompleteHandler3BB88806",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionIsCompleteHandler3BB88806",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterProvider2frameworkonTimeoutServiceRoleDefaultPolicy94E04675",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterProvider2frameworkonTimeoutServiceRole50A84319"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-onTimeout/ServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Resource access is granted for xray tracing"
            },
            {
              "id": "W76",
              "reason": "SPCM expected to be high due to complexity of project and lambda interaction with multiple dynamodb tables (eg entities, relationships, locks, etc)"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider2frameworkonTimeoutE6AB57E8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "automated-data-analytics-on-aws/v1.3.0/assetf2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip"
        },
        "Description": "AWS CDK resource provider framework - onTimeout (AdaOneClick/CodeBuildExecution/WaiterProvider2)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionWaiterHandler7B1E1300",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CodeBuildExecutionIsCompleteHandler3BB88806",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider2frameworkonTimeoutServiceRole50A84319",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterProvider2frameworkonTimeoutServiceRoleDefaultPolicy94E04675",
        "CodeBuildExecutionWaiterProvider2frameworkonTimeoutServiceRole50A84319"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/framework-onTimeout/Resource",
        "aws:asset:path": "asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda already has the required permission to write CloudWatch Logs via arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole."
            },
            {
              "id": "W92",
              "reason": "We do not set reserved capacity to ensure we dynamically scale"
            },
            {
              "id": "W89",
              "reason": "Lambda functions not deployed in a VPC"
            }
          ]
        }
      }
    },
    "CodeBuildExecutionWaiterProvider2waiterstatemachineRoleAF32DEDE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "states"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/waiter-state-machine/Role/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider2waiterstatemachineRoleDefaultPolicy83623350": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterProvider2frameworkisComplete7C08D008",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterProvider2frameworkisComplete7C08D008",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildExecutionWaiterProvider2frameworkonTimeoutE6AB57E8",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildExecutionWaiterProvider2frameworkonTimeoutE6AB57E8",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildExecutionWaiterProvider2waiterstatemachineRoleDefaultPolicy83623350",
        "Roles": [
          {
            "Ref": "CodeBuildExecutionWaiterProvider2waiterstatemachineRoleAF32DEDE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/waiter-state-machine/Role/DefaultPolicy/Resource"
      }
    },
    "CodeBuildExecutionWaiterProvider2waiterstatemachineC88ED0D6": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"framework-isComplete-task\",\"States\":{\"framework-isComplete-task\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":30,\"MaxAttempts\":120,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"framework-onTimeout-task\"}],\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "CodeBuildExecutionWaiterProvider2frameworkisComplete7C08D008",
                  "Arn"
                ]
              },
              "\"},\"framework-onTimeout-task\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "CodeBuildExecutionWaiterProvider2frameworkonTimeoutE6AB57E8",
                  "Arn"
                ]
              },
              "\"}}}"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider2waiterstatemachineRoleAF32DEDE",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CodeBuildExecutionWaiterProvider2waiterstatemachineRoleDefaultPolicy83623350",
        "CodeBuildExecutionWaiterProvider2waiterstatemachineRoleAF32DEDE"
      ],
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/WaiterProvider2/waiter-state-machine/Resource"
      }
    },
    "CodeBuildExecutionWaiter24C899478": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CodeBuildExecutionWaiterProvider2frameworkonEvent5A713028",
            "Arn"
          ]
        },
        "projectName": {
          "Ref": "AdaOneClickBuildProjectB3875FE4"
        },
        "isFinal": "true",
        "timeoutInMillis": "7200000",
        "buildId": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuild3E38B40F",
            "buildId"
          ]
        },
        "executionStartTime": {
          "Fn::GetAtt": [
            "CodeBuildExecutionStartBuild3E38B40F",
            "executionStartTime"
          ]
        }
      },
      "DependsOn": [
        "CodeBuildExecutionWaiter15934973D"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CodeBuildExecution/Waiter2/Default"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/0VPy27CMBD8Fu7OFqhUcS2ReqOKwgdEjr2gTfxAXhtURfn3Oia0p5nRzszu7uFwgO1GPrhSeqwM9TCdo1SjqC+ukUFajBgW0SaDIvu6SXmNfSKjYWqCH1DFYn7SWZC0MLU+u5fUgo03pH6KqbBZGGl7LTuXmwaG7wJfyalI3gl+7yQzRobPBbKGY1IjxqNkXKMw5ba/xIvMs2iRfQoKRcnmV67krkIljt52YR0y5GvvpNfPXpG6uP7lxdXeaSorsjjJ2y2XzWI5GwZ+u+8+YL+F3WZgoiokF8kitE/8BaI72YtaAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "AdaOneClick/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Mappings": {
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com"
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com"
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com"
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com"
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com"
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com"
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com"
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com"
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com"
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com"
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com"
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com"
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com"
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com"
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com"
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com"
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com"
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com"
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com"
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com"
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com"
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com"
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com"
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com"
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com"
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com"
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com"
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com"
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com"
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com"
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com"
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com"
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com"
      }
    }
  }
}