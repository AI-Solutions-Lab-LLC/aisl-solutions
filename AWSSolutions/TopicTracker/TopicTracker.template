{
  "Description": "(SO0122) - Discovering Hot Topics using Machine Learning. Version v2.2.1",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "NewsFeedIngestionSetup"
          },
          "Parameters": [
            "DeployNewsFeeds",
            "NewsFeedIngestFrequency",
            "NewsSearchQuery",
            "NewsFeedIngestConfig"
          ]
        },
        {
          "Label": {
            "default": "YouTubeCommentsSetup"
          },
          "Parameters": [
            "DeployYouTubeCommentsIngestion",
            "YouTubeSearchIngestionFreq",
            "YouTubeChannel",
            "YoutubeSearchQuery",
            "YoutubeAPIKey"
          ]
        },
        {
          "Label": {
            "default": "RedditIngestion"
          },
          "Parameters": [
            "DeployRedditIngestion",
            "RedditAPIKey",
            "RedditIngestionFrequency",
            "SubRedditsToFollow"
          ]
        },
        {
          "Label": {
            "default": "CustomIngestionSetup"
          },
          "Parameters": [
            "DeployCustomIngestion"
          ]
        },
        {
          "Label": {
            "default": "General Parameters"
          },
          "Parameters": [
            "TopicAnalysisFrequency",
            "NumberOfTopics",
            "QuickSightPrincipalArn"
          ]
        }
      ]
    },
    "cdk_nag": {
      "rules_to_suppress": [
        {
          "reason": "Lambda running on Node are already on latest runtime (NodeJs18). Python lambda runtime is planned to be upgraded in future release",
          "id": "AwsSolutions-L1"
        },
        {
          "reason": "All IAM policies defined in this solution grant only least-privilege permissions. Wild card for resources is used only for services which do not have a resource arn (Comprehend, Xray, Regoknition, Translate, State Machine) ",
          "id": "AwsSolutions-IAM5"
        }
      ]
    }
  },
  "Parameters": {
    "DeployNewsFeeds": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Required: Would you like to deploy the news feed ingestion mechanism. If you answer yes, Config and RSSNewsFeedIngestFrequency parameters are mandatory"
    },
    "NewsSearchQuery": {
      "Type": "String",
      "Default": "Amazon, AWS",
      "ConstraintDescription": "Please enter the keyword to use to filter news feeds",
      "Description": "Provide a comma separated list of keywords (optional) to filter news feeds. Only feeds containing at least one of the keywords from the list will be processed. If no keyword is provided, feeds will not be filtered and all news feeds will be processed",
      "MaxLength": 500,
      "MinLength": 0
    },
    "NewsFeedIngestConfig": {
      "Type": "String",
      "Default": "{\"country\":\"ALL\", \"language\":\"en\", \"topic\":\"news\"}",
      "Description": "Provide configuration for RSS feeds. This parameter should be configured as a JSON string. Here is a sample configuration {\"country\":\"ALL\", \"language\":\"ALL\", \"topic\":\"ALL\"}. For Country and language use ISO code. The list of superset of all supported topics is: \"tech\", \"news\", \"business\", \"science\", \"finance\", \"food\", \"politics\", \"economics\", \"travel\", \"entertainment\", \"music\", \"sport\", \"world\".Note: not all topics are supported for each RSS provider. Setting the value as \"ALL\", is treated as a wild character search"
    },
    "NewsFeedIngestFrequency": {
      "Type": "String",
      "Default": "cron(0 18 * * ? *)",
      "AllowedPattern": "^$|(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the format 'cron(0 18 * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Description": "Required: The frequency at which RSS Feeds should be pulled. For detailed documentation on schedule expression rules, please refer https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html"
    },
    "DeployYouTubeCommentsIngestion": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Required: Would you like to deploy the YouTube comments ingestion mechanism. If you answer yes, YouTubeVideoSearchQuery and YouTubeSearchIngestionFreq parameters are mandatory"
    },
    "YouTubeSearchIngestionFreq": {
      "Type": "String",
      "Default": "cron(0 12 * * ? *)",
      "AllowedPattern": "^$|(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the formation 'cron(0 12 * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Description": "Required: The frequency at which at which YouTube comments should be retrieved"
    },
    "YoutubeAPIKey": {
      "Type": "String",
      "Default": "/discovering-hot-topics-using-machine-learning/youtube/comments",
      "AllowedPattern": "^$|^(?!\\s*$).+",
      "ConstraintDescription": "Please provide the SSM Key for Youtube API",
      "Description": "The key name where Youtube API credentails are stored"
    },
    "YouTubeChannel": {
      "Type": "String",
      "AllowedPattern": "^$|^(?!\\s*$).+",
      "ConstraintDescription": "Please provide a valid YouTube Channel ID",
      "Description": "Optional parameter to retrieve comments data from videos from a specific channel. At least one parameter from \"YouTubeChannel\" and \"YoutubeSearchQuery\" has to be provided.",
      "MaxLength": 500,
      "MinLength": 0
    },
    "YoutubeSearchQuery": {
      "Type": "String",
      "Default": "Amazon Web Services|AWS",
      "ConstraintDescription": "Please provide key words for Youtube search query",
      "Description": "Optional search parameter to specify the keywords to search for on Youtube. You can use NOT (-) and OR (|) operators to find videos. Example 'boating|sailing -fishing'. For details refer API documentation on this link https://developers.google.com/youtube/v3/docs/search/list. At least one parameter from \"YouTubeChannel\" and \"YoutubeSearchQuery\" has to be provided.",
      "MaxLength": 500,
      "MinLength": 0
    },
    "DeployCustomIngestion": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Required: Would you like to deploy custom data ingestion from an S3 bucket."
    },
    "TopicAnalysisFrequency": {
      "Type": "String",
      "Default": "cron(10 0 * * ? *)",
      "AllowedPattern": "(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "ConstraintDescription": "Please provide a valid cron expression of the format 'cron(10 0 * * ? *)'. For details on CloudWatch cron expressions, please refer the following link https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Description": "Required: The frequency at which the topic analysis job should run. The minimum is an hour. It is recommened That the job be run a few minutes after the hour e.g 10 minutes after the hour"
    },
    "NumberOfTopics": {
      "Type": "Number",
      "Default": "10",
      "ConstraintDescription": "Please verify if the value entered for the number of topics to be discovered is between 1 and 100 (both inclusive).",
      "Description": "Required: The number of topics to be discovered by topic analysis. The minimum value is 1 and maximum value is 100",
      "MaxValue": 100,
      "MinValue": 1
    },
    "QuickSightPrincipalArn": {
      "Type": "String",
      "AllowedPattern": "^$|^arn:\\S+:quicksight:\\S+:\\d{12}:user/\\S+$",
      "ConstraintDescription": "Provide an arn matching an Amazon Quicksight User ARN. The input did not match the validation pattern. If you do not wish to deploy QuickSight visuals, leave it blank",
      "Description": "The Amazon QuickSight principal arn used in the permissions of QuickSight resources. If you do not wish to deploy QuickSight visuals, leave it blank. This Arn can be obtained by executing the AWS CLI command: aws quicksight list-users --region <aws-region> --aws-account-id <account-id> --namespace <namespace-name>. The expected Arn  format is : arn:aws:quicksight:<aws-region>:<aws-account-id>:user/<quicksight-namespace>/<quicksight-admin-group-name>/<user-name>. (Example arn:aws:quicksight:<aws-region>:<aws-account-id>:user/default/Admin/<user-name>. )."
    },
    "DeployRedditIngestion": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Required: Would you like to deploy the news feed ingestion mechanism. If you answer yes, Config and RSSNewsFeedIngestFrequency parameters are mandatory"
    },
    "RedditAPIKey": {
      "Type": "String",
      "Default": "/discovering-hot-topics-using-machine-learning/reddit/comments",
      "AllowedPattern": "^$|^(?!\\s*$).+",
      "ConstraintDescription": "Please provide the SSM key for Reddit API",
      "Description": "Required: The SSM parameter key name where the Reddit API credentials detailare stored. For details about how and where to store the API credentials, please refer the implementation guide for this solution"
    },
    "RedditIngestionFrequency": {
      "Type": "String",
      "Default": "cron(0/60 * * * ? *)",
      "AllowedPattern": "^$|(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?(?:,(?:[0-6]?\\d)(?:(?:-|\\/|\\,)(?:[0-6]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W|#)?(?:[1-9]|1[012])?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))\\))$",
      "ConstraintDescription": "Please provide a valid scron expression for the format \"cron(0/60 * * * ? *)\". For details on CloudWatch cron expressions, please navigate to https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
      "Description": "Required: The Polling frequency at which the system should ingest comments from subreddits"
    },
    "SubRedditsToFollow": {
      "Type": "String",
      "Default": "r/aws,r/MachineLearning",
      "AllowedPattern": "^$|[r\\/\\w+]+([,r\\/\\w+])*",
      "ConstraintDescription": "",
      "Description": "Optional: Please provide the list of SubReddits to follow as comma separated list. Alternatively you can also set the list in the DynamoDB table. For details on the DynamoDB configuration, please refer our implementation guide"
    }
  },
  "Rules": {
    "NewsFeedsIngestionParamValidation": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "DeployNewsFeeds"
          },
          "No"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Or": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployYouTubeCommentsIngestion"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployCustomIngestion"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployRedditIngestion"
                  },
                  "Yes"
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployNewsFeeds\" is set to \"No\", then at least one of \"DeployYouTubeCommentsIngestion\", \"DeployRedditIngestion\", or \"DeployCustomIngestion\" should be set to \"Yes\". At least one ingestion mechanism is required."
        }
      ]
    },
    "DeployYouTubeCommentsIngestionValidation": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "DeployYouTubeCommentsIngestion"
          },
          "No"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Or": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployNewsFeeds"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployCustomIngestion"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployRedditIngestion"
                  },
                  "Yes"
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployYouTubeCommentsIngestion\" is set to \"No\", then at least one of \"DeployNewsFeeds\", \"DeployRedditIngestion\", or \"DeployCustomIngestion\" should be set to \"Yes\". At least one ingestion mechanism is required."
        }
      ]
    },
    "DeployRedditIngestionValidation": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "DeployRedditIngestion"
          },
          "No"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Or": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployNewsFeeds"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployCustomIngestion"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployYouTubeCommentsIngestion"
                  },
                  "Yes"
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployRedditIngestion\" is set to \"No\", then at least one of \"DeployYouTubeCommentsIngestion\", \"DeployNewsFeeds\", \"DeployCustomIngestion\" should be set to \"Yes\". At least one ingestion mechanism is required."
        }
      ]
    },
    "DeployCustomIngestionValidation": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "DeployCustomIngestion"
          },
          "No"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Or": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployNewsFeeds"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployYouTubeCommentsIngestion"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "DeployRedditIngestion"
                  },
                  "Yes"
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployCustomIngestion\" is set to \"No\", then at least one of \"DeployNewsFeeds\" or \"DeployYouTubeCommentsIngestion\" should be set to \"Yes\". At least one ingestion mechanism is required."
        }
      ]
    },
    "ValidateNewsFeedsMandatoryParam": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "DeployNewsFeeds"
          },
          "Yes"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "NewsFeedIngestFrequency"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployNewsFeeds\" is set to \"Yes\", then \"NewsFeedIngestFrequency\" should be provided. It cannot be blank"
        }
      ]
    },
    "ValidateYouTubeCommentsMandatoryParam": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "DeployYouTubeCommentsIngestion"
          },
          "Yes"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "YouTubeSearchIngestionFreq"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployYouTubeCommentsIngestion\" is set to \"Yes\" then \"YouTubeSearchIngestionFreq\" should be provided. It cannot be blank"
        },
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::And": [
                  {
                    "Fn::Equals": [
                      {
                        "Ref": "YoutubeSearchQuery"
                      },
                      ""
                    ]
                  },
                  {
                    "Fn::Equals": [
                      {
                        "Ref": "YouTubeChannel"
                      },
                      ""
                    ]
                  }
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployYouTubeCommentsIngestion\" is set to \"Yes\" then at least one parameter from \"YouTubeVideoSearchQuery\" and \"YouTubeChannel\" should be provided. Both cannot be blank"
        },
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "YoutubeAPIKey"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployYouTubeCommentsIngestion\" is set to \"Yes\" then \"YoutubeAPIKey\" should be provided. It cannot be blank"
        }
      ]
    },
    "ValidateRedditIngestionMandatoryParam": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "DeployRedditIngestion"
          },
          "Yes"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "RedditAPIKey"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployRedditIngestion\" is set to \"Yes\" then \"RedditAPIKey\" should be provided. It cannot be blank"
        },
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "RedditIngestionFrequency"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployRedditIngestion\" is set to \"Yes\" then \"RedditIngestionFrequency\" should be provided. It cannot be blank"
        },
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "SubRedditsToFollow"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "If \"DeployRedditIngestion\" is set to \"Yes\" then \"SubRedditsToFollow\" should be provided. It cannot be blank"
        }
      ]
    }
  },
  "Conditions": {
    "SolutionHelperAnonymousDatatoAWSD898118F": {
      "Fn::Equals": [
        "Yes",
        "Yes"
      ]
    },
    "DeployQuickSight": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "QuickSightPrincipalArn"
            },
            ""
          ]
        }
      ]
    },
    "IngestionDeployRSSFeeds0E648DA1": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "DeployNewsFeeds"
            },
            "Yes"
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "NewsFeedIngestFrequency"
                },
                ""
              ]
            }
          ]
        }
      ]
    },
    "IngestionDeployYouTubeCommentsA44A0A50": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "DeployYouTubeCommentsIngestion"
            },
            "Yes"
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "YouTubeSearchIngestionFreq"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::And": [
                {
                  "Fn::Equals": [
                    {
                      "Ref": "YoutubeSearchQuery"
                    },
                    ""
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "YouTubeChannel"
                    },
                    ""
                  ]
                }
              ]
            }
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "YoutubeAPIKey"
                },
                ""
              ]
            }
          ]
        }
      ]
    },
    "IngestionDeployCustomIngestion93AB274A": {
      "Fn::Equals": [
        {
          "Ref": "DeployCustomIngestion"
        },
        "Yes"
      ]
    },
    "IngestionDeployRedditIngestionB0819499": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "DeployRedditIngestion"
            },
            "Yes"
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "RedditAPIKey"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "RedditIngestionFrequency"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "SubRedditsToFollow"
                },
                ""
              ]
            }
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Resources": {
    "SolutionHelperRoleC017C62A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "CloudWatchLogsPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/SolutionHelper/Role/Role/Resource"
      }
    },
    "SolutionHelper4825923B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset9e49e7dd98c40d370bf8986d9492fc0debd38d0e97bfab71afd576a5a18481f2.zip"
        },
        "Description": "This function generates UUID for each deployment and sends anonymous data to the AWS Solutions team",
        "Environment": {
          "Variables": {
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "SolutionHelperRoleC017C62A",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 30
      },
      "DependsOn": [
        "SolutionHelperRoleC017C62A"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/SolutionHelper/SolutionHelper/Resource",
        "aws:asset:path": "asset.9e49e7dd98c40d370bf8986d9492fc0debd38d0e97bfab71afd576a5a18481f2",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "SolutionHelperCreateUniqueIDAF03406A": {
      "Type": "Custom::CreateUUID",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SolutionHelper4825923B",
            "Arn"
          ]
        },
        "Resource": "UUID"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/SolutionHelper/CreateUniqueID/Default"
      }
    },
    "SolutionHelperSendAnonymousData9B19E31D": {
      "Type": "Custom::AnonymousData",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SolutionHelper4825923B",
            "Arn"
          ]
        },
        "Resource": "AnonymousMetric",
        "SolutionId": "SO0122",
        "UUID": {
          "Fn::GetAtt": [
            "SolutionHelperCreateUniqueIDAF03406A",
            "UUID"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "Version": "v2.2.1",
        "TopicJobFreq": {
          "Ref": "TopicAnalysisFrequency"
        },
        "NewsFeedsIngestionEnabled": {
          "Ref": "DeployNewsFeeds"
        },
        "NewsFeedsIngestionFreq": {
          "Ref": "NewsFeedIngestFrequency"
        },
        "NewsFeedsSearchQuery": {
          "Ref": "NewsSearchQuery"
        },
        "YoutubeIngestionEnabled": {
          "Ref": "DeployYouTubeCommentsIngestion"
        },
        "YouTubeIngestionFreq": {
          "Ref": "YouTubeSearchIngestionFreq"
        },
        "YoutubeSearchQuery": {
          "Ref": "YoutubeSearchQuery"
        },
        "YoutubeChannelId": {
          "Ref": "YouTubeChannel"
        },
        "RedditIngestionEnabled": {
          "Ref": "DeployRedditIngestion"
        },
        "RedditIngestionFreq": {
          "Ref": "RedditIngestionFrequency"
        },
        "SubredditsToFollow": {
          "Ref": "SubRedditsToFollow"
        },
        "DeployCustomIngestion": {
          "Ref": "DeployCustomIngestion"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/SolutionHelper/SendAnonymousData/Default"
      },
      "Condition": "SolutionHelperAnonymousDatatoAWSD898118F"
    },
    "AccessLogD598EBE9": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket"
            }
          ]
        }
      }
    },
    "AccessLogPolicy4B3DB856": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "AccessLogD598EBE9"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AccessLogD598EBE9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AccessLogD598EBE9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "InfOutputS3Bucket912BB856",
                      "Arn"
                    ]
                  }
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogD598EBE9",
                        "Arn"
                      ]
                    },
                    "/InfOutput/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    {
                      "Fn::GetAtt": [
                        "InfOutputS3Bucket912BB856",
                        "Arn"
                      ]
                    }
                  ]
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogD598EBE9",
                        "Arn"
                      ]
                    },
                    "/InfOutput*"
                  ]
                ]
              },
              "Sid": "InfOutputAccessLogsPolicy"
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "TextWfEngineS3BucketE4A78E92",
                      "Arn"
                    ]
                  }
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogD598EBE9",
                        "Arn"
                      ]
                    },
                    "/TextWfEngine/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    {
                      "Fn::GetAtt": [
                        "TextWfEngineS3BucketE4A78E92",
                        "Arn"
                      ]
                    }
                  ]
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogD598EBE9",
                        "Arn"
                      ]
                    },
                    "/TextWfEngine*"
                  ]
                ]
              },
              "Sid": "TextWfEngineAccessLogsPolicy"
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "TextWfEngineImageBucketS3BucketF03EE090",
                      "Arn"
                    ]
                  }
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogD598EBE9",
                        "Arn"
                      ]
                    },
                    "/TextWfEngine/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    {
                      "Fn::GetAtt": [
                        "TextWfEngineImageBucketS3BucketF03EE090",
                        "Arn"
                      ]
                    }
                  ]
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogD598EBE9",
                        "Arn"
                      ]
                    },
                    "/TextWfEngine*"
                  ]
                ]
              },
              "Sid": "TextWfEngineAccessLogsPolicy"
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "TopicWFEngineTopicIngestionS3Bucket9639D507",
                      "Arn"
                    ]
                  }
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogD598EBE9",
                        "Arn"
                      ]
                    },
                    "/TopicWFEngine-TopicIngestion/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    {
                      "Fn::GetAtt": [
                        "TopicWFEngineTopicIngestionS3Bucket9639D507",
                        "Arn"
                      ]
                    }
                  ]
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogD598EBE9",
                        "Arn"
                      ]
                    },
                    "/TopicWFEngine-TopicIngestion*"
                  ]
                ]
              },
              "Sid": "TopicWFEngine-TopicIngestionAccessLogsPolicy"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AccessLog/Policy/Resource"
      }
    },
    "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "QuickSightSourceTemplateArn": "arn:aws:quicksight:us-east-1:898061675696:template/solutions_discovering-hot-topics-using-machine-learning_v2_2_1",
          "QuickSightPrincipalArn": {
            "Ref": "QuickSightPrincipalArn"
          },
          "SolutionID": "SO0122",
          "SolutionName": "discovering-hot-topics-using-machine-learning",
          "ParentStackName": {
            "Ref": "AWS::StackName"
          },
          "referencetodiscoveringhottopicsusingmachinelearningCustomConfigPythonLibLayer8E1A67F9Ref": {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "discovering-hot-topics-using-machine-learning/v2.2.1/discoveringhottopicsusingmachinelearningQSDashboardDC3AC085.nested.template"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/QSDashboard.NestedStack/QSDashboard.NestedStackResource",
        "nestedStackFileName": "discoveringhottopicsusingmachinelearningQSDashboardDC3AC085.nested.template",
        "aws:asset:path": "discoveringhottopicsusingmachinelearningQSDashboardDC3AC085.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeployQuickSight"
    },
    "InfOutputS3Bucket912BB856": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "AccessLogD598EBE9"
          },
          "LogFilePrefix": "InfOutput/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W51",
              "reason": "This S3 bucket Bucket does not need a bucket policy. The access to the bucket is restricted to Kinesis Fireshose using IAM Role policy"
            }
          ]
        }
      }
    },
    "InfOutputS3BucketPolicyD6B36C5F": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "InfOutputS3Bucket912BB856"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/S3Bucket/Policy/Resource"
      }
    },
    "InfOutputInfDBGlueSecConfigB94B8521": {
      "Type": "AWS::Glue::SecurityConfiguration",
      "Properties": {
        "EncryptionConfiguration": {
          "CloudWatchEncryption": {
            "CloudWatchEncryptionMode": "SSE-KMS",
            "KmsKeyArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":kms:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":alias/aws/glue"
                ]
              ]
            }
          },
          "JobBookmarksEncryption": {
            "JobBookmarksEncryptionMode": "CSE-KMS",
            "KmsKeyArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":kms:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":alias/aws/glue"
                ]
              ]
            }
          },
          "S3Encryptions": [
            {
              "S3EncryptionMode": "SSE-S3"
            }
          ]
        },
        "Name": "socialmediadb-sec-config"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/GlueSecConfig"
      }
    },
    "InfOutputInfDBTweetDBFCE9A363": {
      "Type": "AWS::Glue::Database",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseInput": {
          "Name": "socialmediadb"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/TweetDB/Resource"
      }
    },
    "InfOutputInfDBTweetDBEncryption9347BFE1": {
      "Type": "AWS::Glue::DataCatalogEncryptionSettings",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DataCatalogEncryptionSettings": {
          "EncryptionAtRest": {
            "CatalogEncryptionMode": "SSE-KMS",
            "SseAwsKmsKeyId": "alias/aws/glue"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/TweetDBEncryption"
      }
    },
    "InfOutputInfDBSentimentCfnsentiment4515EA50": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for sentiment",
          "Name": "sentiment",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "translated_text",
                "Type": "string"
              },
              {
                "Name": "sentiment",
                "Type": "string"
              },
              {
                "Name": "sentimentposscore",
                "Type": "double"
              },
              {
                "Name": "sentimentnegscore",
                "Type": "double"
              },
              {
                "Name": "sentimentneuscore",
                "Type": "double"
              },
              {
                "Name": "sentimentmixscore",
                "Type": "double"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/sentiment/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/Sentiment/Cfnsentiment"
      }
    },
    "InfOutputInfDBEntityCfnentity2D4BD916": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for entity",
          "Name": "entity",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "translated_text",
                "Type": "string"
              },
              {
                "Name": "entity_text",
                "Type": "string"
              },
              {
                "Name": "entity_type",
                "Type": "string"
              },
              {
                "Name": "entity_score",
                "Type": "double"
              },
              {
                "Name": "entity_begin_offset",
                "Type": "int"
              },
              {
                "Name": "entity_end_offset",
                "Type": "int"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/entity/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/Entity/Cfnentity"
      }
    },
    "InfOutputInfDBKeyPhraseCfnkeyphraseD90199E0": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for keyphrase",
          "Name": "keyphrase",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "translated_text",
                "Type": "string"
              },
              {
                "Name": "phrase",
                "Type": "string"
              },
              {
                "Name": "phrase_score",
                "Type": "double"
              },
              {
                "Name": "phrase_begin_offset",
                "Type": "int"
              },
              {
                "Name": "phrase_end_offset",
                "Type": "int"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/keyphrase/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/KeyPhrase/Cfnkeyphrase"
      }
    },
    "InfOutputInfDBTopicsCfntopicsD325F16D": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for topics",
          "Name": "topics",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "job_id",
                "Type": "string"
              },
              {
                "Name": "job_timestamp",
                "Type": "timestamp"
              },
              {
                "Name": "term",
                "Type": "string"
              },
              {
                "Name": "weight",
                "Type": "double"
              },
              {
                "Name": "topic",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/topics/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/Topics/Cfntopics"
      }
    },
    "InfOutputInfDBTopicMappingsCfntopicmappings1FD93EBE": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for topicmappings",
          "Name": "topicmappings",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "job_id",
                "Type": "string"
              },
              {
                "Name": "job_timestamp",
                "Type": "timestamp"
              },
              {
                "Name": "topic",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/topicmappings/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/TopicMappings/Cfntopicmappings"
      }
    },
    "InfOutputInfDBTxtInImgEntityCfntxtinimgentity2A31982D": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for txtinimgentity",
          "Name": "txtinimgentity",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "entity_text",
                "Type": "string"
              },
              {
                "Name": "entity_type",
                "Type": "string"
              },
              {
                "Name": "entity_score",
                "Type": "double"
              },
              {
                "Name": "entity_begin_offset",
                "Type": "int"
              },
              {
                "Name": "entity_end_offset",
                "Type": "int"
              },
              {
                "Name": "image_url",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/txtinimgentity/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/TxtInImgEntity/Cfntxtinimgentity"
      }
    },
    "InfOutputInfDBTxtInImgKeyPhraseCfntxtinimgkeyphrase8D3B0896": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for txtinimgkeyphrase",
          "Name": "txtinimgkeyphrase",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "phrase",
                "Type": "string"
              },
              {
                "Name": "phrase_score",
                "Type": "double"
              },
              {
                "Name": "phrase_begin_offset",
                "Type": "int"
              },
              {
                "Name": "phrase_end_offset",
                "Type": "int"
              },
              {
                "Name": "image_url",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/txtinimgkeyphrase/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/TxtInImgKeyPhrase/Cfntxtinimgkeyphrase"
      }
    },
    "InfOutputInfDBTxtInImgSentimentCfntxtinimgsentiment39041AA7": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for txtinimgsentiment",
          "Name": "txtinimgsentiment",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "sentiment",
                "Type": "string"
              },
              {
                "Name": "sentimentposscore",
                "Type": "double"
              },
              {
                "Name": "sentimentnegscore",
                "Type": "double"
              },
              {
                "Name": "sentimentneuscore",
                "Type": "double"
              },
              {
                "Name": "sentimentmixscore",
                "Type": "double"
              },
              {
                "Name": "image_url",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/txtinimgsentiment/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/TxtInImgSentiment/Cfntxtinimgsentiment"
      }
    },
    "InfOutputInfDBModerationLabelsCfnmoderationlabelsE089DE88": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for moderationlabels",
          "Name": "moderationlabels",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "image_url",
                "Type": "string"
              },
              {
                "Name": "label_name",
                "Type": "string"
              },
              {
                "Name": "confidence",
                "Type": "double"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/moderationlabels/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/ModerationLabels/Cfnmoderationlabels"
      }
    },
    "InfOutputInfDBTwitterCfntwfeedstorageD526E094": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for twfeedstorage",
          "Name": "twfeedstorage",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "coordinates",
                "Type": "struct<type:string,coordinates:array<double>>"
              },
              {
                "Name": "retweeted",
                "Type": "boolean"
              },
              {
                "Name": "source",
                "Type": "string"
              },
              {
                "Name": "entities",
                "Type": "struct<hastags:array<struct<text:string,indices:array<bigint>>>,urls:array<struct<url:string,expanded_url:string,display_url:string,indices:array<bigint>>>>"
              },
              {
                "Name": "reply_count",
                "Type": "bigint"
              },
              {
                "Name": "favorite_count",
                "Type": "bigint"
              },
              {
                "Name": "geo",
                "Type": "struct<type:string,coordinates:array<double>>"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "truncated",
                "Type": "boolean"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "retweet_count",
                "Type": "bigint"
              },
              {
                "Name": "possibly_sensitive",
                "Type": "boolean"
              },
              {
                "Name": "filter_level",
                "Type": "string"
              },
              {
                "Name": "place",
                "Type": "struct<id:string,url:string,place_type:string,name:string,full_name:string,country_code:string,country:string,bounding_box:struct<type:string,coordinates:array<array<array<float>>>>>"
              },
              {
                "Name": "favorited",
                "Type": "boolean"
              },
              {
                "Name": "lang",
                "Type": "string"
              },
              {
                "Name": "in_reply_to_screen_name",
                "Type": "string"
              },
              {
                "Name": "is_quote_status",
                "Type": "boolean"
              },
              {
                "Name": "in_reply_to_user_id_str",
                "Type": "string"
              },
              {
                "Name": "user",
                "Type": "struct<id:string,id_str:string,name:string,screen_name:string,location:string,url:string,description:string,translator_type:string,protected:boolean,verfied:boolean,followers_count:bigint,friends_count:bigint,listed_count:bigint,favourites_count:bigint,statuses_count:bigint,created_at:string,utc_offset:bigint,time_zone:bigint,geo_enabled:boolean,lang:string,contributors_enabled:boolean,is_translator:boolean,profile_background_color:string,profile_background_image_url:string,profile_background_image_url_https:string,profile_background_tile:boolean,profile_link_color:string,profile_sidebar_border_color:string,profile_sidebar_fill_color:string,profile_text_color:string,profile_use_background_image:boolean,profile_image_url:string,profile_image_url_https:string,profile_banner_url:string,default_profile:boolean,default_profile_image:boolean>"
              },
              {
                "Name": "quote_count",
                "Type": "bigint"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/twfeedstorage/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/Twitter/Cfntwfeedstorage"
      }
    },
    "InfOutputInfDBNewsFeedCfnnewsfeedstorageBE602E45": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for newsfeedstorage",
          "Name": "newsfeedstorage",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "entities",
                "Type": "struct<urls:array<struct<expanded_url:string>>,media:array<struct<media_url:string>>>"
              },
              {
                "Name": "metadata",
                "Type": "struct<website:string,country:string,topic:string>"
              },
              {
                "Name": "lang",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "translated_text",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/newsfeedstorage/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/NewsFeed/Cfnnewsfeedstorage"
      }
    },
    "InfOutputInfDBYoutubeCommentsCfnyoutubecomments40466877": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for youtubecomments",
          "Name": "youtubecomments",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "video_id",
                "Type": "string"
              },
              {
                "Name": "title",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "parent_id",
                "Type": "string"
              },
              {
                "Name": "viewer_rating",
                "Type": "string"
              },
              {
                "Name": "like_count",
                "Type": "int"
              },
              {
                "Name": "updated_at",
                "Type": "timestamp"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "lang",
                "Type": "string"
              },
              {
                "Name": "_translated_text",
                "Type": "string"
              },
              {
                "Name": "_cleansed_text",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/youtubecomments/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/YoutubeComments/Cfnyoutubecomments"
      }
    },
    "InfOutputInfDBCustomIngestionCfncustomingestion399D1616": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for customingestion",
          "Name": "customingestion",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "parent_id",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "lang",
                "Type": "string"
              },
              {
                "Name": "_translated_text",
                "Type": "string"
              },
              {
                "Name": "_cleansed_text",
                "Type": "string"
              },
              {
                "Name": "source_file",
                "Type": "string"
              },
              {
                "Name": "Id",
                "Type": "string"
              },
              {
                "Name": "BeginOffsetMillis",
                "Type": "bigint"
              },
              {
                "Name": "EndOffsetMillis",
                "Type": "bigint"
              },
              {
                "Name": "Sentiment",
                "Type": "string"
              },
              {
                "Name": "ParticipantRole",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/customingestion/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/CustomIngestion/Cfncustomingestion"
      }
    },
    "InfOutputInfDBCustomIngestionLoudnessCfncustomingestionloudness1E93A146": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for customingestionloudness",
          "Name": "customingestionloudness",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "score",
                "Type": "float"
              },
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "parent_id",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/customingestionloudness/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/CustomIngestionLoudness/Cfncustomingestionloudness"
      }
    },
    "InfOutputInfDBCustomIngestionItemCfncustomingestionitem6A36B2C7": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for customingestionitem",
          "Name": "customingestionitem",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "parent_id",
                "Type": "string"
              },
              {
                "Name": "Type",
                "Type": "string"
              },
              {
                "Name": "Confidence",
                "Type": "float"
              },
              {
                "Name": "Content",
                "Type": "string"
              },
              {
                "Name": "BeginOffsetMillis",
                "Type": "bigint"
              },
              {
                "Name": "EndOffsetMillis",
                "Type": "bigint"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/customingestionitem/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/CustomIngestionItem/Cfncustomingestionitem"
      }
    },
    "InfOutputInfDBMetadataCfnmetadata2159F8A4": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for metadata",
          "Name": "metadata",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "parent_id",
                "Type": "string"
              },
              {
                "Name": "Categories",
                "Type": "struct<MatchedCategories:array<string>>"
              },
              {
                "Name": "Channel",
                "Type": "string"
              },
              {
                "Name": "JobName",
                "Type": "string"
              },
              {
                "Name": "Participants",
                "Type": "array<struct<ParticipantRole:string>>"
              },
              {
                "Name": "ConversationCharacteristics",
                "Type": "struct<NonTalkTime:struct<Instances:array<struct<BeginOffsetMillis:bigint,DurationMillis:bigint,EndOffsetMillis:bigint>>,TotalTimeMillis:bigint>,Interruptions:struct<TotalCount:int,TotalTimeMillis:bigint,InterruptionsByInterrupter:struct<AGENT:array<struct<BeginOffsetMillis:bigint,DurationMillis:bigint,EndOffsetMillis:bigint>>>>,TotalConversationDurationMillis:bigint,Sentiment:struct<OverallSentiment:struct<AGENT:float,CUSTOMER:float>,SentimentByPeriod:struct<QUARTER:struct<AGENT:array<struct<Score:float,BeginOffsetMillis:bigint,EndOffsetMillis:bigint>>,CUSTOMER:array<struct<Score:float,BeginOffsetMillis:bigint,EndOffsetMillis:bigint>>>>>,TalkSpeed:struct<DetailsByParticipant:struct<AGENT:struct<AverageWordsPerMinute:int>,CUSTOMER:struct<AverageWordsPerMinute:int>>>,TalkTime:struct<DetailsByParticipant:struct<AGENT:struct<TotalTimeMillis:bigint>,CUSTOMER:struct<TotalTimeMillis:bigint>>,TotalTimeMillis:bigint>>"
              },
              {
                "Name": "ContentMetadata",
                "Type": "struct<Output:string>"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/metadata/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/Metadata/Cfnmetadata"
      }
    },
    "InfOutputInfDBRedditCommentsCfnredditcomments068955C4": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "InfOutputInfDBTweetDBFCE9A363"
        },
        "TableInput": {
          "Description": "A table created with partition projection for redditcomments",
          "Name": "redditcomments",
          "Parameters": {
            "classification": "parquet",
            "has_encryped_data": false,
            "projection.enabled": "TRUE",
            "projection.created_at.range": "NOW-45DAYS,NOW",
            "projection.created_at.type": "date",
            "projection.created_at.format": "yyyy-MM-dd"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_name",
                "Type": "string"
              },
              {
                "Name": "platform",
                "Type": "string"
              },
              {
                "Name": "search_query",
                "Type": "string"
              },
              {
                "Name": "id_str",
                "Type": "string"
              },
              {
                "Name": "text",
                "Type": "string"
              },
              {
                "Name": "translated_text",
                "Type": "string"
              },
              {
                "Name": "subreddit_id",
                "Type": "string"
              },
              {
                "Name": "link_title",
                "Type": "string"
              },
              {
                "Name": "ups",
                "Type": "int"
              },
              {
                "Name": "total_awards_received",
                "Type": "int"
              },
              {
                "Name": "subreddit",
                "Type": "string"
              },
              {
                "Name": "link_author",
                "Type": "string"
              },
              {
                "Name": "likes",
                "Type": "string"
              },
              {
                "Name": "replies",
                "Type": "string"
              },
              {
                "Name": "id",
                "Type": "string"
              },
              {
                "Name": "author",
                "Type": "string"
              },
              {
                "Name": "num_comments",
                "Type": "int"
              },
              {
                "Name": "parent_id",
                "Type": "string"
              },
              {
                "Name": "score",
                "Type": "float"
              },
              {
                "Name": "author_fullname",
                "Type": "string"
              },
              {
                "Name": "controversiality",
                "Type": "float"
              },
              {
                "Name": "author_premium",
                "Type": "boolean"
              },
              {
                "Name": "link_id",
                "Type": "string"
              },
              {
                "Name": "permalink",
                "Type": "string"
              },
              {
                "Name": "subreddit_type",
                "Type": "string"
              },
              {
                "Name": "link_permalink",
                "Type": "string"
              },
              {
                "Name": "name",
                "Type": "string"
              },
              {
                "Name": "subreddit_name_prefixed",
                "Type": "string"
              },
              {
                "Name": "created_utc",
                "Type": "bigint"
              },
              {
                "Name": "link_url",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "InfOutputS3Bucket912BB856"
                  },
                  "/redditcomments/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/InfDB/RedditComments/Cfnredditcomments"
      }
    },
    "InfOutputSentimentFirehoseRoleE1BCFCF1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/FirehoseRole/Resource"
      }
    },
    "InfOutputSentimentFirehoseRoleDefaultPolicy4DA6FD86": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputSentimentFirehoseRoleDefaultPolicy4DA6FD86",
        "Roles": [
          {
            "Ref": "InfOutputSentimentFirehoseRoleE1BCFCF1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputSentimentFirehoseGlueTablePolicyE75E5B65": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBSentimentCfnsentiment4515EA50"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputSentimentFirehoseGlueTablePolicyE75E5B65",
        "Roles": [
          {
            "Ref": "InfOutputSentimentFirehoseRoleE1BCFCF1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputSentimentFirehoseGlueKmsE680036F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputSentimentFirehoseGlueKmsE680036F",
        "Roles": [
          {
            "Ref": "InfOutputSentimentFirehoseRoleE1BCFCF1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputSentimentKinesisFirehosefirehoseloggroup1773E09F": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputSentimentKinesisFirehosefirehoseloggroupfirehoselogstream671C8547": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputSentimentKinesisFirehosefirehoseloggroup1773E09F"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputSentimentKinesisFirehoseKinesisFirehoseRole859EA33B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputSentimentKinesisFirehoseKinesisFirehosePolicy302ED509": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputSentimentKinesisFirehosefirehoseloggroup1773E09F"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputSentimentKinesisFirehosefirehoseloggroupfirehoselogstream671C8547"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputSentimentKinesisFirehoseKinesisFirehosePolicy302ED509",
        "Roles": [
          {
            "Ref": "InfOutputSentimentKinesisFirehoseKinesisFirehoseRole859EA33B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputSentimentKinesisFirehose06D4FFF8": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopSentimentKinesisFirehose6F091F65",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputSentimentKinesisFirehosefirehoseloggroup1773E09F"
            },
            "LogStreamName": {
              "Ref": "InfOutputSentimentKinesisFirehosefirehoseloggroupfirehoselogstream671C8547"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputSentimentFirehoseRoleE1BCFCF1",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBSentimentCfnsentiment4515EA50"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/sentiment/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "sentiment/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputSentimentFirehoseRoleE1BCFCF1",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputSentimentFirehoseGlueKmsE680036F",
        "InfOutputSentimentFirehoseGlueTablePolicyE75E5B65",
        "InfOutputSentimentFirehoseRoleDefaultPolicy4DA6FD86",
        "InfOutputSentimentFirehoseRoleE1BCFCF1"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Sentiment/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputEntityFirehoseRole05979D42": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/FirehoseRole/Resource"
      }
    },
    "InfOutputEntityFirehoseRoleDefaultPolicy5576AEBB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputEntityFirehoseRoleDefaultPolicy5576AEBB",
        "Roles": [
          {
            "Ref": "InfOutputEntityFirehoseRole05979D42"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputEntityFirehoseGlueTablePolicy77D2C852": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBEntityCfnentity2D4BD916"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputEntityFirehoseGlueTablePolicy77D2C852",
        "Roles": [
          {
            "Ref": "InfOutputEntityFirehoseRole05979D42"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputEntityFirehoseGlueKms48D8DB4F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputEntityFirehoseGlueKms48D8DB4F",
        "Roles": [
          {
            "Ref": "InfOutputEntityFirehoseRole05979D42"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputEntityKinesisFirehosefirehoseloggroup3B5C1AB8": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputEntityKinesisFirehosefirehoseloggroupfirehoselogstream7EA3CAEF": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputEntityKinesisFirehosefirehoseloggroup3B5C1AB8"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputEntityKinesisFirehoseKinesisFirehoseRole291E90A3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputEntityKinesisFirehoseKinesisFirehosePolicyA91FCF29": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputEntityKinesisFirehosefirehoseloggroup3B5C1AB8"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputEntityKinesisFirehosefirehoseloggroupfirehoselogstream7EA3CAEF"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputEntityKinesisFirehoseKinesisFirehosePolicyA91FCF29",
        "Roles": [
          {
            "Ref": "InfOutputEntityKinesisFirehoseKinesisFirehoseRole291E90A3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputEntityKinesisFirehoseD4CD76B3": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopputEntityKinesisFirehoseA857C6BE",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputEntityKinesisFirehosefirehoseloggroup3B5C1AB8"
            },
            "LogStreamName": {
              "Ref": "InfOutputEntityKinesisFirehosefirehoseloggroupfirehoselogstream7EA3CAEF"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputEntityFirehoseRole05979D42",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBEntityCfnentity2D4BD916"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/entity/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "entity/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputEntityFirehoseRole05979D42",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputEntityFirehoseGlueKms48D8DB4F",
        "InfOutputEntityFirehoseGlueTablePolicy77D2C852",
        "InfOutputEntityFirehoseRoleDefaultPolicy5576AEBB",
        "InfOutputEntityFirehoseRole05979D42"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Entity/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputKeyPhraseFirehoseRole6BBC26A9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/FirehoseRole/Resource"
      }
    },
    "InfOutputKeyPhraseFirehoseRoleDefaultPolicy94F5FD8A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputKeyPhraseFirehoseRoleDefaultPolicy94F5FD8A",
        "Roles": [
          {
            "Ref": "InfOutputKeyPhraseFirehoseRole6BBC26A9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputKeyPhraseFirehoseGlueTablePolicyF15DE6E0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBKeyPhraseCfnkeyphraseD90199E0"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputKeyPhraseFirehoseGlueTablePolicyF15DE6E0",
        "Roles": [
          {
            "Ref": "InfOutputKeyPhraseFirehoseRole6BBC26A9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputKeyPhraseFirehoseGlueKms80F1A363": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputKeyPhraseFirehoseGlueKms80F1A363",
        "Roles": [
          {
            "Ref": "InfOutputKeyPhraseFirehoseRole6BBC26A9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputKeyPhraseKinesisFirehosefirehoseloggroup60E504AB": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputKeyPhraseKinesisFirehosefirehoseloggroupfirehoselogstream802ED1A8": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputKeyPhraseKinesisFirehosefirehoseloggroup60E504AB"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputKeyPhraseKinesisFirehoseKinesisFirehoseRoleE1330BCB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputKeyPhraseKinesisFirehoseKinesisFirehosePolicyB443B07E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputKeyPhraseKinesisFirehosefirehoseloggroup60E504AB"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputKeyPhraseKinesisFirehosefirehoseloggroupfirehoselogstream802ED1A8"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputKeyPhraseKinesisFirehoseKinesisFirehosePolicyB443B07E",
        "Roles": [
          {
            "Ref": "InfOutputKeyPhraseKinesisFirehoseKinesisFirehoseRoleE1330BCB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputKeyPhraseKinesisFirehose0BA3FD35": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopKeyPhraseKinesisFirehose2680F10E",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputKeyPhraseKinesisFirehosefirehoseloggroup60E504AB"
            },
            "LogStreamName": {
              "Ref": "InfOutputKeyPhraseKinesisFirehosefirehoseloggroupfirehoselogstream802ED1A8"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputKeyPhraseFirehoseRole6BBC26A9",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBKeyPhraseCfnkeyphraseD90199E0"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/keyphrase/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "keyphrase/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputKeyPhraseFirehoseRole6BBC26A9",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputKeyPhraseFirehoseGlueKms80F1A363",
        "InfOutputKeyPhraseFirehoseGlueTablePolicyF15DE6E0",
        "InfOutputKeyPhraseFirehoseRoleDefaultPolicy94F5FD8A",
        "InfOutputKeyPhraseFirehoseRole6BBC26A9"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/KeyPhrase/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputTopicsFirehoseRole0DADFB12": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/FirehoseRole/Resource"
      }
    },
    "InfOutputTopicsFirehoseRoleDefaultPolicy470A391B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicsFirehoseRoleDefaultPolicy470A391B",
        "Roles": [
          {
            "Ref": "InfOutputTopicsFirehoseRole0DADFB12"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputTopicsFirehoseGlueTablePolicy8E2FF8C0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBTopicsCfntopicsD325F16D"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicsFirehoseGlueTablePolicy8E2FF8C0",
        "Roles": [
          {
            "Ref": "InfOutputTopicsFirehoseRole0DADFB12"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputTopicsFirehoseGlueKms01559801": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicsFirehoseGlueKms01559801",
        "Roles": [
          {
            "Ref": "InfOutputTopicsFirehoseRole0DADFB12"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputTopicsKinesisFirehosefirehoseloggroup8F1268CD": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputTopicsKinesisFirehosefirehoseloggroupfirehoselogstreamD7783A3C": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputTopicsKinesisFirehosefirehoseloggroup8F1268CD"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputTopicsKinesisFirehoseKinesisFirehoseRole3566F433": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputTopicsKinesisFirehoseKinesisFirehosePolicyC87A1C8E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputTopicsKinesisFirehosefirehoseloggroup8F1268CD"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputTopicsKinesisFirehosefirehoseloggroupfirehoselogstreamD7783A3C"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicsKinesisFirehoseKinesisFirehosePolicyC87A1C8E",
        "Roles": [
          {
            "Ref": "InfOutputTopicsKinesisFirehoseKinesisFirehoseRole3566F433"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputTopicsKinesisFirehose2CC7DEAE": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopputTopicsKinesisFirehose2E809517",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputTopicsKinesisFirehosefirehoseloggroup8F1268CD"
            },
            "LogStreamName": {
              "Ref": "InfOutputTopicsKinesisFirehosefirehoseloggroupfirehoselogstreamD7783A3C"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputTopicsFirehoseRole0DADFB12",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBTopicsCfntopicsD325F16D"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/topics/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "topics/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputTopicsFirehoseRole0DADFB12",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputTopicsFirehoseGlueKms01559801",
        "InfOutputTopicsFirehoseGlueTablePolicy8E2FF8C0",
        "InfOutputTopicsFirehoseRoleDefaultPolicy470A391B",
        "InfOutputTopicsFirehoseRole0DADFB12"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Topics/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputTopicMappingsFirehoseRole4FBBAE59": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/FirehoseRole/Resource"
      }
    },
    "InfOutputTopicMappingsFirehoseRoleDefaultPolicyF02E6FD6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicMappingsFirehoseRoleDefaultPolicyF02E6FD6",
        "Roles": [
          {
            "Ref": "InfOutputTopicMappingsFirehoseRole4FBBAE59"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputTopicMappingsFirehoseGlueTablePolicy60229987": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBTopicMappingsCfntopicmappings1FD93EBE"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicMappingsFirehoseGlueTablePolicy60229987",
        "Roles": [
          {
            "Ref": "InfOutputTopicMappingsFirehoseRole4FBBAE59"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputTopicMappingsFirehoseGlueKmsBBB03097": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicMappingsFirehoseGlueKmsBBB03097",
        "Roles": [
          {
            "Ref": "InfOutputTopicMappingsFirehoseRole4FBBAE59"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputTopicMappingsKinesisFirehosefirehoseloggroupAE880EF1": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputTopicMappingsKinesisFirehosefirehoseloggroupfirehoselogstream81C5E592": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputTopicMappingsKinesisFirehosefirehoseloggroupAE880EF1"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputTopicMappingsKinesisFirehoseKinesisFirehoseRole6AC0B464": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputTopicMappingsKinesisFirehoseKinesisFirehosePolicyD60DF590": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputTopicMappingsKinesisFirehosefirehoseloggroupAE880EF1"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputTopicMappingsKinesisFirehosefirehoseloggroupfirehoselogstream81C5E592"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicMappingsKinesisFirehoseKinesisFirehosePolicyD60DF590",
        "Roles": [
          {
            "Ref": "InfOutputTopicMappingsKinesisFirehoseKinesisFirehoseRole6AC0B464"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputTopicMappingsKinesisFirehose97CCA8A9": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopcMappingsKinesisFirehose6ABC2A9B",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputTopicMappingsKinesisFirehosefirehoseloggroupAE880EF1"
            },
            "LogStreamName": {
              "Ref": "InfOutputTopicMappingsKinesisFirehosefirehoseloggroupfirehoselogstream81C5E592"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputTopicMappingsFirehoseRole4FBBAE59",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBTopicMappingsCfntopicmappings1FD93EBE"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/topicmappings/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "topicmappings/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputTopicMappingsFirehoseRole4FBBAE59",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputTopicMappingsFirehoseGlueKmsBBB03097",
        "InfOutputTopicMappingsFirehoseGlueTablePolicy60229987",
        "InfOutputTopicMappingsFirehoseRoleDefaultPolicyF02E6FD6",
        "InfOutputTopicMappingsFirehoseRole4FBBAE59"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicMappings/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputTxtInImgEntityFirehoseRoleAFB87ACD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/FirehoseRole/Resource"
      }
    },
    "InfOutputTxtInImgEntityFirehoseRoleDefaultPolicy89DA5AF3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgEntityFirehoseRoleDefaultPolicy89DA5AF3",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgEntityFirehoseRoleAFB87ACD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputTxtInImgEntityFirehoseGlueTablePolicyBA8517BE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBTxtInImgEntityCfntxtinimgentity2A31982D"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgEntityFirehoseGlueTablePolicyBA8517BE",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgEntityFirehoseRoleAFB87ACD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputTxtInImgEntityFirehoseGlueKmsCF8450ED": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgEntityFirehoseGlueKmsCF8450ED",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgEntityFirehoseRoleAFB87ACD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputTxtInImgEntityKinesisFirehosefirehoseloggroup61DD3760": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputTxtInImgEntityKinesisFirehosefirehoseloggroupfirehoselogstream0E4691DB": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputTxtInImgEntityKinesisFirehosefirehoseloggroup61DD3760"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputTxtInImgEntityKinesisFirehoseKinesisFirehoseRole6D574957": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputTxtInImgEntityKinesisFirehoseKinesisFirehosePolicy50610A97": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputTxtInImgEntityKinesisFirehosefirehoseloggroup61DD3760"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputTxtInImgEntityKinesisFirehosefirehoseloggroupfirehoselogstream0E4691DB"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgEntityKinesisFirehoseKinesisFirehosePolicy50610A97",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgEntityKinesisFirehoseKinesisFirehoseRole6D574957"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputTxtInImgEntityKinesisFirehose2ABE5E51": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopImgEntityKinesisFirehose0A089C95",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputTxtInImgEntityKinesisFirehosefirehoseloggroup61DD3760"
            },
            "LogStreamName": {
              "Ref": "InfOutputTxtInImgEntityKinesisFirehosefirehoseloggroupfirehoselogstream0E4691DB"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputTxtInImgEntityFirehoseRoleAFB87ACD",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBTxtInImgEntityCfntxtinimgentity2A31982D"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/txtinimgentity/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "txtinimgentity/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputTxtInImgEntityFirehoseRoleAFB87ACD",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputTxtInImgEntityFirehoseGlueKmsCF8450ED",
        "InfOutputTxtInImgEntityFirehoseGlueTablePolicyBA8517BE",
        "InfOutputTxtInImgEntityFirehoseRoleDefaultPolicy89DA5AF3",
        "InfOutputTxtInImgEntityFirehoseRoleAFB87ACD"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgEntity/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputTxtInImgSentimentFirehoseRole2E192024": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/FirehoseRole/Resource"
      }
    },
    "InfOutputTxtInImgSentimentFirehoseRoleDefaultPolicyC48C3F79": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgSentimentFirehoseRoleDefaultPolicyC48C3F79",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgSentimentFirehoseRole2E192024"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputTxtInImgSentimentFirehoseGlueTablePolicyB68745DA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBTxtInImgSentimentCfntxtinimgsentiment39041AA7"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgSentimentFirehoseGlueTablePolicyB68745DA",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgSentimentFirehoseRole2E192024"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputTxtInImgSentimentFirehoseGlueKmsAF558038": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgSentimentFirehoseGlueKmsAF558038",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgSentimentFirehoseRole2E192024"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputTxtInImgSentimentKinesisFirehosefirehoseloggroupD9130381": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputTxtInImgSentimentKinesisFirehosefirehoseloggroupfirehoselogstreamD39ABAEE": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputTxtInImgSentimentKinesisFirehosefirehoseloggroupD9130381"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputTxtInImgSentimentKinesisFirehoseKinesisFirehoseRole7C5829D6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputTxtInImgSentimentKinesisFirehoseKinesisFirehosePolicy46319AB1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputTxtInImgSentimentKinesisFirehosefirehoseloggroupD9130381"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputTxtInImgSentimentKinesisFirehosefirehoseloggroupfirehoselogstreamD39ABAEE"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgSentimentKinesisFirehoseKinesisFirehosePolicy46319AB1",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgSentimentKinesisFirehoseKinesisFirehoseRole7C5829D6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputTxtInImgSentimentKinesisFirehose56881A5B": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopSentimentKinesisFirehose258392E9",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputTxtInImgSentimentKinesisFirehosefirehoseloggroupD9130381"
            },
            "LogStreamName": {
              "Ref": "InfOutputTxtInImgSentimentKinesisFirehosefirehoseloggroupfirehoselogstreamD39ABAEE"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputTxtInImgSentimentFirehoseRole2E192024",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBTxtInImgSentimentCfntxtinimgsentiment39041AA7"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/txtinimgsentiment/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "txtinimgsentiment/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputTxtInImgSentimentFirehoseRole2E192024",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputTxtInImgSentimentFirehoseGlueKmsAF558038",
        "InfOutputTxtInImgSentimentFirehoseGlueTablePolicyB68745DA",
        "InfOutputTxtInImgSentimentFirehoseRoleDefaultPolicyC48C3F79",
        "InfOutputTxtInImgSentimentFirehoseRole2E192024"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgSentiment/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputTxtInImgKeyPhraseFirehoseRoleA7BF64B9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/FirehoseRole/Resource"
      }
    },
    "InfOutputTxtInImgKeyPhraseFirehoseRoleDefaultPolicyA265FB39": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgKeyPhraseFirehoseRoleDefaultPolicyA265FB39",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgKeyPhraseFirehoseRoleA7BF64B9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputTxtInImgKeyPhraseFirehoseGlueTablePolicy952EABA1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBTxtInImgKeyPhraseCfntxtinimgkeyphrase8D3B0896"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgKeyPhraseFirehoseGlueTablePolicy952EABA1",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgKeyPhraseFirehoseRoleA7BF64B9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputTxtInImgKeyPhraseFirehoseGlueKmsD9EDAE9B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgKeyPhraseFirehoseGlueKmsD9EDAE9B",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgKeyPhraseFirehoseRoleA7BF64B9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputTxtInImgKeyPhraseKinesisFirehosefirehoseloggroup2B3781E6": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputTxtInImgKeyPhraseKinesisFirehosefirehoseloggroupfirehoselogstream490A0449": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputTxtInImgKeyPhraseKinesisFirehosefirehoseloggroup2B3781E6"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputTxtInImgKeyPhraseKinesisFirehoseKinesisFirehoseRoleEE499AA0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputTxtInImgKeyPhraseKinesisFirehoseKinesisFirehosePolicy526F6333": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputTxtInImgKeyPhraseKinesisFirehosefirehoseloggroup2B3781E6"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputTxtInImgKeyPhraseKinesisFirehosefirehoseloggroupfirehoselogstream490A0449"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTxtInImgKeyPhraseKinesisFirehoseKinesisFirehosePolicy526F6333",
        "Roles": [
          {
            "Ref": "InfOutputTxtInImgKeyPhraseKinesisFirehoseKinesisFirehoseRoleEE499AA0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputTxtInImgKeyPhraseKinesisFirehose40CBBBD5": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopKeyPhraseKinesisFirehoseF3827A35",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputTxtInImgKeyPhraseKinesisFirehosefirehoseloggroup2B3781E6"
            },
            "LogStreamName": {
              "Ref": "InfOutputTxtInImgKeyPhraseKinesisFirehosefirehoseloggroupfirehoselogstream490A0449"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputTxtInImgKeyPhraseFirehoseRoleA7BF64B9",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBTxtInImgKeyPhraseCfntxtinimgkeyphrase8D3B0896"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/txtinimgkeyphrase/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "txtinimgkeyphrase/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputTxtInImgKeyPhraseFirehoseRoleA7BF64B9",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputTxtInImgKeyPhraseFirehoseGlueKmsD9EDAE9B",
        "InfOutputTxtInImgKeyPhraseFirehoseGlueTablePolicy952EABA1",
        "InfOutputTxtInImgKeyPhraseFirehoseRoleDefaultPolicyA265FB39",
        "InfOutputTxtInImgKeyPhraseFirehoseRoleA7BF64B9"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TxtInImgKeyPhrase/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputModerationLabelsFirehoseRoleBE75722F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/FirehoseRole/Resource"
      }
    },
    "InfOutputModerationLabelsFirehoseRoleDefaultPolicy7B23C2CF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputModerationLabelsFirehoseRoleDefaultPolicy7B23C2CF",
        "Roles": [
          {
            "Ref": "InfOutputModerationLabelsFirehoseRoleBE75722F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputModerationLabelsFirehoseGlueTablePolicyA86F3FB3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBModerationLabelsCfnmoderationlabelsE089DE88"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputModerationLabelsFirehoseGlueTablePolicyA86F3FB3",
        "Roles": [
          {
            "Ref": "InfOutputModerationLabelsFirehoseRoleBE75722F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputModerationLabelsFirehoseGlueKms1FFA26A9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputModerationLabelsFirehoseGlueKms1FFA26A9",
        "Roles": [
          {
            "Ref": "InfOutputModerationLabelsFirehoseRoleBE75722F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputModerationLabelsKinesisFirehosefirehoseloggroup82DA8EFA": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputModerationLabelsKinesisFirehosefirehoseloggroupfirehoselogstreamB8A24944": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputModerationLabelsKinesisFirehosefirehoseloggroup82DA8EFA"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputModerationLabelsKinesisFirehoseKinesisFirehoseRole6B1214D5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputModerationLabelsKinesisFirehoseKinesisFirehosePolicy68A5C335": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputModerationLabelsKinesisFirehosefirehoseloggroup82DA8EFA"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputModerationLabelsKinesisFirehosefirehoseloggroupfirehoselogstreamB8A24944"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputModerationLabelsKinesisFirehoseKinesisFirehosePolicy68A5C335",
        "Roles": [
          {
            "Ref": "InfOutputModerationLabelsKinesisFirehoseKinesisFirehoseRole6B1214D5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputModerationLabelsKinesisFirehoseD4CA73D7": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopionLabelsKinesisFirehoseB18D014A",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputModerationLabelsKinesisFirehosefirehoseloggroup82DA8EFA"
            },
            "LogStreamName": {
              "Ref": "InfOutputModerationLabelsKinesisFirehosefirehoseloggroupfirehoselogstreamB8A24944"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputModerationLabelsFirehoseRoleBE75722F",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBModerationLabelsCfnmoderationlabelsE089DE88"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/moderationlabels/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "moderationlabels/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputModerationLabelsFirehoseRoleBE75722F",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputModerationLabelsFirehoseGlueKms1FFA26A9",
        "InfOutputModerationLabelsFirehoseGlueTablePolicyA86F3FB3",
        "InfOutputModerationLabelsFirehoseRoleDefaultPolicy7B23C2CF",
        "InfOutputModerationLabelsFirehoseRoleBE75722F"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/ModerationLabels/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputTwFeedStorageFirehoseRole26B1312F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/FirehoseRole/Resource"
      }
    },
    "InfOutputTwFeedStorageFirehoseRoleDefaultPolicyDB733D91": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTwFeedStorageFirehoseRoleDefaultPolicyDB733D91",
        "Roles": [
          {
            "Ref": "InfOutputTwFeedStorageFirehoseRole26B1312F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputTwFeedStorageFirehoseGlueTablePolicy13E4459F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBTwitterCfntwfeedstorageD526E094"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTwFeedStorageFirehoseGlueTablePolicy13E4459F",
        "Roles": [
          {
            "Ref": "InfOutputTwFeedStorageFirehoseRole26B1312F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputTwFeedStorageFirehoseGlueKms15663E6E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTwFeedStorageFirehoseGlueKms15663E6E",
        "Roles": [
          {
            "Ref": "InfOutputTwFeedStorageFirehoseRole26B1312F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputTwFeedStorageKinesisFirehosefirehoseloggroup31128FCA": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputTwFeedStorageKinesisFirehosefirehoseloggroupfirehoselogstream17A7AE5A": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputTwFeedStorageKinesisFirehosefirehoseloggroup31128FCA"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputTwFeedStorageKinesisFirehoseKinesisFirehoseRole499BA217": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputTwFeedStorageKinesisFirehoseKinesisFirehosePolicy7376AB68": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputTwFeedStorageKinesisFirehosefirehoseloggroup31128FCA"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputTwFeedStorageKinesisFirehosefirehoseloggroupfirehoselogstream17A7AE5A"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTwFeedStorageKinesisFirehoseKinesisFirehosePolicy7376AB68",
        "Roles": [
          {
            "Ref": "InfOutputTwFeedStorageKinesisFirehoseKinesisFirehoseRole499BA217"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputTwFeedStorageKinesisFirehoseB4C8D294": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopedStorageKinesisFirehose73E42E32",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputTwFeedStorageKinesisFirehosefirehoseloggroup31128FCA"
            },
            "LogStreamName": {
              "Ref": "InfOutputTwFeedStorageKinesisFirehosefirehoseloggroupfirehoselogstream17A7AE5A"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputTwFeedStorageFirehoseRole26B1312F",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBTwitterCfntwfeedstorageD526E094"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/twfeedstorage/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "twfeedstorage/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputTwFeedStorageFirehoseRole26B1312F",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputTwFeedStorageFirehoseGlueKms15663E6E",
        "InfOutputTwFeedStorageFirehoseGlueTablePolicy13E4459F",
        "InfOutputTwFeedStorageFirehoseRoleDefaultPolicyDB733D91",
        "InfOutputTwFeedStorageFirehoseRole26B1312F"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TwFeedStorage/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputNewsFeedStorageFirehoseRole60F7615A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/FirehoseRole/Resource"
      }
    },
    "InfOutputNewsFeedStorageFirehoseRoleDefaultPolicy415CB4FD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputNewsFeedStorageFirehoseRoleDefaultPolicy415CB4FD",
        "Roles": [
          {
            "Ref": "InfOutputNewsFeedStorageFirehoseRole60F7615A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputNewsFeedStorageFirehoseGlueTablePolicyE6640939": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBNewsFeedCfnnewsfeedstorageBE602E45"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputNewsFeedStorageFirehoseGlueTablePolicyE6640939",
        "Roles": [
          {
            "Ref": "InfOutputNewsFeedStorageFirehoseRole60F7615A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputNewsFeedStorageFirehoseGlueKmsFE84DB42": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputNewsFeedStorageFirehoseGlueKmsFE84DB42",
        "Roles": [
          {
            "Ref": "InfOutputNewsFeedStorageFirehoseRole60F7615A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputNewsFeedStorageKinesisFirehosefirehoseloggroup920B381D": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputNewsFeedStorageKinesisFirehosefirehoseloggroupfirehoselogstreamC2F575C8": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputNewsFeedStorageKinesisFirehosefirehoseloggroup920B381D"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputNewsFeedStorageKinesisFirehoseKinesisFirehoseRole4C832929": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputNewsFeedStorageKinesisFirehoseKinesisFirehosePolicy919BF4C8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputNewsFeedStorageKinesisFirehosefirehoseloggroup920B381D"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputNewsFeedStorageKinesisFirehosefirehoseloggroupfirehoselogstreamC2F575C8"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputNewsFeedStorageKinesisFirehoseKinesisFirehosePolicy919BF4C8",
        "Roles": [
          {
            "Ref": "InfOutputNewsFeedStorageKinesisFirehoseKinesisFirehoseRole4C832929"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputNewsFeedStorageKinesisFirehose47E4E4AF": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopedStorageKinesisFirehoseC2BA1C68",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputNewsFeedStorageKinesisFirehosefirehoseloggroup920B381D"
            },
            "LogStreamName": {
              "Ref": "InfOutputNewsFeedStorageKinesisFirehosefirehoseloggroupfirehoselogstreamC2F575C8"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputNewsFeedStorageFirehoseRole60F7615A",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBNewsFeedCfnnewsfeedstorageBE602E45"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/newsfeedstorage/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "newsfeedstorage/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputNewsFeedStorageFirehoseRole60F7615A",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputNewsFeedStorageFirehoseGlueKmsFE84DB42",
        "InfOutputNewsFeedStorageFirehoseGlueTablePolicyE6640939",
        "InfOutputNewsFeedStorageFirehoseRoleDefaultPolicy415CB4FD",
        "InfOutputNewsFeedStorageFirehoseRole60F7615A"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/NewsFeedStorage/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputYouTubeCommentsFirehoseRoleEA892060": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/FirehoseRole/Resource"
      }
    },
    "InfOutputYouTubeCommentsFirehoseRoleDefaultPolicy66B14BC1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputYouTubeCommentsFirehoseRoleDefaultPolicy66B14BC1",
        "Roles": [
          {
            "Ref": "InfOutputYouTubeCommentsFirehoseRoleEA892060"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputYouTubeCommentsFirehoseGlueTablePolicy94A5BAB8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBYoutubeCommentsCfnyoutubecomments40466877"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputYouTubeCommentsFirehoseGlueTablePolicy94A5BAB8",
        "Roles": [
          {
            "Ref": "InfOutputYouTubeCommentsFirehoseRoleEA892060"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputYouTubeCommentsFirehoseGlueKmsEF55D80F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputYouTubeCommentsFirehoseGlueKmsEF55D80F",
        "Roles": [
          {
            "Ref": "InfOutputYouTubeCommentsFirehoseRoleEA892060"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputYouTubeCommentsKinesisFirehosefirehoseloggroupB1AE31E6": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputYouTubeCommentsKinesisFirehosefirehoseloggroupfirehoselogstream06902B71": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputYouTubeCommentsKinesisFirehosefirehoseloggroupB1AE31E6"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputYouTubeCommentsKinesisFirehoseKinesisFirehoseRoleEF8313E9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputYouTubeCommentsKinesisFirehoseKinesisFirehosePolicyCF98FA6C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputYouTubeCommentsKinesisFirehosefirehoseloggroupB1AE31E6"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputYouTubeCommentsKinesisFirehosefirehoseloggroupfirehoselogstream06902B71"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputYouTubeCommentsKinesisFirehoseKinesisFirehosePolicyCF98FA6C",
        "Roles": [
          {
            "Ref": "InfOutputYouTubeCommentsKinesisFirehoseKinesisFirehoseRoleEF8313E9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputYouTubeCommentsKinesisFirehose61950C3F": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopeCommentsKinesisFirehoseE3A964F5",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputYouTubeCommentsKinesisFirehosefirehoseloggroupB1AE31E6"
            },
            "LogStreamName": {
              "Ref": "InfOutputYouTubeCommentsKinesisFirehosefirehoseloggroupfirehoselogstream06902B71"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputYouTubeCommentsFirehoseRoleEA892060",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBYoutubeCommentsCfnyoutubecomments40466877"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/youtubecomments/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "youtubecomments/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputYouTubeCommentsFirehoseRoleEA892060",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputYouTubeCommentsFirehoseGlueKmsEF55D80F",
        "InfOutputYouTubeCommentsFirehoseGlueTablePolicy94A5BAB8",
        "InfOutputYouTubeCommentsFirehoseRoleDefaultPolicy66B14BC1",
        "InfOutputYouTubeCommentsFirehoseRoleEA892060"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/YouTubeComments/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputCustomIngestionFirehoseRoleE1BD5228": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/FirehoseRole/Resource"
      }
    },
    "InfOutputCustomIngestionFirehoseRoleDefaultPolicy9DAC6C9A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionFirehoseRoleDefaultPolicy9DAC6C9A",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionFirehoseRoleE1BD5228"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputCustomIngestionFirehoseGlueTablePolicyD6293D83": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBCustomIngestionCfncustomingestion399D1616"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionFirehoseGlueTablePolicyD6293D83",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionFirehoseRoleE1BD5228"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputCustomIngestionFirehoseGlueKmsC3FB7FBB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionFirehoseGlueKmsC3FB7FBB",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionFirehoseRoleE1BD5228"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputCustomIngestionKinesisFirehosefirehoseloggroup361BF15D": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputCustomIngestionKinesisFirehosefirehoseloggroupfirehoselogstream8C52AC60": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputCustomIngestionKinesisFirehosefirehoseloggroup361BF15D"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputCustomIngestionKinesisFirehoseKinesisFirehoseRoleE2C571ED": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputCustomIngestionKinesisFirehoseKinesisFirehosePolicy3C2C100F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputCustomIngestionKinesisFirehosefirehoseloggroup361BF15D"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputCustomIngestionKinesisFirehosefirehoseloggroupfirehoselogstream8C52AC60"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionKinesisFirehoseKinesisFirehosePolicy3C2C100F",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionKinesisFirehoseKinesisFirehoseRoleE2C571ED"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputCustomIngestionKinesisFirehose6A94022C": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopIngestionKinesisFirehose0CFA4D9B",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputCustomIngestionKinesisFirehosefirehoseloggroup361BF15D"
            },
            "LogStreamName": {
              "Ref": "InfOutputCustomIngestionKinesisFirehosefirehoseloggroupfirehoselogstream8C52AC60"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputCustomIngestionFirehoseRoleE1BD5228",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBCustomIngestionCfncustomingestion399D1616"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/customingestion/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "customingestion/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputCustomIngestionFirehoseRoleE1BD5228",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputCustomIngestionFirehoseGlueKmsC3FB7FBB",
        "InfOutputCustomIngestionFirehoseGlueTablePolicyD6293D83",
        "InfOutputCustomIngestionFirehoseRoleDefaultPolicy9DAC6C9A",
        "InfOutputCustomIngestionFirehoseRoleE1BD5228"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestion/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputCustomIngestionLoudnessFirehoseRoleE755B64C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/FirehoseRole/Resource"
      }
    },
    "InfOutputCustomIngestionLoudnessFirehoseRoleDefaultPolicy8F9CC494": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionLoudnessFirehoseRoleDefaultPolicy8F9CC494",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionLoudnessFirehoseRoleE755B64C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputCustomIngestionLoudnessFirehoseGlueTablePolicyC573D42F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBCustomIngestionLoudnessCfncustomingestionloudness1E93A146"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionLoudnessFirehoseGlueTablePolicyC573D42F",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionLoudnessFirehoseRoleE755B64C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputCustomIngestionLoudnessFirehoseGlueKms86FA880B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionLoudnessFirehoseGlueKms86FA880B",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionLoudnessFirehoseRoleE755B64C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputCustomIngestionLoudnessKinesisFirehosefirehoseloggroup89BECDD1": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputCustomIngestionLoudnessKinesisFirehosefirehoseloggroupfirehoselogstream2AF71982": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputCustomIngestionLoudnessKinesisFirehosefirehoseloggroup89BECDD1"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputCustomIngestionLoudnessKinesisFirehoseKinesisFirehoseRole1BA7446E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputCustomIngestionLoudnessKinesisFirehoseKinesisFirehosePolicy1CC9829E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputCustomIngestionLoudnessKinesisFirehosefirehoseloggroup89BECDD1"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputCustomIngestionLoudnessKinesisFirehosefirehoseloggroupfirehoselogstream2AF71982"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionLoudnessKinesisFirehoseKinesisFirehosePolicy1CC9829E",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionLoudnessKinesisFirehoseKinesisFirehoseRole1BA7446E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputCustomIngestionLoudnessKinesisFirehose567E48CE": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopnLoudnessKinesisFirehose08687C34",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputCustomIngestionLoudnessKinesisFirehosefirehoseloggroup89BECDD1"
            },
            "LogStreamName": {
              "Ref": "InfOutputCustomIngestionLoudnessKinesisFirehosefirehoseloggroupfirehoselogstream2AF71982"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputCustomIngestionLoudnessFirehoseRoleE755B64C",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBCustomIngestionLoudnessCfncustomingestionloudness1E93A146"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/customingestionloudness/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "customingestionloudness/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputCustomIngestionLoudnessFirehoseRoleE755B64C",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputCustomIngestionLoudnessFirehoseGlueKms86FA880B",
        "InfOutputCustomIngestionLoudnessFirehoseGlueTablePolicyC573D42F",
        "InfOutputCustomIngestionLoudnessFirehoseRoleDefaultPolicy8F9CC494",
        "InfOutputCustomIngestionLoudnessFirehoseRoleE755B64C"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionLoudness/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputCustomIngestionItemFirehoseRole6C9F3610": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/FirehoseRole/Resource"
      }
    },
    "InfOutputCustomIngestionItemFirehoseRoleDefaultPolicyED7DDE77": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionItemFirehoseRoleDefaultPolicyED7DDE77",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionItemFirehoseRole6C9F3610"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputCustomIngestionItemFirehoseGlueTablePolicy39DB9FBD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBCustomIngestionItemCfncustomingestionitem6A36B2C7"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionItemFirehoseGlueTablePolicy39DB9FBD",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionItemFirehoseRole6C9F3610"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputCustomIngestionItemFirehoseGlueKms27B70C8B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionItemFirehoseGlueKms27B70C8B",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionItemFirehoseRole6C9F3610"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputCustomIngestionItemKinesisFirehosefirehoseloggroup04B6F9E9": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputCustomIngestionItemKinesisFirehosefirehoseloggroupfirehoselogstreamE6683696": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputCustomIngestionItemKinesisFirehosefirehoseloggroup04B6F9E9"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputCustomIngestionItemKinesisFirehoseKinesisFirehoseRoleD925EE5D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputCustomIngestionItemKinesisFirehoseKinesisFirehosePolicy2F09F280": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputCustomIngestionItemKinesisFirehosefirehoseloggroup04B6F9E9"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputCustomIngestionItemKinesisFirehosefirehoseloggroupfirehoselogstreamE6683696"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputCustomIngestionItemKinesisFirehoseKinesisFirehosePolicy2F09F280",
        "Roles": [
          {
            "Ref": "InfOutputCustomIngestionItemKinesisFirehoseKinesisFirehoseRoleD925EE5D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputCustomIngestionItemKinesisFirehose149DA52C": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopstionItemKinesisFirehoseA6B63D09",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputCustomIngestionItemKinesisFirehosefirehoseloggroup04B6F9E9"
            },
            "LogStreamName": {
              "Ref": "InfOutputCustomIngestionItemKinesisFirehosefirehoseloggroupfirehoselogstreamE6683696"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputCustomIngestionItemFirehoseRole6C9F3610",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBCustomIngestionItemCfncustomingestionitem6A36B2C7"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/customingestionitem/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "customingestionitem/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputCustomIngestionItemFirehoseRole6C9F3610",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputCustomIngestionItemFirehoseGlueKms27B70C8B",
        "InfOutputCustomIngestionItemFirehoseGlueTablePolicy39DB9FBD",
        "InfOutputCustomIngestionItemFirehoseRoleDefaultPolicyED7DDE77",
        "InfOutputCustomIngestionItemFirehoseRole6C9F3610"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/CustomIngestionItem/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputMetadataFirehoseRoleDA45CAA0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/FirehoseRole/Resource"
      }
    },
    "InfOutputMetadataFirehoseRoleDefaultPolicy9870B8F7": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputMetadataFirehoseRoleDefaultPolicy9870B8F7",
        "Roles": [
          {
            "Ref": "InfOutputMetadataFirehoseRoleDA45CAA0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputMetadataFirehoseGlueTablePolicy010B4792": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBMetadataCfnmetadata2159F8A4"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputMetadataFirehoseGlueTablePolicy010B4792",
        "Roles": [
          {
            "Ref": "InfOutputMetadataFirehoseRoleDA45CAA0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputMetadataFirehoseGlueKmsE208E000": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputMetadataFirehoseGlueKmsE208E000",
        "Roles": [
          {
            "Ref": "InfOutputMetadataFirehoseRoleDA45CAA0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputMetadataKinesisFirehosefirehoseloggroup78FF8B7A": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputMetadataKinesisFirehosefirehoseloggroupfirehoselogstream576383D0": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputMetadataKinesisFirehosefirehoseloggroup78FF8B7A"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputMetadataKinesisFirehoseKinesisFirehoseRole77795AE6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputMetadataKinesisFirehoseKinesisFirehosePolicy72763C84": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputMetadataKinesisFirehosefirehoseloggroup78FF8B7A"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputMetadataKinesisFirehosefirehoseloggroupfirehoselogstream576383D0"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputMetadataKinesisFirehoseKinesisFirehosePolicy72763C84",
        "Roles": [
          {
            "Ref": "InfOutputMetadataKinesisFirehoseKinesisFirehoseRole77795AE6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputMetadataKinesisFirehoseED7F217F": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottoptMetadataKinesisFirehoseEF502E5D",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputMetadataKinesisFirehosefirehoseloggroup78FF8B7A"
            },
            "LogStreamName": {
              "Ref": "InfOutputMetadataKinesisFirehosefirehoseloggroupfirehoselogstream576383D0"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputMetadataFirehoseRoleDA45CAA0",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBMetadataCfnmetadata2159F8A4"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/metadata/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "metadata/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputMetadataFirehoseRoleDA45CAA0",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputMetadataFirehoseGlueKmsE208E000",
        "InfOutputMetadataFirehoseGlueTablePolicy010B4792",
        "InfOutputMetadataFirehoseRoleDefaultPolicy9870B8F7",
        "InfOutputMetadataFirehoseRoleDA45CAA0"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/Metadata/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputRedditCommentsFirehoseRole7FA3BC52": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/FirehoseRole/Resource"
      }
    },
    "InfOutputRedditCommentsFirehoseRoleDefaultPolicy1B26E8FE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputRedditCommentsFirehoseRoleDefaultPolicy1B26E8FE",
        "Roles": [
          {
            "Ref": "InfOutputRedditCommentsFirehoseRole7FA3BC52"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "InfOutputRedditCommentsFirehoseGlueTablePolicyC23216E1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      },
                      "/",
                      {
                        "Ref": "InfOutputInfDBRedditCommentsCfnredditcomments068955C4"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "InfOutputInfDBTweetDBFCE9A363"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputRedditCommentsFirehoseGlueTablePolicyC23216E1",
        "Roles": [
          {
            "Ref": "InfOutputRedditCommentsFirehoseRole7FA3BC52"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/FirehoseGlueTablePolicy/Resource"
      }
    },
    "InfOutputRedditCommentsFirehoseGlueKmsFB95594B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/glue"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputRedditCommentsFirehoseGlueKmsFB95594B",
        "Roles": [
          {
            "Ref": "InfOutputRedditCommentsFirehoseRole7FA3BC52"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/FirehoseGlueKms/Resource"
      }
    },
    "InfOutputRedditCommentsKinesisFirehosefirehoseloggroup256198C0": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "InfOutputRedditCommentsKinesisFirehosefirehoseloggroupfirehoselogstreamD4EE13F6": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "InfOutputRedditCommentsKinesisFirehosefirehoseloggroup256198C0"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "InfOutputRedditCommentsKinesisFirehoseKinesisFirehoseRole1A744A2C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "InfOutputRedditCommentsKinesisFirehoseKinesisFirehosePolicy0D585F24": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputS3Bucket912BB856",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "InfOutputS3Bucket912BB856",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "InfOutputRedditCommentsKinesisFirehosefirehoseloggroup256198C0"
                    },
                    ":log-stream:",
                    {
                      "Ref": "InfOutputRedditCommentsKinesisFirehosefirehoseloggroupfirehoselogstreamD4EE13F6"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputRedditCommentsKinesisFirehoseKinesisFirehosePolicy0D585F24",
        "Roles": [
          {
            "Ref": "InfOutputRedditCommentsKinesisFirehoseKinesisFirehoseRole1A744A2C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "InfOutputRedditCommentsKinesisFirehoseF4801F1D": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottoptCommentsKinesisFirehose694ADC77",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "InfOutputS3Bucket912BB856",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "InfOutputRedditCommentsKinesisFirehosefirehoseloggroup256198C0"
            },
            "LogStreamName": {
              "Ref": "InfOutputRedditCommentsKinesisFirehosefirehoseloggroupfirehoselogstreamD4EE13F6"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {}
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "InfOutputInfDBTweetDBFCE9A363"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "InfOutputRedditCommentsFirehoseRole7FA3BC52",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "InfOutputInfDBRedditCommentsCfnredditcomments068955C4"
              }
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "error/redditcomments/!{firehose:random-string}/!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "redditcomments/created_at=!{partitionKeyFromQuery:created_at}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{created_at: .created_at | strptime(\"%Y-%m-%d %H:%M:%S\") | strftime(\"%Y-%m-%d\")}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "InfOutputRedditCommentsFirehoseRole7FA3BC52",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "InfOutputRedditCommentsFirehoseGlueKmsFB95594B",
        "InfOutputRedditCommentsFirehoseGlueTablePolicyC23216E1",
        "InfOutputRedditCommentsFirehoseRoleDefaultPolicy1B26E8FE",
        "InfOutputRedditCommentsFirehoseRole7FA3BC52"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/RedditComments/KinesisFirehose/KinesisFirehose"
      }
    },
    "InfOutputTextAnalysisLambdaFunctionServiceRole9EA6E013": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TextAnalysis/LambdaFunctionServiceRole/Resource"
      }
    },
    "InfOutputTextAnalysisLambdaFunctionServiceRoleDefaultPolicyAC382E33": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "firehose:PutRecord",
                "firehose:PutRecordBatch"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InfOutputSentimentKinesisFirehose06D4FFF8",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputEntityKinesisFirehoseD4CD76B3",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputKeyPhraseKinesisFirehose0BA3FD35",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputTxtInImgSentimentKinesisFirehose56881A5B",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputTxtInImgEntityKinesisFirehose2ABE5E51",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputTxtInImgKeyPhraseKinesisFirehose40CBBBD5",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputModerationLabelsKinesisFirehoseD4CA73D7",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputTwFeedStorageKinesisFirehoseB4C8D294",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputNewsFeedStorageKinesisFirehose47E4E4AF",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputYouTubeCommentsKinesisFirehose61950C3F",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputCustomIngestionKinesisFirehose6A94022C",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputCustomIngestionLoudnessKinesisFirehose567E48CE",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputCustomIngestionItemKinesisFirehose149DA52C",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputMetadataKinesisFirehoseED7F217F",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "InfOutputRedditCommentsKinesisFirehoseF4801F1D",
                    "Arn"
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTextAnalysisLambdaFunctionServiceRoleDefaultPolicyAC382E33",
        "Roles": [
          {
            "Ref": "InfOutputTextAnalysisLambdaFunctionServiceRole9EA6E013"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TextAnalysis/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W76",
              "reason": "The lambda role policy requires to access multiple firehose buckets. Hence suppressing the SPCM rule"
            },
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "InfOutputTextAnalysisLambdaFunctionEB38EDB8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset481eafa662dc8d9b5232a8dc91b2ec11dcb6da082e23c578d7a1cfec72d56379.zip"
        },
        "Environment": {
          "Variables": {
            "SENTIMENT_FIREHOSE": {
              "Ref": "InfOutputSentimentKinesisFirehose06D4FFF8"
            },
            "ENTITIES_FIREHOSE": {
              "Ref": "InfOutputEntityKinesisFirehoseD4CD76B3"
            },
            "KEYPHRASE_FIREHOSE": {
              "Ref": "InfOutputKeyPhraseKinesisFirehose0BA3FD35"
            },
            "TXT_IN_IMG_SENTIMENT_FIREHOSE": {
              "Ref": "InfOutputTxtInImgSentimentKinesisFirehose56881A5B"
            },
            "TXT_IN_IMG_ENTITY_FIREHOSE": {
              "Ref": "InfOutputTxtInImgEntityKinesisFirehose2ABE5E51"
            },
            "TXT_IN_IMG_KEYPHRASE_FIREHOSE": {
              "Ref": "InfOutputTxtInImgKeyPhraseKinesisFirehose40CBBBD5"
            },
            "MODERATION_LABELS_FIREHOSE": {
              "Ref": "InfOutputModerationLabelsKinesisFirehoseD4CA73D7"
            },
            "TW_FEED_STORAGE": {
              "Ref": "InfOutputTwFeedStorageKinesisFirehoseB4C8D294"
            },
            "NEWSFEEDS_FEED_STORAGE": {
              "Ref": "InfOutputNewsFeedStorageKinesisFirehose47E4E4AF"
            },
            "YOUTUBECOMMENTS_FEED_STORAGE": {
              "Ref": "InfOutputYouTubeCommentsKinesisFirehose61950C3F"
            },
            "CUSTOMINGESTION_FEED_STORAGE": {
              "Ref": "InfOutputCustomIngestionKinesisFirehose6A94022C"
            },
            "CUSTOMINGESTIONMETADATA_FEED_STORAGE": {
              "Ref": "InfOutputMetadataKinesisFirehoseED7F217F"
            },
            "CUSTOMINGESTIONLOUDNESS_FEED_STORAGE": {
              "Ref": "InfOutputCustomIngestionLoudnessKinesisFirehose567E48CE"
            },
            "CUSTOMINGESTIONITEM_FEED_STORAGE": {
              "Ref": "InfOutputCustomIngestionItemKinesisFirehose149DA52C"
            },
            "REDDIT_FEED_STORAGE": {
              "Ref": "InfOutputRedditCommentsKinesisFirehoseF4801F1D"
            },
            "TEXT_ANALYSIS_NS": "com.analyze.text.inference",
            "METADATA_NS": "metadata.call_analytics",
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "InfOutputTextAnalysisLambdaFunctionServiceRole9EA6E013",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "InfOutputTextAnalysisLambdaFunctionServiceRoleDefaultPolicyAC382E33",
        "InfOutputTextAnalysisLambdaFunctionServiceRole9EA6E013"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TextAnalysis/LambdaFunction/Resource",
        "aws:asset:path": "asset.481eafa662dc8d9b5232a8dc91b2ec11dcb6da082e23c578d7a1cfec72d56379",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "InfOutputTopicAnalysisLambdaFunctionServiceRole1C70C18E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicAnalysis/LambdaFunctionServiceRole/Resource"
      }
    },
    "InfOutputTopicAnalysisLambdaFunctionServiceRoleDefaultPolicyC81EEA4B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "firehose:PutRecord",
                "firehose:PutRecordBatch"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":firehose:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":deliverystream/",
                      {
                        "Ref": "InfOutputTopicsKinesisFirehose2CC7DEAE"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":firehose:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":deliverystream/",
                      {
                        "Ref": "InfOutputTopicMappingsKinesisFirehose97CCA8A9"
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InfOutputTopicAnalysisLambdaFunctionServiceRoleDefaultPolicyC81EEA4B",
        "Roles": [
          {
            "Ref": "InfOutputTopicAnalysisLambdaFunctionServiceRole1C70C18E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicAnalysis/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "InfOutputTopicAnalysisLambdaFunctionE616AD25": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset1e42de46669f1073711d5df23b600c33411829cd10eb35ddc37419934d823482.zip"
        },
        "Environment": {
          "Variables": {
            "TOPICS_FIREHOSE": {
              "Ref": "InfOutputTopicsKinesisFirehose2CC7DEAE"
            },
            "TOPIC_MAPPINGS_FIREHOSE": {
              "Ref": "InfOutputTopicMappingsKinesisFirehose97CCA8A9"
            },
            "TOPICS_NS": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_NS": "com.analyze.topic.inference.mappings",
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "InfOutputTopicAnalysisLambdaFunctionServiceRole1C70C18E",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 600,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "InfOutputTopicAnalysisLambdaFunctionServiceRoleDefaultPolicyC81EEA4B",
        "InfOutputTopicAnalysisLambdaFunctionServiceRole1C70C18E"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/TopicAnalysis/LambdaFunction/Resource",
        "aws:asset:path": "asset.1e42de46669f1073711d5df23b600c33411829cd10eb35ddc37419934d823482",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "InfOutputEventRuleInferenceEvents4A1B5DDC": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "InfOutput-AppIntegration"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/EventRule/InferenceEvents/Resource"
      }
    },
    "InfOutputEventRuleEventRule00185C86E": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
        },
        "EventPattern": {
          "account": [
            {
              "Ref": "AWS::AccountId"
            }
          ],
          "region": [
            {
              "Ref": "AWS::Region"
            }
          ],
          "source": [
            "com.analyze.text.inference",
            "metadata.call_analytics"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "InfOutputTextAnalysisLambdaFunctionEB38EDB8",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/EventRule/EventRule-0/Resource"
      }
    },
    "InfOutputEventRuleEventRule0AllowEventRulediscoveringhottopicsusingmachinelearningInfOutputTextAnalysisLambdaFunction64D22B4B0A26D6C3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "InfOutputTextAnalysisLambdaFunctionEB38EDB8",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "InfOutputEventRuleEventRule00185C86E",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/EventRule/EventRule-0/AllowEventRulediscoveringhottopicsusingmachinelearningInfOutputTextAnalysisLambdaFunction64D22B4B"
      }
    },
    "InfOutputEventRuleEventRule178E8769C": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
        },
        "EventPattern": {
          "account": [
            {
              "Ref": "AWS::AccountId"
            }
          ],
          "region": [
            {
              "Ref": "AWS::Region"
            }
          ],
          "source": [
            "com.analyze.topic.inference.topics",
            "com.analyze.topic.inference.mappings"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "InfOutputTopicAnalysisLambdaFunctionE616AD25",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/EventRule/EventRule-1/Resource"
      }
    },
    "InfOutputEventRuleEventRule1AllowEventRulediscoveringhottopicsusingmachinelearningInfOutputTopicAnalysisLambdaFunction2180498C98D3CE3E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "InfOutputTopicAnalysisLambdaFunctionE616AD25",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "InfOutputEventRuleEventRule178E8769C",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/InfOutput/EventRule/EventRule-1/AllowEventRulediscoveringhottopicsusingmachinelearningInfOutputTopicAnalysisLambdaFunction2180498C"
      }
    },
    "IngestionFeedConsumerSqsDlqQueue3A707A4B": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/SqsDlqQueue/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerSqsDlqQueuePolicyA7D9DB43": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "IngestionFeedConsumerSqsDlqQueue3A707A4B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/SqsDlqQueue/Policy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/KinesisStream/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/LambdaFunctionServiceRole/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kinesis:DescribeStream",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
                  "Arn"
                ]
              }
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TextWfEngineStateMachineWorkflowEngineStateMachine5B720464"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D",
        "Roles": [
          {
            "Ref": "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D"
          }
        ]
      },
      "DependsOn": [
        "IngestionFeedConsumerSqsDlqQueuePolicyA7D9DB43",
        "IngestionFeedConsumerSqsDlqQueue3A707A4B"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunction81C67CF2": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset229d16d71364245f44a12618e7811f953a774194e745889084ec44163a71af39.zip"
        },
        "Environment": {
          "Variables": {
            "STATE_MACHINE_ARN": {
              "Ref": "TextWfEngineStateMachineWorkflowEngineStateMachine5B720464"
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRoleDefaultPolicy93536D6D",
        "IngestionFeedConsumerIngestionStreamLambdaFunctionServiceRole9E95397D"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/LambdaFunction/Resource",
        "aws:asset:path": "asset.229d16d71364245f44a12618e7811f953a774194e745889084ec44163a71af39",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamLambdaFunctionKinesisEventSourcediscoveringhottopicsusingmachinelearningIngestionFeedConsumerIngestionStreamKinesisStream77A3900B6C62CC9A": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 5,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "IngestionFeedConsumerSqsDlqQueue3A707A4B",
                "Arn"
              ]
            }
          }
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "IngestionFeedConsumerIngestionStreamLambdaFunction81C67CF2"
        },
        "MaximumRecordAgeInSeconds": 86400,
        "StartingPosition": "TRIM_HORIZON"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/LambdaFunction/KinesisEventSource:discoveringhottopicsusingmachinelearningIngestionFeedConsumerIngestionStreamKinesisStream77A3900B/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/SqsDlqQueue/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamSqsDlqQueuePolicy74C5C73B": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "IngestionFeedConsumerIngestionStreamSqsDlqQueue7CAEF3A7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/SqsDlqQueue/Policy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamGetRecordsIteratorAgeAlarmE6C16601": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Consumer Record Processing Falling Behind, there is risk for data loss due to record expiration.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GetRecords.IteratorAgeMilliseconds",
        "Namespace": "AWS/Kinesis",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 43200000
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/KinesisStreamGetRecordsIteratorAgeAlarm/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionFeedConsumerIngestionStreamKinesisStreamReadProvisionedThroughputExceededAlarm821B53BC": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Consumer Application is Reading at a Slower Rate Than Expected.",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ReadProvisionedThroughputExceeded",
        "Namespace": "AWS/Kinesis",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 0
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/FeedConsumer/IngestionStream/KinesisStreamReadProvisionedThroughputExceededAlarm/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "SQS queue is used as destination for discarded records from Kinesis stream",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "IngestionBus3E30EA7C": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "discoveringhottopicsusingmachinelearningIngestionBus5372260E"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/Bus/Resource"
      }
    },
    "IngestionNewsCatcherNestedStackNewsCatcherNestedStackResourceD666324A": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "EventBus": {
            "Fn::GetAtt": [
              "IngestionBus3E30EA7C",
              "Arn"
            ]
          },
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn"
            ]
          },
          "NewsSearchQuery": {
            "Ref": "NewsSearchQuery"
          },
          "Config": {
            "Ref": "NewsFeedIngestConfig"
          },
          "IngestFrequency": {
            "Ref": "NewsFeedIngestFrequency"
          },
          "referencetodiscoveringhottopicsusingmachinelearningCustomConfigPythonLibLayer8E1A67F9Ref": {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "discovering-hot-topics-using-machine-learning/v2.2.1/discoveringhottopicsusingmachinelearningIngestionNewsCatcher4A35510E.nested.template"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/NewsCatcher.NestedStack/NewsCatcher.NestedStackResource",
        "nestedStackFileName": "discoveringhottopicsusingmachinelearningIngestionNewsCatcher4A35510E.nested.template",
        "aws:asset:path": "discoveringhottopicsusingmachinelearningIngestionNewsCatcher4A35510E.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "IngestionDeployRSSFeeds0E648DA1"
    },
    "IngestionYouTubeCommentsIngestionNestedStackYouTubeCommentsIngestionNestedStackResourceD9D9E2B1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "EventBus": {
            "Fn::GetAtt": [
              "IngestionBus3E30EA7C",
              "Arn"
            ]
          },
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn"
            ]
          },
          "YoutubeAPIKey": {
            "Ref": "YoutubeAPIKey"
          },
          "YouTubeSearchIngestionFreq": {
            "Ref": "YouTubeSearchIngestionFreq"
          },
          "YouTubeChannel": {
            "Ref": "YouTubeChannel"
          },
          "YoutubeSearchQuery": {
            "Ref": "YoutubeSearchQuery"
          },
          "referencetodiscoveringhottopicsusingmachinelearningCustomConfigPythonLibLayer8E1A67F9Ref": {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "discovering-hot-topics-using-machine-learning/v2.2.1/discoveringhottopicsusingmachinelearningIngestionYouTubeCommentsIngestion4BF3E263.nested.template"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/YouTubeCommentsIngestion.NestedStack/YouTubeCommentsIngestion.NestedStackResource",
        "nestedStackFileName": "discoveringhottopicsusingmachinelearningIngestionYouTubeCommentsIngestion4BF3E263.nested.template",
        "aws:asset:path": "discoveringhottopicsusingmachinelearningIngestionYouTubeCommentsIngestion4BF3E263.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "IngestionDeployYouTubeCommentsA44A0A50"
    },
    "IngestionS3CustomIngestionNestedStackS3CustomIngestionNestedStackResource0099DFB8": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn"
            ]
          },
          "IntegrationBus": {
            "Fn::GetAtt": [
              "InfOutputEventRuleInferenceEvents4A1B5DDC",
              "Arn"
            ]
          },
          "S3AccessLoggingBucket": {
            "Fn::GetAtt": [
              "AccessLogD598EBE9",
              "Arn"
            ]
          },
          "MetadataNS": "metadata.call_analytics",
          "referencetodiscoveringhottopicsusingmachinelearningCustomConfigPythonLibLayer8E1A67F9Ref": {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "discovering-hot-topics-using-machine-learning/v2.2.1/discoveringhottopicsusingmachinelearningIngestionS3CustomIngestion3A4CE954.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "AccessLogPolicy4B3DB856"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/S3CustomIngestion.NestedStack/S3CustomIngestion.NestedStackResource",
        "nestedStackFileName": "discoveringhottopicsusingmachinelearningIngestionS3CustomIngestion3A4CE954.nested.template",
        "aws:asset:path": "discoveringhottopicsusingmachinelearningIngestionS3CustomIngestion3A4CE954.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "IngestionDeployCustomIngestion93AB274A"
    },
    "IngestionRedditIngestionNestedStackRedditIngestionNestedStackResource5ABCB860": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "RedditAPIKey": {
            "Ref": "RedditAPIKey"
          },
          "StreamARN": {
            "Fn::GetAtt": [
              "IngestionFeedConsumerIngestionStreamKinesisStreamD5A80644",
              "Arn"
            ]
          },
          "EventBus": {
            "Fn::GetAtt": [
              "IngestionBus3E30EA7C",
              "Arn"
            ]
          },
          "SubRedditsToFollow": {
            "Ref": "SubRedditsToFollow"
          },
          "RedditIngestionFrequency": {
            "Ref": "RedditIngestionFrequency"
          },
          "referencetodiscoveringhottopicsusingmachinelearningCustomConfigPythonLibLayer8E1A67F9Ref": {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          },
          "referencetodiscoveringhottopicsusingmachinelearningCustomConfig62A4A094Ref": {
            "Ref": "CustomConfig573191C7"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "discovering-hot-topics-using-machine-learning/v2.2.1/discoveringhottopicsusingmachinelearningIngestionRedditIngestion0499A0B9.nested.template"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/Ingestion/RedditIngestion.NestedStack/RedditIngestion.NestedStackResource",
        "nestedStackFileName": "discoveringhottopicsusingmachinelearningIngestionRedditIngestion0499A0B9.nested.template",
        "aws:asset:path": "discoveringhottopicsusingmachinelearningIngestionRedditIngestion0499A0B9.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "IngestionDeployRedditIngestionB0819499"
    },
    "TextWfEngineS3BucketE4A78E92": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "AccessLogD598EBE9"
          },
          "LogFilePrefix": "TextWfEngine/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/S3Bucket/Resource"
      }
    },
    "TextWfEngineS3BucketPolicy13B8E75B": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "TextWfEngineS3BucketE4A78E92"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/S3Bucket/Policy/Resource"
      }
    },
    "TextWfEngineNEWSFEEDSRawForTAFirehoseRole54A19F05": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/NEWSFEEDSRawForTA/FirehoseRole/Resource"
      }
    },
    "TextWfEngineNEWSFEEDSRawForTAFirehoseRoleDefaultPolicy86134469": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineNEWSFEEDSRawForTAFirehoseRoleDefaultPolicy86134469",
        "Roles": [
          {
            "Ref": "TextWfEngineNEWSFEEDSRawForTAFirehoseRole54A19F05"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/NEWSFEEDSRawForTA/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "TextWfEngineNEWSFEEDSRawForTAKinesisFirehosefirehoseloggroup6BF49E83": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/NEWSFEEDSRawForTA/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "TextWfEngineNEWSFEEDSRawForTAKinesisFirehosefirehoseloggroupfirehoselogstream2C5BAC51": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "TextWfEngineNEWSFEEDSRawForTAKinesisFirehosefirehoseloggroup6BF49E83"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/NEWSFEEDSRawForTA/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "TextWfEngineNEWSFEEDSRawForTAKinesisFirehoseKinesisFirehoseRole9163575D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/NEWSFEEDSRawForTA/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "TextWfEngineNEWSFEEDSRawForTAKinesisFirehoseKinesisFirehosePolicy0391934A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "TextWfEngineNEWSFEEDSRawForTAKinesisFirehosefirehoseloggroup6BF49E83"
                    },
                    ":log-stream:",
                    {
                      "Ref": "TextWfEngineNEWSFEEDSRawForTAKinesisFirehosefirehoseloggroupfirehoselogstream2C5BAC51"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineNEWSFEEDSRawForTAKinesisFirehoseKinesisFirehosePolicy0391934A",
        "Roles": [
          {
            "Ref": "TextWfEngineNEWSFEEDSRawForTAKinesisFirehoseKinesisFirehoseRole9163575D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/NEWSFEEDSRawForTA/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "TextWfEngineNEWSFEEDSRawForTAKinesisFirehoseFD9724B3": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopSRawForTAKinesisFirehose426B7F8C",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "TextWfEngineS3BucketE4A78E92",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "TextWfEngineNEWSFEEDSRawForTAKinesisFirehosefirehoseloggroup6BF49E83"
            },
            "LogStreamName": {
              "Ref": "TextWfEngineNEWSFEEDSRawForTAKinesisFirehosefirehoseloggroupfirehoselogstream2C5BAC51"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "Prefix": "newsfeeds/",
          "RoleARN": {
            "Fn::GetAtt": [
              "TextWfEngineNEWSFEEDSRawForTAFirehoseRole54A19F05",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "TextWfEngineNEWSFEEDSRawForTAFirehoseRoleDefaultPolicy86134469",
        "TextWfEngineNEWSFEEDSRawForTAFirehoseRole54A19F05"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/NEWSFEEDSRawForTA/KinesisFirehose/KinesisFirehose"
      }
    },
    "TextWfEngineYOUTUBECOMMENTSRawForTAFirehoseRole14084FB6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/YOUTUBECOMMENTSRawForTA/FirehoseRole/Resource"
      }
    },
    "TextWfEngineYOUTUBECOMMENTSRawForTAFirehoseRoleDefaultPolicy1A37B793": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineYOUTUBECOMMENTSRawForTAFirehoseRoleDefaultPolicy1A37B793",
        "Roles": [
          {
            "Ref": "TextWfEngineYOUTUBECOMMENTSRawForTAFirehoseRole14084FB6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/YOUTUBECOMMENTSRawForTA/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehosefirehoseloggroupDCD9D20E": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/YOUTUBECOMMENTSRawForTA/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamB10AA386": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehosefirehoseloggroupDCD9D20E"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/YOUTUBECOMMENTSRawForTA/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehoseKinesisFirehoseRoleF4F911F8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/YOUTUBECOMMENTSRawForTA/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehoseKinesisFirehosePolicyE2EB6221": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehosefirehoseloggroupDCD9D20E"
                    },
                    ":log-stream:",
                    {
                      "Ref": "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamB10AA386"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehoseKinesisFirehosePolicyE2EB6221",
        "Roles": [
          {
            "Ref": "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehoseKinesisFirehoseRoleF4F911F8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/YOUTUBECOMMENTSRawForTA/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehoseE43128CD": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopSRawForTAKinesisFirehose4338D9A9",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "TextWfEngineS3BucketE4A78E92",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehosefirehoseloggroupDCD9D20E"
            },
            "LogStreamName": {
              "Ref": "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamB10AA386"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "Prefix": "youtubecomments/",
          "RoleARN": {
            "Fn::GetAtt": [
              "TextWfEngineYOUTUBECOMMENTSRawForTAFirehoseRole14084FB6",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "TextWfEngineYOUTUBECOMMENTSRawForTAFirehoseRoleDefaultPolicy1A37B793",
        "TextWfEngineYOUTUBECOMMENTSRawForTAFirehoseRole14084FB6"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/YOUTUBECOMMENTSRawForTA/KinesisFirehose/KinesisFirehose"
      }
    },
    "TextWfEngineCUSTOMINGESTIONRawForTAFirehoseRoleF9A5C807": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/CUSTOMINGESTIONRawForTA/FirehoseRole/Resource"
      }
    },
    "TextWfEngineCUSTOMINGESTIONRawForTAFirehoseRoleDefaultPolicy0A9D5E5A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineCUSTOMINGESTIONRawForTAFirehoseRoleDefaultPolicy0A9D5E5A",
        "Roles": [
          {
            "Ref": "TextWfEngineCUSTOMINGESTIONRawForTAFirehoseRoleF9A5C807"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/CUSTOMINGESTIONRawForTA/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehosefirehoseloggroup95EFB62E": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/CUSTOMINGESTIONRawForTA/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamA57DFDDE": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehosefirehoseloggroup95EFB62E"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/CUSTOMINGESTIONRawForTA/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehoseKinesisFirehoseRole27D5A803": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/CUSTOMINGESTIONRawForTA/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehoseKinesisFirehosePolicy11C5D01C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehosefirehoseloggroup95EFB62E"
                    },
                    ":log-stream:",
                    {
                      "Ref": "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamA57DFDDE"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehoseKinesisFirehosePolicy11C5D01C",
        "Roles": [
          {
            "Ref": "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehoseKinesisFirehoseRole27D5A803"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/CUSTOMINGESTIONRawForTA/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehoseD6C0DD93": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopNRawForTAKinesisFirehose3A5871E1",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "TextWfEngineS3BucketE4A78E92",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehosefirehoseloggroup95EFB62E"
            },
            "LogStreamName": {
              "Ref": "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamA57DFDDE"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "Prefix": "customingestion/",
          "RoleARN": {
            "Fn::GetAtt": [
              "TextWfEngineCUSTOMINGESTIONRawForTAFirehoseRoleF9A5C807",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "TextWfEngineCUSTOMINGESTIONRawForTAFirehoseRoleDefaultPolicy0A9D5E5A",
        "TextWfEngineCUSTOMINGESTIONRawForTAFirehoseRoleF9A5C807"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/CUSTOMINGESTIONRawForTA/KinesisFirehose/KinesisFirehose"
      }
    },
    "TextWfEngineREDDITRawForTAFirehoseRoleAA22A55B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/REDDITRawForTA/FirehoseRole/Resource"
      }
    },
    "TextWfEngineREDDITRawForTAFirehoseRoleDefaultPolicy1F316C5D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineREDDITRawForTAFirehoseRoleDefaultPolicy1F316C5D",
        "Roles": [
          {
            "Ref": "TextWfEngineREDDITRawForTAFirehoseRoleAA22A55B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/REDDITRawForTA/FirehoseRole/DefaultPolicy/Resource"
      }
    },
    "TextWfEngineREDDITRawForTAKinesisFirehosefirehoseloggroupBE73A582": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/REDDITRawForTA/KinesisFirehose/firehose-log-group/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "TextWfEngineREDDITRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamD258266A": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "TextWfEngineREDDITRawForTAKinesisFirehosefirehoseloggroupBE73A582"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/REDDITRawForTA/KinesisFirehose/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "TextWfEngineREDDITRawForTAKinesisFirehoseKinesisFirehoseRole7D893B55": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/REDDITRawForTA/KinesisFirehose/KinesisFirehoseRole/Resource"
      }
    },
    "TextWfEngineREDDITRawForTAKinesisFirehoseKinesisFirehosePolicyB39E5D26": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "TextWfEngineREDDITRawForTAKinesisFirehosefirehoseloggroupBE73A582"
                    },
                    ":log-stream:",
                    {
                      "Ref": "TextWfEngineREDDITRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamD258266A"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineREDDITRawForTAKinesisFirehoseKinesisFirehosePolicyB39E5D26",
        "Roles": [
          {
            "Ref": "TextWfEngineREDDITRawForTAKinesisFirehoseKinesisFirehoseRole7D893B55"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/REDDITRawForTA/KinesisFirehose/KinesisFirehosePolicy/Resource"
      }
    },
    "TextWfEngineREDDITRawForTAKinesisFirehoseCBBBF189": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "DeliveryStreamName": "KinesisFirehosediscoveringhottopTRawForTAKinesisFirehoseF1AB927D",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "TextWfEngineS3BucketE4A78E92",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 600,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "TextWfEngineREDDITRawForTAKinesisFirehosefirehoseloggroupBE73A582"
            },
            "LogStreamName": {
              "Ref": "TextWfEngineREDDITRawForTAKinesisFirehosefirehoseloggroupfirehoselogstreamD258266A"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "Prefix": "reddit/",
          "RoleARN": {
            "Fn::GetAtt": [
              "TextWfEngineREDDITRawForTAFirehoseRoleAA22A55B",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "TextWfEngineREDDITRawForTAFirehoseRoleDefaultPolicy1F316C5D",
        "TextWfEngineREDDITRawForTAFirehoseRoleAA22A55B"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/REDDITRawForTA/KinesisFirehose/KinesisFirehose"
      }
    },
    "TextWfEngineDetectLangTaskLambdaFunctionServiceRole07CBE9D3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/Task/LambdaFunctionServiceRole/Resource"
      }
    },
    "TextWfEngineDetectLangTaskLambdaFunctionServiceRoleDefaultPolicy6194E304": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineDetectLangTaskqueue3D68D883",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineDetectLangTaskLambdaFunctionServiceRoleDefaultPolicy6194E304",
        "Roles": [
          {
            "Ref": "TextWfEngineDetectLangTaskLambdaFunctionServiceRole07CBE9D3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/Task/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TextWfEngineDetectLangTaskLambdaFunctionD7C97032": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset0d1223fea26b1146484de7103a27fad27e6599ef24fa21d97af5e3c1daccf7c3.zip"
        },
        "Environment": {
          "Variables": {
            "DEFAULT_LANGAUGE": "en",
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "ReservedConcurrentExecutions": 15,
        "Role": {
          "Fn::GetAtt": [
            "TextWfEngineDetectLangTaskLambdaFunctionServiceRole07CBE9D3",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TextWfEngineDetectLangTaskLambdaFunctionServiceRoleDefaultPolicy6194E304",
        "TextWfEngineDetectLangTaskLambdaFunctionServiceRole07CBE9D3"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/Task/LambdaFunction/Resource",
        "aws:asset:path": "asset.0d1223fea26b1146484de7103a27fad27e6599ef24fa21d97af5e3c1daccf7c3",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TextWfEngineDetectLangTaskLambdaFunctionSqsEventSourcediscoveringhottopicsusingmachinelearningTextWfEngineDetectLangTaskqueue9DC563FD511AC225": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "TextWfEngineDetectLangTaskqueue3D68D883",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "TextWfEngineDetectLangTaskLambdaFunctionD7C97032"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/Task/LambdaFunction/SqsEventSource:discoveringhottopicsusingmachinelearningTextWfEngineDetectLangTaskqueue9DC563FD/Resource"
      }
    },
    "TextWfEngineDetectLangTaskdeadLetterQueueCED79DA0": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/Task/deadLetterQueue/Resource"
      }
    },
    "TextWfEngineDetectLangTaskdeadLetterQueuePolicy8B6A4A86": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineDetectLangTaskdeadLetterQueueCED79DA0",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineDetectLangTaskdeadLetterQueueCED79DA0",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineDetectLangTaskdeadLetterQueueCED79DA0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/Task/deadLetterQueue/Policy/Resource"
      }
    },
    "TextWfEngineDetectLangTaskqueue3D68D883": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "TextWfEngineDetectLangTaskdeadLetterQueueCED79DA0",
              "Arn"
            ]
          },
          "maxReceiveCount": 15
        },
        "VisibilityTimeout": 3600
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/Task/queue/Resource"
      }
    },
    "TextWfEngineDetectLangTaskqueuePolicy8CF2C3EB": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineDetectLangTaskqueue3D68D883",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineDetectLangTaskqueue3D68D883",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineDetectLangTaskqueue3D68D883"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/Task/queue/Policy/Resource"
      }
    },
    "TextWfEngineDetectLangLambdaStateMachineTaskBDC487D1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "states:SendTaskSuccess",
                "states:sendTaskFailure",
                "states:SendTaskHeartbeat"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineDetectLangLambdaStateMachineTaskBDC487D1",
        "Roles": [
          {
            "Ref": "TextWfEngineDetectLangTaskLambdaFunctionServiceRole07CBE9D3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/DetectLang/LambdaStateMachineTask/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "State machine resource not available, hence defaulting to \"*\""
            }
          ]
        }
      }
    },
    "TextWfEngineLambdaDetectLangPolicy4B080B47": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "comprehend:DetectDominantLanguage",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineLambdaDetectLangPolicy4B080B47",
        "Roles": [
          {
            "Ref": "TextWfEngineDetectLangTaskLambdaFunctionServiceRole07CBE9D3"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Comprehend services.\n                        The comprehend services not have a resource arn. This permission is retricted to\n                        the lambda function responsible for accessing the Amazon Comprehend service"
            }
          ]
        }
      }
    },
    "TextWfEngineLambdaEventBusPolicy9B8BEB7B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InfOutputEventRuleInferenceEvents4A1B5DDC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineLambdaEventBusPolicy9B8BEB7B",
        "Roles": [
          {
            "Ref": "TextWfEnginePublishEventsLambdaFunctionServiceRole27AD8571"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/LambdaEventBusPolicy/Resource"
      }
    },
    "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleD487F0A8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/Task/LambdaFunctionServiceRole/Resource"
      }
    },
    "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleDefaultPolicyA7748156": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineImageAnalysisTaskqueue33EB53E2",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineImageBucketS3BucketF03EE090",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineImageBucketS3BucketF03EE090",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleDefaultPolicyA7748156",
        "Roles": [
          {
            "Ref": "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleD487F0A8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/Task/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TextWfEngineImageAnalysisTaskLambdaFunctionBD828B14": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset8306f10df07916c66d48d3ca8c52e15f15a72737fe667670776ddc6fb536b120.zip"
        },
        "Environment": {
          "Variables": {
            "S3_BUCKET_NAME": {
              "Ref": "TextWfEngineImageBucketS3BucketF03EE090"
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "ReservedConcurrentExecutions": 15,
        "Role": {
          "Fn::GetAtt": [
            "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleD487F0A8",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleDefaultPolicyA7748156",
        "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleD487F0A8"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/Task/LambdaFunction/Resource",
        "aws:asset:path": "asset.8306f10df07916c66d48d3ca8c52e15f15a72737fe667670776ddc6fb536b120",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TextWfEngineImageAnalysisTaskLambdaFunctionSqsEventSourcediscoveringhottopicsusingmachinelearningTextWfEngineImageAnalysisTaskqueueF5610A399D953BF9": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "TextWfEngineImageAnalysisTaskqueue33EB53E2",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "TextWfEngineImageAnalysisTaskLambdaFunctionBD828B14"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/Task/LambdaFunction/SqsEventSource:discoveringhottopicsusingmachinelearningTextWfEngineImageAnalysisTaskqueueF5610A39/Resource"
      }
    },
    "TextWfEngineImageAnalysisTaskdeadLetterQueueB7C025F2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/Task/deadLetterQueue/Resource"
      }
    },
    "TextWfEngineImageAnalysisTaskdeadLetterQueuePolicy7A65C812": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineImageAnalysisTaskdeadLetterQueueB7C025F2",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineImageAnalysisTaskdeadLetterQueueB7C025F2",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineImageAnalysisTaskdeadLetterQueueB7C025F2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/Task/deadLetterQueue/Policy/Resource"
      }
    },
    "TextWfEngineImageAnalysisTaskqueue33EB53E2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "TextWfEngineImageAnalysisTaskdeadLetterQueueB7C025F2",
              "Arn"
            ]
          },
          "maxReceiveCount": 15
        },
        "VisibilityTimeout": 3600
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/Task/queue/Resource"
      }
    },
    "TextWfEngineImageAnalysisTaskqueuePolicyF0BC6C62": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineImageAnalysisTaskqueue33EB53E2",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineImageAnalysisTaskqueue33EB53E2",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineImageAnalysisTaskqueue33EB53E2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/Task/queue/Policy/Resource"
      }
    },
    "TextWfEngineImageAnalysisLambdaStateMachineTaskDDB010C1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "states:SendTaskSuccess",
                "states:sendTaskFailure",
                "states:SendTaskHeartbeat"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineImageAnalysisLambdaStateMachineTaskDDB010C1",
        "Roles": [
          {
            "Ref": "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleD487F0A8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageAnalysis/LambdaStateMachineTask/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "State machine resource not available, hence defaulting to \"*\""
            }
          ]
        }
      }
    },
    "TextWfEngineImageBucketS3BucketF03EE090": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "AccessLogD598EBE9"
          },
          "LogFilePrefix": "TextWfEngine/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageBucket/S3Bucket/Resource"
      }
    },
    "TextWfEngineImageBucketS3BucketPolicy9E5EC5DA": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "TextWfEngineImageBucketS3BucketF03EE090"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineImageBucketS3BucketF03EE090",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineImageBucketS3BucketF03EE090",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:List*",
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "rekognition.amazonaws.com"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineImageBucketS3BucketF03EE090",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineImageBucketS3BucketF03EE090",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ImageBucket/S3Bucket/Policy/Resource"
      }
    },
    "TextWfEngineTextRekAnalyze15353DC6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "rekognition:detectText",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineTextRekAnalyze15353DC6",
        "Roles": [
          {
            "Ref": "TextWfEngineImageAnalysisTaskLambdaFunctionServiceRoleD487F0A8"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Rekognition services. The Rekognition services do not have a resource arn.\n                        This permission is retricted to the lambda function responsible for accessing the Amazon Rekognition service"
            }
          ]
        }
      }
    },
    "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRole01C1EB60": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/Task/LambdaFunctionServiceRole/Resource"
      }
    },
    "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRoleDefaultPolicy86874E37": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineModerationLabelsTaskqueue3AFBDDC1",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineImageBucketS3BucketF03EE090",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineImageBucketS3BucketF03EE090",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRoleDefaultPolicy86874E37",
        "Roles": [
          {
            "Ref": "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRole01C1EB60"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/Task/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TextWfEngineModerationLabelsTaskLambdaFunction3A187F8E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset4d08e2e7877b9c9b424267dd36100eecf8b2b3238adcc4cd47efa1166cec2790.zip"
        },
        "Environment": {
          "Variables": {
            "S3_BUCKET_NAME": {
              "Ref": "TextWfEngineImageBucketS3BucketF03EE090"
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "ReservedConcurrentExecutions": 15,
        "Role": {
          "Fn::GetAtt": [
            "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRole01C1EB60",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRoleDefaultPolicy86874E37",
        "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRole01C1EB60"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/Task/LambdaFunction/Resource",
        "aws:asset:path": "asset.4d08e2e7877b9c9b424267dd36100eecf8b2b3238adcc4cd47efa1166cec2790",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TextWfEngineModerationLabelsTaskLambdaFunctionSqsEventSourcediscoveringhottopicsusingmachinelearningTextWfEngineModerationLabelsTaskqueue4919ECC52E688AE6": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "TextWfEngineModerationLabelsTaskqueue3AFBDDC1",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "TextWfEngineModerationLabelsTaskLambdaFunction3A187F8E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/Task/LambdaFunction/SqsEventSource:discoveringhottopicsusingmachinelearningTextWfEngineModerationLabelsTaskqueue4919ECC5/Resource"
      }
    },
    "TextWfEngineModerationLabelsTaskdeadLetterQueue2C815D87": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/Task/deadLetterQueue/Resource"
      }
    },
    "TextWfEngineModerationLabelsTaskdeadLetterQueuePolicy8FA6FCCD": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineModerationLabelsTaskdeadLetterQueue2C815D87",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineModerationLabelsTaskdeadLetterQueue2C815D87",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineModerationLabelsTaskdeadLetterQueue2C815D87"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/Task/deadLetterQueue/Policy/Resource"
      }
    },
    "TextWfEngineModerationLabelsTaskqueue3AFBDDC1": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "TextWfEngineModerationLabelsTaskdeadLetterQueue2C815D87",
              "Arn"
            ]
          },
          "maxReceiveCount": 15
        },
        "VisibilityTimeout": 3600
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/Task/queue/Resource"
      }
    },
    "TextWfEngineModerationLabelsTaskqueuePolicy3332B9BC": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineModerationLabelsTaskqueue3AFBDDC1",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineModerationLabelsTaskqueue3AFBDDC1",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineModerationLabelsTaskqueue3AFBDDC1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/Task/queue/Policy/Resource"
      }
    },
    "TextWfEngineModerationLabelsLambdaStateMachineTask234868F1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "states:SendTaskSuccess",
                "states:sendTaskFailure",
                "states:SendTaskHeartbeat"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineModerationLabelsLambdaStateMachineTask234868F1",
        "Roles": [
          {
            "Ref": "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRole01C1EB60"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/ModerationLabels/LambdaStateMachineTask/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "State machine resource not available, hence defaulting to \"*\""
            }
          ]
        }
      }
    },
    "TextWfEngineLabelsRekAnalyzeD5370298": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "rekognition:detectModerationLabels",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineLabelsRekAnalyzeD5370298",
        "Roles": [
          {
            "Ref": "TextWfEngineModerationLabelsTaskLambdaFunctionServiceRole01C1EB60"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Rekognition services. The Rekognition services do not have a resource arn.\n                        This permission is retricted to the lambda function responsible for accessing the Amazon Rekognition service"
            }
          ]
        }
      }
    },
    "TextWfEngineTranslateTaskLambdaFunctionServiceRole53414B50": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/Task/LambdaFunctionServiceRole/Resource"
      }
    },
    "TextWfEngineTranslateTaskLambdaFunctionServiceRoleDefaultPolicy2E7E21B9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTranslateTaskqueue377FC7CC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineTranslateTaskLambdaFunctionServiceRoleDefaultPolicy2E7E21B9",
        "Roles": [
          {
            "Ref": "TextWfEngineTranslateTaskLambdaFunctionServiceRole53414B50"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/Task/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TextWfEngineTranslateTaskLambdaFunctionB46D322D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset9e31bbad7fbf00deb1e1e867476b92068f0e78a48944797eb3608a07d5a4a722.zip"
        },
        "Environment": {
          "Variables": {
            "KINESIS_FIREHOSE_FOR_NEWSFEEDS": {
              "Ref": "TextWfEngineNEWSFEEDSRawForTAKinesisFirehoseFD9724B3"
            },
            "KINESIS_FIREHOSE_FOR_YOUTUBECOMMENTS": {
              "Ref": "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehoseE43128CD"
            },
            "KINESIS_FIREHOSE_FOR_CUSTOMINGESTION": {
              "Ref": "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehoseD6C0DD93"
            },
            "KINESIS_FIREHOSE_FOR_REDDIT": {
              "Ref": "TextWfEngineREDDITRawForTAKinesisFirehoseCBBBF189"
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "ReservedConcurrentExecutions": 7,
        "Role": {
          "Fn::GetAtt": [
            "TextWfEngineTranslateTaskLambdaFunctionServiceRole53414B50",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TextWfEngineTranslateTaskLambdaFunctionServiceRoleDefaultPolicy2E7E21B9",
        "TextWfEngineTranslateTaskLambdaFunctionServiceRole53414B50"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/Task/LambdaFunction/Resource",
        "aws:asset:path": "asset.9e31bbad7fbf00deb1e1e867476b92068f0e78a48944797eb3608a07d5a4a722",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TextWfEngineTranslateTaskLambdaFunctionSqsEventSourcediscoveringhottopicsusingmachinelearningTextWfEngineTranslateTaskqueue7FAAA4B0B7110978": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "TextWfEngineTranslateTaskqueue377FC7CC",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "TextWfEngineTranslateTaskLambdaFunctionB46D322D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/Task/LambdaFunction/SqsEventSource:discoveringhottopicsusingmachinelearningTextWfEngineTranslateTaskqueue7FAAA4B0/Resource"
      }
    },
    "TextWfEngineTranslateTaskdeadLetterQueue8AD0DB47": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/Task/deadLetterQueue/Resource"
      }
    },
    "TextWfEngineTranslateTaskdeadLetterQueuePolicyA7B1F710": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTranslateTaskdeadLetterQueue8AD0DB47",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTranslateTaskdeadLetterQueue8AD0DB47",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineTranslateTaskdeadLetterQueue8AD0DB47"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/Task/deadLetterQueue/Policy/Resource"
      }
    },
    "TextWfEngineTranslateTaskqueue377FC7CC": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "TextWfEngineTranslateTaskdeadLetterQueue8AD0DB47",
              "Arn"
            ]
          },
          "maxReceiveCount": 15
        },
        "VisibilityTimeout": 36000
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/Task/queue/Resource"
      }
    },
    "TextWfEngineTranslateTaskqueuePolicy7F76EB3E": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTranslateTaskqueue377FC7CC",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTranslateTaskqueue377FC7CC",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineTranslateTaskqueue377FC7CC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/Task/queue/Policy/Resource"
      }
    },
    "TextWfEngineTranslateLambdaStateMachineTaskA717EA71": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "states:SendTaskSuccess",
                "states:sendTaskFailure",
                "states:SendTaskHeartbeat"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineTranslateLambdaStateMachineTaskA717EA71",
        "Roles": [
          {
            "Ref": "TextWfEngineTranslateTaskLambdaFunctionServiceRole53414B50"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/Translate/LambdaStateMachineTask/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "State machine resource not available, hence defaulting to \"*\""
            }
          ]
        }
      }
    },
    "TextWfEngineTranslateLambda6E2A8B49": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "translate:translateText",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "firehose:PutRecord",
                "firehose:PutRecordBatch"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineNEWSFEEDSRawForTAKinesisFirehoseFD9724B3",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "TextWfEngineYOUTUBECOMMENTSRawForTAKinesisFirehoseE43128CD",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "TextWfEngineCUSTOMINGESTIONRawForTAKinesisFirehoseD6C0DD93",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "TextWfEngineREDDITRawForTAKinesisFirehoseCBBBF189",
                    "Arn"
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineTranslateLambda6E2A8B49",
        "Roles": [
          {
            "Ref": "TextWfEngineTranslateTaskLambdaFunctionServiceRole53414B50"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Translate services. The translate services do not have a resource arn.\n                        This permission is retricted to the lambda function responsible for accessing the Amazon Translate service"
            }
          ]
        }
      }
    },
    "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleFC52C614": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/Task/LambdaFunctionServiceRole/Resource"
      }
    },
    "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleDefaultPolicy03DCA10D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTextAnalysisTaskqueue18A3FD57",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleDefaultPolicy03DCA10D",
        "Roles": [
          {
            "Ref": "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleFC52C614"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/Task/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TextWfEngineTextAnalysisTaskLambdaFunction431D725E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset65961ee3c57ec7e40e969a51afbfee40da066f9eb50002414af75b3c67270931.zip"
        },
        "Environment": {
          "Variables": {
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "ReservedConcurrentExecutions": 15,
        "Role": {
          "Fn::GetAtt": [
            "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleFC52C614",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleDefaultPolicy03DCA10D",
        "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleFC52C614"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/Task/LambdaFunction/Resource",
        "aws:asset:path": "asset.65961ee3c57ec7e40e969a51afbfee40da066f9eb50002414af75b3c67270931",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TextWfEngineTextAnalysisTaskLambdaFunctionSqsEventSourcediscoveringhottopicsusingmachinelearningTextWfEngineTextAnalysisTaskqueueF9942CE21024EED9": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "TextWfEngineTextAnalysisTaskqueue18A3FD57",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "TextWfEngineTextAnalysisTaskLambdaFunction431D725E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/Task/LambdaFunction/SqsEventSource:discoveringhottopicsusingmachinelearningTextWfEngineTextAnalysisTaskqueueF9942CE2/Resource"
      }
    },
    "TextWfEngineTextAnalysisTaskdeadLetterQueueF99B1946": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/Task/deadLetterQueue/Resource"
      }
    },
    "TextWfEngineTextAnalysisTaskdeadLetterQueuePolicy59D53370": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTextAnalysisTaskdeadLetterQueueF99B1946",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTextAnalysisTaskdeadLetterQueueF99B1946",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineTextAnalysisTaskdeadLetterQueueF99B1946"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/Task/deadLetterQueue/Policy/Resource"
      }
    },
    "TextWfEngineTextAnalysisTaskqueue18A3FD57": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "TextWfEngineTextAnalysisTaskdeadLetterQueueF99B1946",
              "Arn"
            ]
          },
          "maxReceiveCount": 15
        },
        "VisibilityTimeout": 3600
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/Task/queue/Resource"
      }
    },
    "TextWfEngineTextAnalysisTaskqueuePolicyF9CF0519": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTextAnalysisTaskqueue18A3FD57",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTextAnalysisTaskqueue18A3FD57",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TextWfEngineTextAnalysisTaskqueue18A3FD57"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/Task/queue/Policy/Resource"
      }
    },
    "TextWfEngineTextAnalysisLambdaStateMachineTaskCC1B401B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "states:SendTaskSuccess",
                "states:sendTaskFailure",
                "states:SendTaskHeartbeat"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineTextAnalysisLambdaStateMachineTaskCC1B401B",
        "Roles": [
          {
            "Ref": "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleFC52C614"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/TextAnalysis/LambdaStateMachineTask/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "State machine resource not available, hence defaulting to \"*\""
            }
          ]
        }
      }
    },
    "TextWfEngineLambdaComprehendPolicy647FCF16": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "comprehend:DetectSentiment",
                "comprehend:DetectEntities",
                "comprehend:DetectKeyPhrases"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineLambdaComprehendPolicy647FCF16",
        "Roles": [
          {
            "Ref": "TextWfEngineTextAnalysisTaskLambdaFunctionServiceRoleFC52C614"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Comprehend services.\n                    The comprehend services not have a resource arn. This permission is retricted to\n                    the lambda function responsible for accessing the Amazon Comprehend service"
            }
          ]
        }
      }
    },
    "TextWfEnginePublishEventsLambdaFunctionServiceRole27AD8571": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/PublishEvents/LambdaFunctionServiceRole/Resource"
      }
    },
    "TextWfEnginePublishEventsLambdaFunctionServiceRoleDefaultPolicy1A6CD55B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEnginePublishEventsLambdaFunctionServiceRoleDefaultPolicy1A6CD55B",
        "Roles": [
          {
            "Ref": "TextWfEnginePublishEventsLambdaFunctionServiceRole27AD8571"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/PublishEvents/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TextWfEnginePublishEventsLambdaFunctionF22DF4EC": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset0cd95df8b3b549cb1a8e11bc75582598ea0c16ee131be99dec3ee1ae9a12d4b0.zip"
        },
        "Environment": {
          "Variables": {
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "EVENT_NAMESPACE": "com.analyze.text.inference",
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "TextWfEnginePublishEventsLambdaFunctionServiceRole27AD8571",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TextWfEnginePublishEventsLambdaFunctionServiceRoleDefaultPolicy1A6CD55B",
        "TextWfEnginePublishEventsLambdaFunctionServiceRole27AD8571"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/PublishEvents/LambdaFunction/Resource",
        "aws:asset:path": "asset.0cd95df8b3b549cb1a8e11bc75582598ea0c16ee131be99dec3ee1ae9a12d4b0",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TextWfEngineStateMachineWorkflowEngineStateMachineLogGroup42CAD18E": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/vendedlogs/states/constructs/discovering-hot-topics-using-machine-learningWorkflowEngineStateMachineLog-",
              {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/StateMachine/WorkflowEngine/StateMachineLogGroup/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "TextWfEngineStateMachineWorkflowEngineStateMachineRole581D5F07": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "states"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/StateMachine/WorkflowEngine/StateMachine/Role/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Information required for troubleshooting is logged by state function and lambda functions",
              "id": "AwsSolutions-SF1"
            }
          ]
        }
      }
    },
    "TextWfEngineStateMachineWorkflowEngineStateMachineRoleDefaultPolicy0B6BB120": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineImageAnalysisTaskqueue33EB53E2",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineDetectLangTaskqueue3D68D883",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEnginePublishEventsLambdaFunctionF22DF4EC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEnginePublishEventsLambdaFunctionF22DF4EC",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineModerationLabelsTaskqueue3AFBDDC1",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTranslateTaskqueue377FC7CC",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TextWfEngineTextAnalysisTaskqueue18A3FD57",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TextWfEngineStateMachineWorkflowEngineStateMachineRoleDefaultPolicy0B6BB120",
        "Roles": [
          {
            "Ref": "TextWfEngineStateMachineWorkflowEngineStateMachineRole581D5F07"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/StateMachine/WorkflowEngine/StateMachine/Role/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W76",
              "reason": "The statemachine invokes multiple lambdas and the policy is narrowed down to the specific lambda resource arn. Hence it has multiple policy statements resulting in a higher SPCM value"
            },
            {
              "id": "W12",
              "reason": "The \"LogDelivery\" actions do not support resource-level authorization"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Information required for troubleshooting is logged by state function and lambda functions",
              "id": "AwsSolutions-SF1"
            }
          ]
        }
      }
    },
    "TextWfEngineStateMachineWorkflowEngineStateMachine5B720464": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"LanguageAvailable?\",\"States\":{\"LanguageAvailable?\":{\"Type\":\"Choice\",\"Comment\":\"Check if the language is available\",\"InputPath\":\"$\",\"Choices\":[{\"Variable\":\"$.feed.lang\",\"IsPresent\":false,\"Next\":\"DetectLangSendMessage\"},{\"Variable\":\"$.feed.lang\",\"StringEquals\":\"und\",\"Next\":\"DetectLangSendMessage\"},{\"Variable\":\"$.feed.lang\",\"StringEquals\":\"None\",\"Next\":\"DetectLangSendMessage\"}],\"Default\":\"ImageAnalysisSendMessage\"},\"ImageAnalysisSendMessage\":{\"Next\":\"TextImageSplitProcess\",\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":3,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"ImageAnalysisTaskFailed\"}],\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"HeartbeatSeconds\":43200,\"OutputPath\":\"$\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::sqs:sendMessage.waitForTaskToken\",\"Parameters\":{\"QueueUrl\":\"",
              {
                "Ref": "TextWfEngineImageAnalysisTaskqueue33EB53E2"
              },
              "\",\"MessageBody\":{\"input.$\":\"$\",\"taskToken.$\":\"$$.Task.Token\"}}},\"DetectLangSendMessage\":{\"Next\":\"ImageAnalysisSendMessage\",\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":3,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"DetectLangTaskFailed\"}],\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"HeartbeatSeconds\":43200,\"OutputPath\":\"$\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::sqs:sendMessage.waitForTaskToken\",\"Parameters\":{\"QueueUrl\":\"",
              {
                "Ref": "TextWfEngineDetectLangTaskqueue3D68D883"
              },
              "\",\"MessageBody\":{\"input.$\":\"$\",\"taskToken.$\":\"$$.Task.Token\"}}},\"DetectLangTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"},\"TextImageSplitProcess\":{\"Type\":\"Parallel\",\"Comment\":\"Parallely process Text and Image\",\"Next\":\"MergeJson\",\"InputPath\":\"$\",\"OutputPath\":\"$\",\"Branches\":[{\"StartAt\":\"ModerationLabelsSendMessage\",\"States\":{\"ModerationLabelsSendMessage\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":3,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"ModerationLabelsTaskFailed\"}],\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"HeartbeatSeconds\":43200,\"OutputPath\":\"$.moderation_labels_in_imgs\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::sqs:sendMessage.waitForTaskToken\",\"Parameters\":{\"QueueUrl\":\"",
              {
                "Ref": "TextWfEngineModerationLabelsTaskqueue3AFBDDC1"
              },
              "\",\"MessageBody\":{\"input.$\":\"$\",\"taskToken.$\":\"$$.Task.Token\"}}},\"ModerationLabelsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}},{\"StartAt\":\"TranslateSendMessage\",\"States\":{\"TranslateSendMessage\":{\"Next\":\"TextAnalysisSendMessage\",\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":3,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"TranslateTaskFailed\"}],\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"HeartbeatSeconds\":43200,\"OutputPath\":\"$\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::sqs:sendMessage.waitForTaskToken\",\"Parameters\":{\"QueueUrl\":\"",
              {
                "Ref": "TextWfEngineTranslateTaskqueue377FC7CC"
              },
              "\",\"MessageBody\":{\"input.$\":\"$\",\"taskToken.$\":\"$$.Task.Token\"}}},\"TextAnalysisSendMessage\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":3,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"TextAnalysisTaskFailed\"}],\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"HeartbeatSeconds\":43200,\"OutputPath\":\"$\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::sqs:sendMessage.waitForTaskToken\",\"Parameters\":{\"QueueUrl\":\"",
              {
                "Ref": "TextWfEngineTextAnalysisTaskqueue18A3FD57"
              },
              "\",\"MessageBody\":{\"input.$\":\"$\",\"taskToken.$\":\"$$.Task.Token\"}}},\"TextAnalysisTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"},\"TranslateTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}}]},\"MergeJson\":{\"Type\":\"Pass\",\"Parameters\":{\"account_name.$\":\"$[1].account_name\",\"platform.$\":\"$[1].platform\",\"search_query.$\":\"$[1].search_query\",\"feed.$\":\"$[1].feed\",\"Sentiment.$\":\"$[1].Sentiment\",\"SentimentScore.$\":\"$[1].SentimentScore\",\"KeyPhrases.$\":\"$[1].KeyPhrases\",\"Entities.$\":\"$[1].Entities\",\"moderation_labels_in_imgs.$\":\"$[0]\",\"text_in_images.$\":\"$[1].text_in_images\"},\"Next\":\"PublishEvents\"},\"PublishEvents\":{\"Next\":\"Success\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"PublishEventsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TextWfEnginePublishEventsLambdaFunctionF22DF4EC",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"Success\":{\"Type\":\"Succeed\"},\"PublishEventsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"},\"ImageAnalysisTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "TextWfEngineStateMachineWorkflowEngineStateMachineLogGroup42CAD18E",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Level": "ERROR"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "TextWfEngineStateMachineWorkflowEngineStateMachineRole581D5F07",
            "Arn"
          ]
        },
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "TextWfEngineStateMachineWorkflowEngineStateMachineRoleDefaultPolicy0B6BB120",
        "TextWfEngineStateMachineWorkflowEngineStateMachineRole581D5F07"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/StateMachine/WorkflowEngine/StateMachine/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Information required for troubleshooting is logged by state function and lambda functions",
              "id": "AwsSolutions-SF1"
            }
          ]
        }
      }
    },
    "TextWfEngineStateMachineWorkflowEngineExecutionFailedAlarm7A86D3DB": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm for the number of executions that failed exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "StateMachineArn",
            "Value": {
              "Ref": "TextWfEngineStateMachineWorkflowEngineStateMachine5B720464"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsFailed",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/StateMachine/WorkflowEngine/ExecutionFailedAlarm/Resource"
      }
    },
    "TextWfEngineStateMachineWorkflowEngineExecutionThrottledAlarm7CF155BF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm for the number of executions that throttled exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "StateMachineArn",
            "Value": {
              "Ref": "TextWfEngineStateMachineWorkflowEngineStateMachine5B720464"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionThrottled",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/StateMachine/WorkflowEngine/ExecutionThrottledAlarm/Resource"
      }
    },
    "TextWfEngineStateMachineWorkflowEngineExecutionAbortedAlarm513508DF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm for the number of executions that aborted exceeded the threshold of 1. ",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "StateMachineArn",
            "Value": {
              "Ref": "TextWfEngineStateMachineWorkflowEngineStateMachine5B720464"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "MetricName": "ExecutionsAborted",
        "Namespace": "AWS/States",
        "Period": 300,
        "Statistic": "Maximum",
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TextWfEngine/StateMachine/WorkflowEngine/ExecutionAbortedAlarm/Resource"
      }
    },
    "TopicWFEngineLambdaEventBusPolicyF3CDD715": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InfOutputEventRuleInferenceEvents4A1B5DDC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineLambdaEventBusPolicyF3CDD715",
        "Roles": [
          {
            "Ref": "TopicWFEnginePublishTopicMappingLambdaFunctionServiceRole6209F409"
          },
          {
            "Ref": "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunctionServiceRole07699A52"
          },
          {
            "Ref": "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunctionServiceRole47F833FC"
          },
          {
            "Ref": "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionServiceRole77A3B253"
          },
          {
            "Ref": "TopicWFEngineREDDITPublishTopicTermsLambdaFunctionServiceRole24A6BC33"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/LambdaEventBusPolicy/Resource"
      }
    },
    "TopicWFEngineTopicSchedule8201A569": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": {
          "Ref": "TopicAnalysisFrequency"
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicWFEngineTopicModelWFWorkflowEngine17228E3F"
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "TopicWFEngineTopicModelWFWorkflowEngineEventsRoleB3A52E0A",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicSchedule/Resource"
      }
    },
    "TopicWFEngineSubmitTopicLambdaFunctionServiceRole37AD1161": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/SubmitTopic/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineSubmitTopicLambdaFunctionServiceRoleDefaultPolicy7482E439": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineSubmitTopicLambdaFunctionServiceRoleDefaultPolicy7482E439",
        "Roles": [
          {
            "Ref": "TopicWFEngineSubmitTopicLambdaFunctionServiceRole37AD1161"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/SubmitTopic/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineSubmitTopicLambdaFunction0E7BA0C4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset76b9ba4926a765197227c1f311cf8f5f896e91aed36f4966915996546426a4bd.zip"
        },
        "Environment": {
          "Variables": {
            "INGESTION_WINDOW": "24",
            "RAW_BUCKET_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "SOURCE_PREFIX": "NEWSFEEDS,YOUTUBECOMMENTS,CUSTOMINGESTION,REDDIT",
            "NUMBER_OF_TOPICS": {
              "Ref": "NumberOfTopics"
            },
            "STACK_NAME": {
              "Ref": "AWS::StackName"
            },
            "S3_BUCKET_NAME": {
              "Ref": "TopicWFEngineTopicIngestionS3Bucket9639D507"
            },
            "INGESTION_S3_BUCKET_NAME": {
              "Ref": "TopicWFEngineTopicIngestionS3Bucket9639D507"
            },
            "DATA_ACCESS_ARN": {
              "Fn::GetAtt": [
                "TopicWFEngineTopicAnalysisRole9EB1967A",
                "Arn"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineSubmitTopicLambdaFunctionServiceRole37AD1161",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 600,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineSubmitTopicLambdaFunctionServiceRoleDefaultPolicy7482E439",
        "TopicWFEngineSubmitTopicLambdaFunctionServiceRole37AD1161"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/SubmitTopic/LambdaFunction/Resource",
        "aws:asset:path": "asset.76b9ba4926a765197227c1f311cf8f5f896e91aed36f4966915996546426a4bd",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineLambdaSubmitJobPolicy21CC3FA6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "comprehend:StartTopicsDetectionJob",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineLambdaSubmitJobPolicy21CC3FA6",
        "Roles": [
          {
            "Ref": "TopicWFEngineSubmitTopicLambdaFunctionServiceRole37AD1161"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Comprehend services for Topic Detection. The Comprehend services not have a resource arn. This permission is retricted to the lambda function responsible for accessing the Amazon Comprehend service"
            }
          ]
        }
      }
    },
    "TopicWFEngineTopicIngestionS3Bucket9639D507": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "AccessLogD598EBE9"
          },
          "LogFilePrefix": "TopicWFEngine-TopicIngestion/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicIngestion/S3Bucket/Resource"
      }
    },
    "TopicWFEngineTopicIngestionS3BucketPolicyE6CD34E2": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "TopicWFEngineTopicIngestionS3Bucket9639D507"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicIngestion/S3Bucket/Policy/Resource"
      }
    },
    "TopicWFEngineTopicAnalysisRole9EB1967A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "comprehend.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicAnalysisRole/Resource"
      }
    },
    "TopicWFEngineTopicAnalysisRoleDefaultPolicyE5D91372": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineTopicAnalysisRoleDefaultPolicyE5D91372",
        "Roles": [
          {
            "Ref": "TopicWFEngineTopicAnalysisRole9EB1967A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicAnalysisRole/DefaultPolicy/Resource"
      }
    },
    "TopicWFEngineLambdaComprehendPassPolicy740C9B71": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:GetRole",
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEngineTopicAnalysisRole9EB1967A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineLambdaComprehendPassPolicy740C9B71",
        "Roles": [
          {
            "Ref": "TopicWFEngineSubmitTopicLambdaFunctionServiceRole37AD1161"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/LambdaComprehendPassPolicy/Resource"
      }
    },
    "TopicWFEnginePublishTopicMappingLambdaFunctionServiceRole6209F409": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/PublishTopicMapping/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEnginePublishTopicMappingLambdaFunctionServiceRoleDefaultPolicy0D844F9E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingqueue92B81083",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEnginePublishTopicMappingLambdaFunctionServiceRoleDefaultPolicy0D844F9E",
        "Roles": [
          {
            "Ref": "TopicWFEnginePublishTopicMappingLambdaFunctionServiceRole6209F409"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/PublishTopicMapping/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEnginePublishTopicMappingLambdaFunctionC4B35844": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "NEWSFEEDS,YOUTUBECOMMENTS,CUSTOMINGESTION,REDDIT",
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_mapping_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEnginePublishTopicMappingLambdaFunctionServiceRole6209F409",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEnginePublishTopicMappingLambdaFunctionServiceRoleDefaultPolicy0D844F9E",
        "TopicWFEnginePublishTopicMappingLambdaFunctionServiceRole6209F409"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/PublishTopicMapping/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEnginePublishTopicMappingLambdaFunctionSqsEventSourcediscoveringhottopicsusingmachinelearningTopicWFEnginePublishTopicMappingqueue39341E88716060CA": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "TopicWFEnginePublishTopicMappingqueue92B81083",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "TopicWFEnginePublishTopicMappingLambdaFunctionC4B35844"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/PublishTopicMapping/LambdaFunction/SqsEventSource:discoveringhottopicsusingmachinelearningTopicWFEnginePublishTopicMappingqueue39341E88/Resource"
      }
    },
    "TopicWFEnginePublishTopicMappingdeadLetterQueue31671EE8": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/PublishTopicMapping/deadLetterQueue/Resource"
      }
    },
    "TopicWFEnginePublishTopicMappingdeadLetterQueuePolicy442653C6": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingdeadLetterQueue31671EE8",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingdeadLetterQueue31671EE8",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TopicWFEnginePublishTopicMappingdeadLetterQueue31671EE8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/PublishTopicMapping/deadLetterQueue/Policy/Resource"
      }
    },
    "TopicWFEnginePublishTopicMappingqueue92B81083": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "TopicWFEnginePublishTopicMappingdeadLetterQueue31671EE8",
              "Arn"
            ]
          },
          "maxReceiveCount": 15
        },
        "VisibilityTimeout": 7200
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/PublishTopicMapping/queue/Resource"
      }
    },
    "TopicWFEnginePublishTopicMappingqueuePolicyF7708A0C": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:RemovePermission",
                "sqs:AddPermission",
                "sqs:SetQueueAttributes"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingqueue92B81083",
                  "Arn"
                ]
              },
              "Sid": "QueueOwnerOnlyAccess"
            },
            {
              "Action": "SQS:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingqueue92B81083",
                  "Arn"
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "TopicWFEnginePublishTopicMappingqueue92B81083"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/PublishTopicMapping/queue/Policy/Resource"
      }
    },
    "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunctionServiceRole07699A52": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/NEWSFEEDSPublishTopicTerms/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy7ABE4703": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy7ABE4703",
        "Roles": [
          {
            "Ref": "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunctionServiceRole07699A52"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/NEWSFEEDSPublishTopicTerms/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunction22089D91": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "NEWSFEEDS",
            "QUEUE_NAME": {
              "Fn::GetAtt": [
                "TopicWFEnginePublishTopicMappingqueue92B81083",
                "QueueName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_terms_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunctionServiceRole07699A52",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy7ABE4703",
        "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunctionServiceRole07699A52"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/NEWSFEEDSPublishTopicTerms/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionServiceRole90AA2091": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/NEWSFEEDSPublishTopics/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionServiceRoleDefaultPolicy74861D8E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingqueue92B81083",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionServiceRoleDefaultPolicy74861D8E",
        "Roles": [
          {
            "Ref": "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionServiceRole90AA2091"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/NEWSFEEDSPublishTopics/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionDF83DFCF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "NEWSFEEDS",
            "QUEUE_NAME": {
              "Fn::GetAtt": [
                "TopicWFEnginePublishTopicMappingqueue92B81083",
                "QueueName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionServiceRole90AA2091",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionServiceRoleDefaultPolicy74861D8E",
        "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionServiceRole90AA2091"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/NEWSFEEDSPublishTopics/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunctionServiceRole47F833FC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/YOUTUBECOMMENTSPublishTopicTerms/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy4E61D88E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy4E61D88E",
        "Roles": [
          {
            "Ref": "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunctionServiceRole47F833FC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/YOUTUBECOMMENTSPublishTopicTerms/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunction0A246C25": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "YOUTUBECOMMENTS",
            "QUEUE_NAME": {
              "Fn::GetAtt": [
                "TopicWFEnginePublishTopicMappingqueue92B81083",
                "QueueName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_terms_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunctionServiceRole47F833FC",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy4E61D88E",
        "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunctionServiceRole47F833FC"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/YOUTUBECOMMENTSPublishTopicTerms/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionServiceRoleE85A1C15": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/YOUTUBECOMMENTSPublishTopics/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionServiceRoleDefaultPolicyFDACAD69": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingqueue92B81083",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionServiceRoleDefaultPolicyFDACAD69",
        "Roles": [
          {
            "Ref": "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionServiceRoleE85A1C15"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/YOUTUBECOMMENTSPublishTopics/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionDA892EDF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "YOUTUBECOMMENTS",
            "QUEUE_NAME": {
              "Fn::GetAtt": [
                "TopicWFEnginePublishTopicMappingqueue92B81083",
                "QueueName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionServiceRoleE85A1C15",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionServiceRoleDefaultPolicyFDACAD69",
        "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionServiceRoleE85A1C15"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/YOUTUBECOMMENTSPublishTopics/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionServiceRole77A3B253": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CUSTOMINGESTIONPublishTopicTerms/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicyAC5C26D3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicyAC5C26D3",
        "Roles": [
          {
            "Ref": "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionServiceRole77A3B253"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CUSTOMINGESTIONPublishTopicTerms/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionC9E71C20": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "CUSTOMINGESTION",
            "QUEUE_NAME": {
              "Fn::GetAtt": [
                "TopicWFEnginePublishTopicMappingqueue92B81083",
                "QueueName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_terms_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionServiceRole77A3B253",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicyAC5C26D3",
        "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionServiceRole77A3B253"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CUSTOMINGESTIONPublishTopicTerms/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunctionServiceRoleC778A751": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CUSTOMINGESTIONPublishTopics/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunctionServiceRoleDefaultPolicy47425911": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingqueue92B81083",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunctionServiceRoleDefaultPolicy47425911",
        "Roles": [
          {
            "Ref": "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunctionServiceRoleC778A751"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CUSTOMINGESTIONPublishTopics/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunction86C53D94": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "CUSTOMINGESTION",
            "QUEUE_NAME": {
              "Fn::GetAtt": [
                "TopicWFEnginePublishTopicMappingqueue92B81083",
                "QueueName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunctionServiceRoleC778A751",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunctionServiceRoleDefaultPolicy47425911",
        "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunctionServiceRoleC778A751"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CUSTOMINGESTIONPublishTopics/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineREDDITPublishTopicTermsLambdaFunctionServiceRole24A6BC33": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/REDDITPublishTopicTerms/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineREDDITPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy698330FF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TextWfEngineS3BucketE4A78E92",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TextWfEngineS3BucketE4A78E92",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineREDDITPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy698330FF",
        "Roles": [
          {
            "Ref": "TopicWFEngineREDDITPublishTopicTermsLambdaFunctionServiceRole24A6BC33"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/REDDITPublishTopicTerms/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineREDDITPublishTopicTermsLambdaFunction4A33B9EF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "REDDIT",
            "QUEUE_NAME": {
              "Fn::GetAtt": [
                "TopicWFEnginePublishTopicMappingqueue92B81083",
                "QueueName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_terms_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineREDDITPublishTopicTermsLambdaFunctionServiceRole24A6BC33",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineREDDITPublishTopicTermsLambdaFunctionServiceRoleDefaultPolicy698330FF",
        "TopicWFEngineREDDITPublishTopicTermsLambdaFunctionServiceRole24A6BC33"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/REDDITPublishTopicTerms/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineREDDITPublishTopicsLambdaFunctionServiceRoleD8A1F3C8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/REDDITPublishTopics/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineREDDITPublishTopicsLambdaFunctionServiceRoleDefaultPolicy3FE7413B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineTopicIngestionS3Bucket9639D507",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineTopicIngestionS3Bucket9639D507",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TopicWFEnginePublishTopicMappingqueue92B81083",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineREDDITPublishTopicsLambdaFunctionServiceRoleDefaultPolicy3FE7413B",
        "Roles": [
          {
            "Ref": "TopicWFEngineREDDITPublishTopicsLambdaFunctionServiceRoleD8A1F3C8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/REDDITPublishTopics/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineREDDITPublishTopicsLambdaFunction5B9C4247": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252.zip"
        },
        "Environment": {
          "Variables": {
            "RAW_DATA_FEED": {
              "Ref": "TextWfEngineS3BucketE4A78E92"
            },
            "EVENT_BUS_NAME": {
              "Ref": "InfOutputEventRuleInferenceEvents4A1B5DDC"
            },
            "TOPICS_EVENT_NAMESPACE": "com.analyze.topic.inference.topics",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.analyze.topic.inference.mappings",
            "SOURCE_PREFIX": "REDDIT",
            "QUEUE_NAME": {
              "Fn::GetAtt": [
                "TopicWFEnginePublishTopicMappingqueue92B81083",
                "QueueName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "lambda_function.topic_handler",
        "Layers": [
          {
            "Ref": "CustomConfigPythonLibLayerBAAC3D1D"
          }
        ],
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineREDDITPublishTopicsLambdaFunctionServiceRoleD8A1F3C8",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineREDDITPublishTopicsLambdaFunctionServiceRoleDefaultPolicy3FE7413B",
        "TopicWFEngineREDDITPublishTopicsLambdaFunctionServiceRoleD8A1F3C8"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/REDDITPublishTopics/LambdaFunction/Resource",
        "aws:asset:path": "asset.ecdc58b199e7a6f8d10055e124207b82122090b0224b177bd8e8da0c97cf0252",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineCheckStatusLambdaFunctionServiceRoleB8A2D71F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CheckStatus/LambdaFunctionServiceRole/Resource"
      }
    },
    "TopicWFEngineCheckStatusLambdaFunctionServiceRoleDefaultPolicy2D9B1400": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineCheckStatusLambdaFunctionServiceRoleDefaultPolicy2D9B1400",
        "Roles": [
          {
            "Ref": "TopicWFEngineCheckStatusLambdaFunctionServiceRoleB8A2D71F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CheckStatus/LambdaFunctionServiceRole/DefaultPolicy/Resource",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "TopicWFEngineCheckStatusLambdaFunction10F92AAF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetba0b29a9dc6cdb83a946f5d247d0d9cf64099adf893c3ba1d511d46fd40ad703.zip"
        },
        "Environment": {
          "Variables": {
            "SOURCE_PREFIX": "NEWSFEEDS,YOUTUBECOMMENTS,CUSTOMINGESTION,REDDIT",
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0122/v2.2.1\" }"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CustomConfig573191C7"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "TopicWFEngineCheckStatusLambdaFunctionServiceRoleB8A2D71F",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "TopicWFEngineCheckStatusLambdaFunctionServiceRoleDefaultPolicy2D9B1400",
        "TopicWFEngineCheckStatusLambdaFunctionServiceRoleB8A2D71F"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/CheckStatus/LambdaFunction/Resource",
        "aws:asset:path": "asset.ba0b29a9dc6cdb83a946f5d247d0d9cf64099adf893c3ba1d511d46fd40ad703",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "TopicWFEngineLambdaDescribeJobPolicy53598BBB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "comprehend:DescribeTopicsDetectionJob",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineLambdaDescribeJobPolicy53598BBB",
        "Roles": [
          {
            "Ref": "TopicWFEngineCheckStatusLambdaFunctionServiceRoleB8A2D71F"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Comprehend services for Topic Detection. The Comprehend services not have a resource arn. This permission is retricted to the lambda function responsible for accessing the Amazon Comprehend service"
            }
          ]
        }
      }
    },
    "TopicWFEngineTopicModelWFStateMachineRole31C99C72": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "states.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".amazonaws.com"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicModelWF/StateMachineRole/Resource"
      }
    },
    "TopicWFEngineTopicModelWFStateMachineLogPolicy10F3B1A4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineTopicModelWFStateMachineLogPolicy10F3B1A4",
        "Roles": [
          {
            "Ref": "TopicWFEngineTopicModelWFStateMachineRole31C99C72"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicModelWF/StateMachineLogPolicy/Resource"
      }
    },
    "TopicWFEngineTopicModelWFWorkflowEngineRole4E2AF997": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "states"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "TopicWFEngineTopicModelWFStateMachineRole31C99C72"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicModelWF/WorkflowEngine/Role/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Information required for troubleshooting is logged by state function and lambda functions",
              "id": "AwsSolutions-SF1"
            }
          ]
        }
      }
    },
    "TopicWFEngineTopicModelWFWorkflowEngineRoleDefaultPolicy456593B5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineSubmitTopicLambdaFunction0E7BA0C4",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineSubmitTopicLambdaFunction0E7BA0C4",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineCheckStatusLambdaFunction10F92AAF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineCheckStatusLambdaFunction10F92AAF",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunction22089D91",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunction22089D91",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionDF83DFCF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionDF83DFCF",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunction0A246C25",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunction0A246C25",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionDA892EDF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionDA892EDF",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionC9E71C20",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionC9E71C20",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunction86C53D94",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunction86C53D94",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineREDDITPublishTopicTermsLambdaFunction4A33B9EF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineREDDITPublishTopicTermsLambdaFunction4A33B9EF",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TopicWFEngineREDDITPublishTopicsLambdaFunction5B9C4247",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TopicWFEngineREDDITPublishTopicsLambdaFunction5B9C4247",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineTopicModelWFWorkflowEngineRoleDefaultPolicy456593B5",
        "Roles": [
          {
            "Ref": "TopicWFEngineTopicModelWFWorkflowEngineRole4E2AF997"
          }
        ]
      },
      "DependsOn": [
        "TopicWFEngineTopicModelWFStateMachineRole31C99C72"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicModelWF/WorkflowEngine/Role/DefaultPolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Information required for troubleshooting is logged by state function and lambda functions",
              "id": "AwsSolutions-SF1"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W76",
              "reason": "The statemachine invokes multiple lambdas and the policy is narrowed down to the specific lambda resource arn. Hence it has multiple policy statements resulting in a higher SPCM value"
            },
            {
              "id": "W12",
              "reason": "The \"LogDelivery\" actions do not support resource-level authorization"
            }
          ]
        }
      }
    },
    "TopicWFEngineTopicModelWFWorkflowEngine17228E3F": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Submit\",\"States\":{\"Submit\":{\"Next\":\"JobSubmitted?\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"SubmitTopicTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineSubmitTopicLambdaFunction0E7BA0C4",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"JobSubmitted?\":{\"Type\":\"Choice\",\"Comment\":\"Check if the topic modeling job is submitted\",\"InputPath\":\"$\",\"Choices\":[{\"Variable\":\"$.JobStatus\",\"StringEquals\":\"NO_DATA\",\"Next\":\"NoData\"},{\"Variable\":\"$.JobStatus\",\"StringEquals\":\"FAILED\",\"Next\":\"SubmitFailed\"}],\"Default\":\"Check Status\"},\"Check Status\":{\"Next\":\"JobComplete?\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"CheckStatusTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"InputPath\":\"$\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineCheckStatusLambdaFunction10F92AAF",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"Wait\":{\"Type\":\"Wait\",\"Seconds\":600,\"Next\":\"Check Status\"},\"JobComplete?\":{\"Type\":\"Choice\",\"Comment\":\"Check if the topic modeling job is complete\",\"InputPath\":\"$\",\"Choices\":[{\"Variable\":\"$.JobStatus\",\"StringEquals\":\"COMPLETED\",\"Next\":\"PublishTopic\"},{\"Variable\":\"$.JobStatus\",\"StringEquals\":\"IN_PROGRESS\",\"Next\":\"Wait\"},{\"Variable\":\"$.JobStatus\",\"StringEquals\":\"SUBMITTED\",\"Next\":\"Wait\"}],\"Default\":\"JobFailed\"},\"JobFailed\":{\"Type\":\"Fail\"},\"PublishTopic\":{\"Type\":\"Parallel\",\"Comment\":\"Parallely process various platform types\",\"End\":true,\"InputPath\":\"$\",\"OutputPath\":\"$\",\"Branches\":[{\"StartAt\":\"PublishTopicForNEWSFEEDS\",\"States\":{\"PublishTopicForNEWSFEEDS\":{\"Type\":\"Parallel\",\"Comment\":\"Parallely process topic inferences for NEWSFEEDS\",\"End\":true,\"InputPath\":\"$\",\"OutputPath\":\"$\",\"Branches\":[{\"StartAt\":\"Publish Topic Terms for NEWSFEEDS\",\"States\":{\"Publish Topic Terms for NEWSFEEDS\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"NEWSFEEDSPublishTopicTermsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineNEWSFEEDSPublishTopicTermsLambdaFunction22089D91",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"NEWSFEEDSPublishTopicTermsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}},{\"StartAt\":\"Publish Topics for NEWSFEEDS\",\"States\":{\"Publish Topics for NEWSFEEDS\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"NEWSFEEDSPublishTopicsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineNEWSFEEDSPublishTopicsLambdaFunctionDF83DFCF",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"NEWSFEEDSPublishTopicsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}}]}}},{\"StartAt\":\"PublishTopicForYOUTUBECOMMENTS\",\"States\":{\"PublishTopicForYOUTUBECOMMENTS\":{\"Type\":\"Parallel\",\"Comment\":\"Parallely process topic inferences for YOUTUBECOMMENTS\",\"End\":true,\"InputPath\":\"$\",\"OutputPath\":\"$\",\"Branches\":[{\"StartAt\":\"Publish Topic Terms for YOUTUBECOMMENTS\",\"States\":{\"Publish Topic Terms for YOUTUBECOMMENTS\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"YOUTUBECOMMENTSPublishTopicTermsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineYOUTUBECOMMENTSPublishTopicTermsLambdaFunction0A246C25",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"YOUTUBECOMMENTSPublishTopicTermsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}},{\"StartAt\":\"Publish Topics for YOUTUBECOMMENTS\",\"States\":{\"Publish Topics for YOUTUBECOMMENTS\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"YOUTUBECOMMENTSPublishTopicsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineYOUTUBECOMMENTSPublishTopicsLambdaFunctionDA892EDF",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"YOUTUBECOMMENTSPublishTopicsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}}]}}},{\"StartAt\":\"PublishTopicForCUSTOMINGESTION\",\"States\":{\"PublishTopicForCUSTOMINGESTION\":{\"Type\":\"Parallel\",\"Comment\":\"Parallely process topic inferences for CUSTOMINGESTION\",\"End\":true,\"InputPath\":\"$\",\"OutputPath\":\"$\",\"Branches\":[{\"StartAt\":\"Publish Topic Terms for CUSTOMINGESTION\",\"States\":{\"Publish Topic Terms for CUSTOMINGESTION\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"CUSTOMINGESTIONPublishTopicTermsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineCUSTOMINGESTIONPublishTopicTermsLambdaFunctionC9E71C20",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"CUSTOMINGESTIONPublishTopicTermsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}},{\"StartAt\":\"Publish Topics for CUSTOMINGESTION\",\"States\":{\"Publish Topics for CUSTOMINGESTION\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"CUSTOMINGESTIONPublishTopicsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineCUSTOMINGESTIONPublishTopicsLambdaFunction86C53D94",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"CUSTOMINGESTIONPublishTopicsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}}]}}},{\"StartAt\":\"PublishTopicForREDDIT\",\"States\":{\"PublishTopicForREDDIT\":{\"Type\":\"Parallel\",\"Comment\":\"Parallely process topic inferences for REDDIT\",\"End\":true,\"InputPath\":\"$\",\"OutputPath\":\"$\",\"Branches\":[{\"StartAt\":\"Publish Topic Terms for REDDIT\",\"States\":{\"Publish Topic Terms for REDDIT\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"REDDITPublishTopicTermsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineREDDITPublishTopicTermsLambdaFunction4A33B9EF",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"REDDITPublishTopicTermsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}},{\"StartAt\":\"Publish Topics for REDDIT\",\"States\":{\"Publish Topics for REDDIT\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"REDDITPublishTopicsTaskFailed\"}],\"Type\":\"Task\",\"HeartbeatSeconds\":900,\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "TopicWFEngineREDDITPublishTopicsLambdaFunction5B9C4247",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}},\"REDDITPublishTopicsTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}}]}}}]},\"CheckStatusTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"},\"NoData\":{\"Type\":\"Fail\"},\"SubmitFailed\":{\"Type\":\"Fail\"},\"SubmitTopicTaskFailed\":{\"Type\":\"Fail\",\"Cause\":\"$.cause\"}}}"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "TopicWFEngineTopicModelWFWorkflowEngineRole4E2AF997",
            "Arn"
          ]
        },
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "TopicWFEngineTopicModelWFStateMachineRole31C99C72",
        "TopicWFEngineTopicModelWFWorkflowEngineRoleDefaultPolicy456593B5",
        "TopicWFEngineTopicModelWFWorkflowEngineRole4E2AF997"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicModelWF/WorkflowEngine/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Information required for troubleshooting is logged by state function and lambda functions",
              "id": "AwsSolutions-SF1"
            }
          ]
        }
      }
    },
    "TopicWFEngineTopicModelWFWorkflowEngineEventsRoleB3A52E0A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "TopicWFEngineTopicModelWFStateMachineRole31C99C72"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicModelWF/WorkflowEngine/EventsRole/Resource"
      }
    },
    "TopicWFEngineTopicModelWFWorkflowEngineEventsRoleDefaultPolicy36C82562": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TopicWFEngineTopicModelWFWorkflowEngine17228E3F"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TopicWFEngineTopicModelWFWorkflowEngineEventsRoleDefaultPolicy36C82562",
        "Roles": [
          {
            "Ref": "TopicWFEngineTopicModelWFWorkflowEngineEventsRoleB3A52E0A"
          }
        ]
      },
      "DependsOn": [
        "TopicWFEngineTopicModelWFStateMachineRole31C99C72"
      ],
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/TopicWFEngine/TopicModelWF/WorkflowEngine/EventsRole/DefaultPolicy/Resource"
      }
    },
    "CustomConfigPythonLibLayerBAAC3D1D": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "python3.8",
          "python3.9"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/asset1f4ef09ad0305582df0133734af705c139f0a9cc7492a7bf0a1c7395d0557532.zip"
        },
        "Description": "This layer has boto config initialization and logging functions"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/CustomConfig/PythonLibLayer/Resource",
        "aws:asset:path": "asset.1f4ef09ad0305582df0133734af705c139f0a9cc7492a7bf0a1c7395d0557532",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "CustomConfig573191C7": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs18.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "discovering-hot-topics-using-machine-learning/v2.2.1/assetb629ae86b1b9e92e6566f92a03de4c609f691f4ebb60aa141961e8c0f90d1ab0.zip"
        },
        "Description": "This layer configures AWS Node SDK initialization"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/CustomConfig/CustomConfig/Resource",
        "aws:asset:path": "asset.b629ae86b1b9e92e6566f92a03de4c609f691f4ebb60aa141961e8c0f90d1ab0",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "AppRegistryRegistrySetup9C75F927": {
      "Type": "AWS::ServiceCatalogAppRegistry::Application",
      "Properties": {
        "Description": "Service Catalog application to track and manage all your resources for the solution discovering-hot-topics-using-machine-learning",
        "Name": {
          "Fn::Join": [
            "-",
            [
              "App",
              {
                "Ref": "AWS::StackName"
              },
              "discovering-hot-topics-using-machine-learning"
            ]
          ]
        },
        "Tags": {
          "Solutions:ApplicationType": "AWS-Solutions",
          "Solutions:SolutionID": "SO0122",
          "Solutions:SolutionName": "discovering-hot-topics-using-machine-learning",
          "Solutions:SolutionVersion": "v2.2.1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistry/RegistrySetup/Resource"
      }
    },
    "AppRegistryAppAttributesF8874F2D": {
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroup",
      "Properties": {
        "Attributes": {
          "applicationType": "AWS-Solutions",
          "version": "v2.2.1",
          "solutionID": "SO0122",
          "solutionName": "discovering-hot-topics-using-machine-learning"
        },
        "Description": "Attributes for Solutions Metadata",
        "Name": {
          "Fn::Join": [
            "",
            [
              "AttrGrp-",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistry/AppAttributes/Resource"
      }
    },
    "AppRegistryAppAttributesApplicationAttributeGroupAssociation6a1539ed5bdc69987D3D": {
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "AttributeGroup": {
          "Fn::GetAtt": [
            "AppRegistryAppAttributesF8874F2D",
            "Id"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistry/AppAttributes/ApplicationAttributeGroupAssociation6a1539ed5bdc"
      }
    },
    "AppRegistryResourceAssociationcc06d03324874db1a6662e1611406807903F5030": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359"
        },
        "ResourceType": "CFN_STACK"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistry/ResourceAssociationcc06d033-2487-4db1-a666-2e1611406807"
      },
      "Condition": "DeployQuickSight"
    },
    "AppRegistryResourceAssociationd4f559e6fc5240f3bc3592f30e56951f0AE36CD8": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "IngestionNewsCatcherNestedStackNewsCatcherNestedStackResourceD666324A"
        },
        "ResourceType": "CFN_STACK"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistry/ResourceAssociationd4f559e6-fc52-40f3-bc35-92f30e56951f"
      },
      "Condition": "IngestionDeployRSSFeeds0E648DA1"
    },
    "AppRegistryResourceAssociation8e08b310e72540d5946fc04ccdda0abc66C36D1C": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "IngestionYouTubeCommentsIngestionNestedStackYouTubeCommentsIngestionNestedStackResourceD9D9E2B1"
        },
        "ResourceType": "CFN_STACK"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistry/ResourceAssociation8e08b310-e725-40d5-946f-c04ccdda0abc"
      },
      "Condition": "IngestionDeployYouTubeCommentsA44A0A50"
    },
    "AppRegistryResourceAssociationa01d8973655b4b9db7b61a97d80e97a4A72685A3": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "IngestionS3CustomIngestionNestedStackS3CustomIngestionNestedStackResource0099DFB8"
        },
        "ResourceType": "CFN_STACK"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistry/ResourceAssociationa01d8973-655b-4b9d-b7b6-1a97d80e97a4"
      },
      "Condition": "IngestionDeployCustomIngestion93AB274A"
    },
    "AppRegistryResourceAssociationc4eb0c6a4488492999f9a7a6c8818dbcEC354414": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "IngestionRedditIngestionNestedStackRedditIngestionNestedStackResource5ABCB860"
        },
        "ResourceType": "CFN_STACK"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistry/ResourceAssociationc4eb0c6a-4488-4929-99f9-a7a6c8818dbc"
      },
      "Condition": "IngestionDeployRedditIngestionB0819499"
    },
    "AppRegistryAssociation": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "AWS::StackId"
        },
        "ResourceType": "CFN_STACK"
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/AppRegistryAssociation"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VUW0/bMBT+Lbw7hsEetreVjk7TQOsatD0i1zlNTZ04+NhFVZT/vuNLQoo2qe253z/3mvefb3h/dSFesZDVodBqy/vSCXlgy127FlY04MAGYeM1BPoguk61dWCXpq2UU6ZlFP/UK9HwfmOSW6Rro5U8xVSRG5gWzbYSvF/5VsZIss35NdhGIQbp7gitK423EmY1/629Fyewv8HGwLkwMLx5EojgkC8CIZn3t14ewN0KBJbYkCNzibx1PpcHVmsPvCd1CdJb5U60g52qvRXjBF+FE9uQOfNL+mpT37XSnrrgVIJz1DYGh0ex1UBbMTXy/t7U36zxXRxo5IkpnQXRZG0SBnZQLaDCnbKwNwg8VAOtjmBP2R/Cpiht3Nitx2l7gR+vGSjt6IX8fnnwUZeY+Pu2hpk4FQ9QGVsb+5La+OpVOLnn/UILG42RoTIOul0+dgwWjo4o95RtZUXdUG9sJZRmAXhag2bLvVGScEQXZKWXEqBi87BUeSb/Ecq9K/TkBB5CuRcsoa0eAFHUQCgJSPzeHs0hbADskSrJdCwCloVaobOneOxF19Hg04kXzlm19Q6mc51rCGhGqsl9AxjxOlMPAxu1LMKShqgjlj0600y2WXQeNb3Mn951nga9KoTu9oJfXXzJT/gy0D7ANJsmPKanV3QntzdtNq6jcPZ6/ruJHNLPl3E+90Bjfbwem0GjfTxAIenHWS8dpu7eYbegJ/kjqVZZ9WjKmxFlGJGFRf7ryJ4Jb/ho0h0DhEcPOvSkzkP3VCJpYuZzIE6GuTbM0poK+DNeHj984vS5vnhGpQrrW6ca4JtE/wLnEPh6RAUAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "discovering-hot-topics-using-machine-learning/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "IngestionS3BucketToUploadData5A8509A2": {
      "Description": "Bucket location to upload source files for ingestion",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://s3.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Fn::GetAtt": [
                "IngestionS3CustomIngestionNestedStackS3CustomIngestionNestedStackResource0099DFB8",
                "Outputs.discoveringhottopicsusingmachinelearningIngestionS3CustomIngestionS3BucketFD8CA159Ref"
              ]
            }
          ]
        ]
      },
      "Condition": "IngestionDeployCustomIngestion93AB274A"
    },
    "QSAnalysisURL": {
      "Description": "Amazon QuickSight URL for analysis",
      "Value": {
        "Fn::GetAtt": [
          "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359",
          "Outputs.discoveringhottopicsusingmachinelearningQSDashboardQuicksightQuickSightResources06DCADD4analysisurl"
        ]
      },
      "Condition": "DeployQuickSight"
    },
    "QSDashboardURL": {
      "Description": "Amazon QuickSight URL for dashboard",
      "Value": {
        "Fn::GetAtt": [
          "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359",
          "Outputs.discoveringhottopicsusingmachinelearningQSDashboardQuicksightQuickSightResources06DCADD4dashboardurl"
        ]
      },
      "Condition": "DeployQuickSight"
    }
  },
  "Mappings": {
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com"
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com"
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com"
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com"
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com"
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com"
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com"
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com"
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com"
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com"
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com"
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com"
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com"
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com"
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com"
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com"
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com"
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com"
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com"
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com"
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com"
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com"
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com"
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com"
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com"
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com"
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com"
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com"
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com"
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com"
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com"
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com"
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com"
      }
    }
  }
}