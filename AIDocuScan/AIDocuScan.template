{
  "Description": "(SO0281) - enhanced-document-understanding-on-aws. Version v1.0.1",
  "Mappings": {
    "Solution": {
      "Data": {
        "SendAnonymousUsageData": "Yes",
        "ID": "SO0281",
        "Version": "v1.0.1",
        "SolutionName": "enhanced-document-understanding-on-aws",
        "AppNamespace": "app.idp"
      }
    },
    "FeaturesToDeploy": {
      "Deploy": {
        "TextractWorkflow": "Yes",
        "ComprehendWorkflow": "Yes",
        "RedactionWorkflow": "Yes",
        "CustomDashboard": "Yes",
        "WebApp": "Yes",
        "SampleDocuments": "Yes"
      }
    },
    "SourceCode": {
      "General": {
        "S3Bucket": "solutions",
        "KeyPrefix": "enhanced-document-understanding-on-aws/v1.0.1"
      }
    }
  },
  "Parameters": {
    "DefaultUserEmail": {
      "Type": "String",
      "Default": "placeholder@example.com",
      "AllowedPattern": "^$|[A-Za-z0-9_!#$%&'*+/=?`{|}~^.-]+@[A-Za-z0-9.-]+$",
      "ConstraintDescription": "Please provide a valid email, or leave blank",
      "Description": "Optional email to create a Cognito user with access to the application, and to receive document processing notifications from the application."
    },
    "WorkflowConfigName": {
      "Type": "String",
      "Default": "default",
      "AllowedValues": [
        "default",
        "multi-doc-textract-entity-medical-pii",
        "multi-doc-textract-entity-pii",
        "multi-doc-textract-entity",
        "multi-doc-textract-with-feature-type",
        "single-doc-entity-detection",
        "single-doc-entity-detection",
        "single-doc-textract-entity-pii",
        "single-doc-textract-entity-medical",
        "single-doc-textract-entity-pii",
        "single-doc-textract-entity",
        "single-doc-textract"
      ],
      "ConstraintDescription": "Please provide a valid workflow config name",
      "Description": "Name of the configuration that will define the workflow execution sequence and required documents"
    },
    "DeployKendraIndex": {
      "Type": "String",
      "Default": "No",
      "AllowedPattern": "^(Yes|No)$",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "ConstraintDescription": "Please select either Yes or No",
      "Description": "Please select if you would like to deploy Amazon Kendra Index. For more details, refer to the implementation guide for this solution"
    }
  },
  "Resources": {
    "SetupAccessLog0E7EB646": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
              "id": "AwsSolutions-S1"
            }
          ]
        }
      }
    },
    "SetupAccessLogPolicyBE6D2A3D": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "SetupAccessLog0E7EB646"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SetupAccessLog0E7EB646",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SetupAccessLog0E7EB646",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "SetupAppConfig016B0097",
                      "Arn"
                    ]
                  }
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "SetupAccessLog0E7EB646",
                        "Arn"
                      ]
                    },
                    "/AppConfig/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "RequestProcessorDocumentRepo94D336AB",
                      "Arn"
                    ]
                  }
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "SetupAccessLog0E7EB646",
                        "Arn"
                      ]
                    },
                    "/DocumentRepo/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "RequestProcessorInferences13166F85",
                      "Arn"
                    ]
                  }
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "SetupAccessLog0E7EB646",
                        "Arn"
                      ]
                    },
                    "/Inferences/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "SetupEventOrchestrator22A3F9D1": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "DocUnderstandingSetupEventOrchestrator41D2661D"
      }
    },
    "SetupAppConfig016B0097": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "SetupAccessLog0E7EB646"
          },
          "LogFilePrefix": "AppConfig/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "SetupAppConfigPolicy8E2A9282": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "SetupAppConfig016B0097"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SetupAppConfig016B0097",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SetupAppConfig016B0097",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "SetupInfraSetupCustomResourceFF2EF002": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/assetd096abc35736afa4c20d220e3ca2a4e3da78fd23ab62c81b9bc09c0e4a898922.zip"
        },
        "Description": "A custom resource lambda function to perform operations based on operation type",
        "Environment": {
          "Variables": {
            "POWERTOOLS_SERVICE_NAME": "CUSTOM-RESOURCE",
            "LOG_LEVEL": "DEBUG",
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0281/v1.0.1\" }"
          }
        },
        "Handler": "lambda_func.handler",
        "Layers": [
          {
            "Ref": "AspectInjectPythonUserAgentLayer16FECA5F"
          },
          {
            "Ref": "AspectInjectBoto3Layer6A9F1C7C"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "SetupCustomResourceLambdaRole8C9673A0",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::If": [
            "isGovCloudPartition",
            "python3.9",
            "python3.11"
          ]
        },
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "SetupCustomResourceLambdaRoleDefaultPolicyE502CB39",
        "SetupCustomResourceLambdaRole8C9673A0"
      ],
      "Metadata": {
        "aws:asset:path": "asset.d096abc35736afa4c20d220e3ca2a4e3da78fd23ab62c81b9bc09c0e4a898922",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The lambda is configured is to use Python 3.11, which is the highest lambda runtime version available",
              "id": "AwsSolutions-L1"
            },
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "SetupInfraSetupScheduledAnonymousMetricsA3F452DB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/assetd096abc35736afa4c20d220e3ca2a4e3da78fd23ab62c81b9bc09c0e4a898922.zip"
        },
        "Description": "A lambda function that runs as per defined schedule to publish metrics",
        "Environment": {
          "Variables": {
            "POWERTOOLS_SERVICE_NAME": "ANONYMOUS-CW-METRICS",
            "LOG_LEVEL": "DEBUG",
            "SOLUTION_ID": "SO0281",
            "SOLUTION_VERSION": "v1.0.1",
            "REST_API_NAME": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-RestAPI"
                ]
              ]
            },
            "USER_POOL_ID": {
              "Ref": "RequestProcessorApiExtUsrPoolD660310E"
            },
            "KENDRA_INDEX_ID": {
              "Fn::If": [
                "IndexedStorageDeployKendraIndexConditionB9696BD9",
                {
                  "Fn::GetAtt": [
                    "IndexedStorageKendraCaseSearchNestedStackKendraCaseSearchNestedStackResource82985B33",
                    "Outputs.DocUnderstandingIndexedStorageKendraCaseSearch9BB8DDA1Id"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "UUID": {
              "Fn::GetAtt": [
                "SetupGenUUID96034244",
                "UUID"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AwsSolution/SO0281/v1.0.1\" }"
          }
        },
        "Handler": "lambda_ops_metrics.handler",
        "Layers": [
          {
            "Ref": "AspectInjectPythonUserAgentLayer16FECA5F"
          },
          {
            "Ref": "AspectInjectBoto3Layer6A9F1C7C"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "SetupScheduledMetricsLambdaRole03AD1333",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::If": [
            "isGovCloudPartition",
            "python3.9",
            "python3.11"
          ]
        },
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "SetupScheduledMetricsLambdaRoleDefaultPolicyD13B4CDF",
        "SetupScheduledMetricsLambdaRole03AD1333"
      ],
      "Metadata": {
        "aws:asset:path": "asset.d096abc35736afa4c20d220e3ca2a4e3da78fd23ab62c81b9bc09c0e4a898922",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The lambda is configured is to use Python 3.11, which is the highest lambda runtime version available",
              "id": "AwsSolutions-L1"
            },
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      },
      "Condition": "AnonymousDataAWSCondition"
    },
    "SetupInfraSetupMetricsPublishFrequency3841744E": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SetupInfraSetupScheduledAnonymousMetricsA3F452DB",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Condition": "AnonymousDataAWSCondition"
    },
    "SetupInfraSetupMetricsPublishFrequencyAllowEventRuleDocUnderstandingSetupInfraSetupScheduledAnonymousMetricsEC0D94D541B987F9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SetupInfraSetupScheduledAnonymousMetricsA3F452DB",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SetupInfraSetupMetricsPublishFrequency3841744E",
            "Arn"
          ]
        }
      },
      "Condition": "AnonymousDataAWSCondition"
    },
    "SetupCustomResourceLambdaRole8C9673A0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*:log-stream:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda function has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            },
            {
              "reason": "Lambda function has the required permission to write CloudWatch Log streams. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*:log-stream:*"
              ]
            }
          ]
        }
      }
    },
    "SetupCustomResourceLambdaRoleDefaultPolicyE502CB39": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:UpdateItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SetupWorkflowConfigC35D6A7C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:Abort*",
                "s3:DeleteObject*",
                "s3:GetBucket*",
                "s3:GetObject*",
                "s3:List*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SetupAppConfig016B0097",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SetupAppConfig016B0097",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SetupCustomResourceLambdaRoleDefaultPolicyE502CB39",
        "Roles": [
          {
            "Ref": "SetupCustomResourceLambdaRole8C9673A0"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda role policy is configured to read data from S3 bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:Abort*",
                "Action::s3:DeleteObject*",
                "Resource::<SetupAppConfig016B0097.Arn>/*"
              ]
            },
            {
              "reason": "Lambda function has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            },
            {
              "reason": "Custom resource lambda is configured to read and write from App Config bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            }
          ]
        }
      }
    },
    "SetupScheduledMetricsLambdaRole03AD1333": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "cloudwatch:GetMetricData",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:*:log-stream:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda function has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            },
            {
              "reason": "Lambda function has the required permission to write CloudWatch Log Streams. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:*:log-stream:*"
              ]
            },
            {
              "reason": "This policy allows get metric data from CloudWatch and has been specified per the AWS documentation.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      }
    },
    "SetupScheduledMetricsLambdaRoleDefaultPolicyD13B4CDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SetupScheduledMetricsLambdaRoleDefaultPolicyD13B4CDF",
        "Roles": [
          {
            "Ref": "SetupScheduledMetricsLambdaRole03AD1333"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda function has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      }
    },
    "SetupWorkflowConfigC35D6A7C": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "Name",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "Name",
            "KeyType": "HASH"
          }
        ],
        "SSESpecification": {
          "SSEEnabled": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Point-in-time recovery is recommended, but AWS Solutions do not enforce it. Hence suppressed",
              "id": "AwsSolutions-DDB3"
            }
          ]
        }
      }
    },
    "SetupWorkflowAssetReadCC581B4A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::",
                    {
                      "Fn::Join": [
                        "-",
                        [
                          {
                            "Fn::FindInMap": [
                              "SourceCode",
                              "General",
                              "S3Bucket"
                            ]
                          },
                          {
                            "Ref": "AWS::Region"
                          }
                        ]
                      ]
                    },
                    "/",
                    {
                      "Fn::FindInMap": [
                        "SourceCode",
                        "General",
                        "KeyPrefix"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SetupWorkflowAssetReadCC581B4A",
        "Roles": [
          {
            "Ref": "SetupCustomResourceLambdaRole8C9673A0"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The policy is narrowing down the resource path by explicitly before putting a wildchar",
              "id": "AwsSolutions-IAM5"
            }
          ]
        }
      }
    },
    "SetupWorkflowCopyWorkflowConfig856FD4FF": {
      "Type": "Custom::CopyWorkflowConfig",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SetupInfraSetupCustomResourceFF2EF002",
            "Arn"
          ]
        },
        "Resource": "COPY_WORKFLOW_CONFIG",
        "DDB_TABLE_NAME": {
          "Ref": "SetupWorkflowConfigC35D6A7C"
        },
        "SOURCE_BUCKET_NAME": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::FindInMap": [
                  "SourceCode",
                  "General",
                  "S3Bucket"
                ]
              },
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "SOURCE_PREFIX": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::FindInMap": [
                  "SourceCode",
                  "General",
                  "KeyPrefix"
                ]
              },
              "/asset2f7b4b3732f484034e96e40ff29ee56648815047b48d691ff2a4fa09d1858a04.zip"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "SetupGenUUID96034244": {
      "Type": "Custom::GenUUID",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SetupInfraSetupCustomResourceFF2EF002",
            "Arn"
          ]
        },
        "Resource": "GEN_UUID"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "SetupSolutionHelperAnonymousDataAA8126B8": {
      "Type": "Custom::AnonymousData",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SetupInfraSetupCustomResourceFF2EF002",
            "Arn"
          ]
        },
        "Resource": "ANONYMOUS_METRIC",
        "SolutionId": "SO0281",
        "Version": "v1.0.1",
        "DeployKendraIndex": {
          "Ref": "DeployKendraIndex"
        },
        "WorkflowConfigName": {
          "Ref": "WorkflowConfigName"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "AnonymousDataAWS"
    },
    "SetupOpsCustomDashboardA6C0EF33": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"start\":\"start\",\"end\":\"end\",\"periodOverride\":\"auto\",\"widgets\":[{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"REST Endpoint Stats\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ApiGateway\",\"Count\",\"ApiName\",\"",
              {
                "Ref": "AWS::StackName"
              },
              "-RestAPI\",{\"label\":\"Count\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"AWS/ApiGateway\",\"Latency\",\"ApiName\",\"",
              {
                "Ref": "AWS::StackName"
              },
              "-RestAPI\",{\"label\":\"Average\",\"period\":3600}],[\"AWS/ApiGateway\",\"Latency\",\"ApiName\",\"",
              {
                "Ref": "AWS::StackName"
              },
              "-RestAPI\",{\"label\":\"Max\",\"period\":3600,\"stat\":\"Maximum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Cognito Sign-in\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Cognito\",\"SignInSuccesses\",\"UserPool\",\"",
              {
                "Ref": "RequestProcessorApiExtUsrPoolD660310E"
              },
              "\",{\"label\":\"Count\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"AWS/Cognito\",\"SignInSuccesses\",\"UserPool\",\"",
              {
                "Ref": "RequestProcessorApiExtUsrPoolD660310E"
              },
              "\",{\"label\":\"Average\",\"period\":3600}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Case Processing Status\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Case\",\"CaseProcessedStatus\",\"CaseStatus\",\"initiate\",{\"color\":\"#1f77b4\",\"label\":\"initiate\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Case\",\"CaseProcessedStatus\",\"CaseStatus\",\"in-process\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#9467bd\",\"label\":\"in-process\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Case\",\"CaseProcessedStatus\",\"CaseStatus\",\"success\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#2ca02c\",\"label\":\"success\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Case\",\"CaseProcessedStatus\",\"CaseStatus\",\"failure\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#d62728\",\"label\":\"failure\",\"period\":3600,\"stat\":\"SampleCount\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Document Upload Count\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Documents\",\"DocumentCount\",\"Documents\",\"Upload\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#9467bd\",\"label\":\"Document Upload Count\",\"period\":3600,\"stat\":\"SampleCount\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"File Types Uploaded\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"FileTypes\",\"FileExtensionTypes\",\"FileTypesUploaded\",\"pdf\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#ff7f0e\",\"label\":\"pdf\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"FileTypes\",\"FileExtensionTypes\",\"FileTypesUploaded\",\"jpeg/jpg\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#9467bd\",\"label\":\"jpeg/jpg\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"FileTypes\",\"FileExtensionTypes\",\"FileTypesUploaded\",\"png\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#1f77b4\",\"label\":\"png\",\"period\":3600,\"stat\":\"SampleCount\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Textract Workflows Processed\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Workflows\",\"TextractWorkflow\",\"TextractAPI\",\"Textract-AnalyzeDocumentSync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#e377c2\",\"label\":\"Textract-AnalyzeDocumentSync\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Workflows\",\"TextractWorkflow\",\"TextractAPI\",\"Textract-AnalyzeExpenseSync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#ff7f0e\",\"label\":\"Textract-AnalyzeExpenseSync\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Workflows\",\"TextractWorkflow\",\"TextractAPI\",\"Textract-AnalyzeIDSync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#1f77b4\",\"label\":\"Textract-AnalyzeIDSync\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Workflows\",\"TextractWorkflow\",\"TextractAPI\",\"Textract-DetectTextSync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#9467bd\",\"label\":\"Textract-DetectTextSync\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Workflows\",\"TextractWorkflow\",\"TextractAPI\",\"Textract-FailuresSync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#d62728\",\"label\":\"Textract-FailuresSync\",\"period\":3600,\"stat\":\"SampleCount\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Redaction Workflows Processed\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Workflows\",\"RedactionWorkflow\",\"RedactionAPI\",\"RedactDocument\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#7f7f7f\",\"label\":\"RedactDocument\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Workflows\",\"RedactionWorkflow\",\"RedactionAPI\",\"Redaction-Failures\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#d62728\",\"label\":\"Redaction-Failures\",\"period\":3600,\"stat\":\"SampleCount\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Comprehend Workflows Processed\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Workflows\",\"ComprehendWorkflow\",\"ComprehendAPI\",\"Comprehend-DetectEntitiesSync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#1f77b4\",\"label\":\"Comprehend-DetectEntitiesSync\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Workflows\",\"ComprehendWorkflow\",\"ComprehendAPI\",\"Comprehend-FailuresSync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#d62728\",\"label\":\"Comprehend-FailuresSync\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Workflows\",\"ComprehendWorkflow\",\"ComprehendAPI\",\"Comprehend-DetectPIISync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#9467bd\",\"label\":\"Comprehend-DetectPIISync\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Workflows\",\"ComprehendWorkflow\",\"ComprehendAPI\",\"Comprehend-DetectMedicalEntitiesSync\",\"service\",\"eDUS-",
              {
                "Fn::GetAtt": [
                  "SetupGenUUID96034244",
                  "UUID"
                ]
              },
              "\",{\"color\":\"#8c564b\",\"label\":\"Comprehend-DetectMedicalEntitiesSync\",\"period\":3600,\"stat\":\"SampleCount\"}]],\"yAxis\":{}}}]}"
            ]
          ]
        },
        "DashboardName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              "-Dashboard"
            ]
          ]
        }
      },
      "DeletionPolicy": "Delete",
      "Condition": "DeployCustomDashboard"
    },
    "SetupWriteToSSMDAFB0B23": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:DeleteParameter",
                "ssm:GetParameter",
                "ssm:PutParameter"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/",
                    {
                      "Ref": "AWS::StackName"
                    },
                    "/app.idp/webconfig"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SetupWriteToSSMDAFB0B23",
        "Roles": [
          {
            "Ref": "SetupCustomResourceLambdaRole8C9673A0"
          }
        ]
      }
    },
    "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionServiceRoleC9375DA3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            }
          ]
        }
      }
    },
    "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionServiceRoleDefaultPolicy0115FFBB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:GetObject*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SetupAppConfig016B0097",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SetupAppConfig016B0097",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "NotificationManagerLambdaToSNSSnsTopicB66C17E4"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionServiceRoleDefaultPolicy0115FFBB",
        "Roles": [
          {
            "Ref": "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionServiceRoleC9375DA3"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda role policy is configured to read data from S3 bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*",
                "Resource::<SetupAppConfig016B0097.Arn>/*",
                "Resource::*"
              ]
            }
          ]
        }
      }
    },
    "NotificationManagerEventRuleToCompleteNotificationLambdaFunction2D321D47": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/assetb23edd23113f3eca6358f156fea6fd610cf40d21947ce7e8bbacad6b74e72bbc.zip"
        },
        "Description": "This lambda function sends out SNS notification based on the input event received",
        "Environment": {
          "Variables": {
            "TEMPLATES_BUCKET_NAME": {
              "Ref": "SetupAppConfig016B0097"
            },
            "TEMPLATE_PREFIX": "email-templates/",
            "SNS_TOPIC_ARN": {
              "Ref": "NotificationManagerLambdaToSNSSnsTopicB66C17E4"
            },
            "SNS_TOPIC_NAME": {
              "Fn::GetAtt": [
                "NotificationManagerLambdaToSNSSnsTopicB66C17E4",
                "TopicName"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0281/v1.0.1\" }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionServiceRoleC9375DA3",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionServiceRoleDefaultPolicy0115FFBB",
        "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionServiceRoleC9375DA3"
      ],
      "Metadata": {
        "aws:asset:path": "asset.b23edd23113f3eca6358f156fea6fd610cf40d21947ce7e8bbacad6b74e72bbc",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionAwsEventsLambdaInvokePermission103D4F50D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "NotificationManagerEventRuleToCompleteNotificationLambdaFunction2D321D47",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "NotificationManagerEventRuleToCompleteNotificationEventsRuleCC6480CB",
            "Arn"
          ]
        }
      }
    },
    "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionAwsEventsLambdaInvokePermission2E5B0E3B6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "NotificationManagerEventRuleToCompleteNotificationLambdaFunction2D321D47",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "NotificationManagerEventRuleToFailureNotificationEventsRuleA83961DF",
            "Arn"
          ]
        }
      }
    },
    "NotificationManagerEventRuleToCompleteNotificationEventsRuleCC6480CB": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "SetupEventOrchestrator22A3F9D1"
        },
        "EventPattern": {
          "account": [
            {
              "Ref": "AWS::AccountId"
            }
          ],
          "region": [
            {
              "Ref": "AWS::Region"
            }
          ],
          "source": [
            {
              "Fn::Join": [
                "",
                [
                  "workflow-orchestrator.",
                  {
                    "Fn::FindInMap": [
                      "Solution",
                      "Data",
                      "AppNamespace"
                    ]
                  }
                ]
              ]
            }
          ],
          "detail-type": [
            "processing_complete"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "NotificationManagerEventRuleToCompleteNotificationLambdaFunction2D321D47",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "NotificationManagerEventRuleToFailureNotificationEventsRuleA83961DF": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "SetupEventOrchestrator22A3F9D1"
        },
        "EventPattern": {
          "account": [
            {
              "Ref": "AWS::AccountId"
            }
          ],
          "region": [
            {
              "Ref": "AWS::Region"
            }
          ],
          "source": [
            {
              "Fn::Join": [
                "",
                [
                  "workflow-stepfunction.",
                  {
                    "Fn::FindInMap": [
                      "Solution",
                      "Data",
                      "AppNamespace"
                    ]
                  }
                ]
              ]
            }
          ],
          "detail-type": [
            "processing_failure"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "NotificationManagerEventRuleToCompleteNotificationLambdaFunction2D321D47",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "NotificationManagerLambdaToSNSSnsTopicB66C17E4": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "Send notification topic",
        "KmsMasterKeyId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":kms:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":alias/aws/sns"
            ]
          ]
        }
      }
    },
    "NotificationManagerLambdaToSNSSnsTopicPolicy3CE2275C": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "SNS:AddPermission",
                "SNS:DeleteTopic",
                "SNS:GetTopicAttributes",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive",
                "SNS:RemovePermission",
                "SNS:SetTopicAttributes",
                "SNS:Subscribe"
              ],
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Ref": "NotificationManagerLambdaToSNSSnsTopicB66C17E4"
              },
              "Sid": "TopicOwnerOnlyAccess"
            },
            {
              "Action": [
                "SNS:AddPermission",
                "SNS:DeleteTopic",
                "SNS:GetTopicAttributes",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive",
                "SNS:RemovePermission",
                "SNS:SetTopicAttributes",
                "SNS:Subscribe"
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Ref": "NotificationManagerLambdaToSNSSnsTopicB66C17E4"
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        },
        "Topics": [
          {
            "Ref": "NotificationManagerLambdaToSNSSnsTopicB66C17E4"
          }
        ]
      }
    },
    "NotificationManagerLambdaToSNSSnsTopicTokenSubscription16435ED74": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Ref": "DefaultUserEmail"
        },
        "Protocol": "email",
        "TopicArn": {
          "Ref": "NotificationManagerLambdaToSNSSnsTopicB66C17E4"
        }
      }
    },
    "NotificationManagerAssetRead80821EA9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::",
                    {
                      "Fn::Join": [
                        "-",
                        [
                          {
                            "Fn::FindInMap": [
                              "SourceCode",
                              "General",
                              "S3Bucket"
                            ]
                          },
                          {
                            "Ref": "AWS::Region"
                          }
                        ]
                      ]
                    },
                    "/",
                    {
                      "Fn::FindInMap": [
                        "SourceCode",
                        "General",
                        "KeyPrefix"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "NotificationManagerAssetRead80821EA9",
        "Roles": [
          {
            "Ref": "SetupCustomResourceLambdaRole8C9673A0"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The policy is narrowing down the resource path by explicitly before putting a wildchar",
              "id": "AwsSolutions-IAM5"
            }
          ]
        }
      }
    },
    "NotificationManagerCopyTemplates2EA804DF": {
      "Type": "Custom::CopyTemplates",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SetupInfraSetupCustomResourceFF2EF002",
            "Arn"
          ]
        },
        "SOURCE_BUCKET_NAME": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::FindInMap": [
                  "SourceCode",
                  "General",
                  "S3Bucket"
                ]
              },
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "SOURCE_PREFIX": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::FindInMap": [
                  "SourceCode",
                  "General",
                  "KeyPrefix"
                ]
              },
              "/assete5d6927fd91760cb186487ba11969dd810465610ed8fdd9062a1977aedc77f80.zip"
            ]
          ]
        },
        "Resource": "COPY_TEMPLATE",
        "DESTINATION_BUCKET_NAME": {
          "Ref": "SetupAppConfig016B0097"
        },
        "DESTINATION_PREFIX": "email-templates"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "SampleDocumentsNestedStackSampleDocumentsNestedStackResource181A29D1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "SamplesSourceBucketName": {
            "Ref": "SetupAppConfig016B0097"
          },
          "SamplesCustomResourceLambdaArn": {
            "Fn::GetAtt": [
              "SetupInfraSetupCustomResourceFF2EF002",
              "Arn"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "enhanced-document-understanding-on-aws/v1.0.1/DocUnderstandingSampleDocuments4203F757.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "AppRegistryRegistrySetup9C75F927",
        "NotificationManagerCopyTemplates2EA804DF"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DocUnderstandingSampleDocuments4203F757.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeploySamples"
    },
    "RequestProcessorDocumentRepo94D336AB": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "SetupAccessLog0E7EB646"
          },
          "LogFilePrefix": "DocumentRepo/"
        },
        "NotificationConfiguration": {
          "EventBridgeConfiguration": {
            "EventBridgeEnabled": true
          }
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RequestProcessorDocumentRepoPolicyC0532154": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "RequestProcessorDocumentRepo94D336AB"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorDocumentRepo94D336AB",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorDocumentRepo94D336AB",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:Get*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "textract.amazonaws.com"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorDocumentRepo94D336AB",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorDocumentRepo94D336AB",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "RequestProcessorInferences13166F85": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "SetupAccessLog0E7EB646"
          },
          "LogFilePrefix": "Inferences/"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RequestProcessorInferencesPolicy775ED651": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "RequestProcessorInferences13166F85"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorInferences13166F85",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorInferences13166F85",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionServiceRole7E925F87": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The lambda requires access to the dynamoDB table, which has a GSI, hence CDK generates a /index/* resource",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC.Arn>/index/*"
              ]
            },
            {
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            },
            {
              "reason": "The wildcard \"*\" is to allow all the Abort actions for this bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:Abort*"
              ]
            },
            {
              "reason": "Providing a key prefix to further restrict access within the upload bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/initial/*"
              ]
            },
            {
              "reason": "The wildcard \"*\" is to allow lambda to read contents of bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            },
            {
              "reason": "The log-group name is not known at this point. Hence the wildcard",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionServiceRoleDefaultPolicy8A051BDB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:UpdateItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SetupWorkflowConfigC35D6A7C",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:Abort*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "RequestProcessorDocumentRepo94D336AB",
                        "Arn"
                      ]
                    },
                    "/initial/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionServiceRoleDefaultPolicy8A051BDB",
        "Roles": [
          {
            "Ref": "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionServiceRole7E925F87"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The lambda requires access to the dynamoDB table, which has a GSI, hence CDK generates a /index/* resource",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC.Arn>/index/*"
              ]
            },
            {
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            },
            {
              "reason": "The wildcard \"*\" is to allow all the Abort actions for this bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:Abort*"
              ]
            },
            {
              "reason": "Providing a key prefix to further restrict access within the upload bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/initial/*"
              ]
            },
            {
              "reason": "The wildcard \"*\" is to allow lambda to read contents of bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            },
            {
              "reason": "The log-group name is not known at this point. Hence the wildcard",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionE59C19CF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/assete4a0c489a6389e0e744cf19f18cb521a1da7e7a09d4d862aa99f4b13a8f3c52b.zip"
        },
        "Environment": {
          "Variables": {
            "UPLOAD_DOCS_BUCKET_NAME": {
              "Ref": "RequestProcessorDocumentRepo94D336AB"
            },
            "S3_UPLOAD_PREFIX": "initial",
            "UUID": {
              "Fn::GetAtt": [
                "SetupGenUUID96034244",
                "UUID"
              ]
            },
            "WORKFLOW_CONFIG_NAME": {
              "Ref": "WorkflowConfigName"
            },
            "CASE_DDB_TABLE_NAME": {
              "Ref": "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC"
            },
            "WORKFLOW_CONFIG_TABLE_NAME": {
              "Ref": "SetupWorkflowConfigC35D6A7C"
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0281/v1.0.1\" }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionServiceRole7E925F87",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 600,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionServiceRoleDefaultPolicy8A051BDB",
        "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionServiceRole7E925F87"
      ],
      "Metadata": {
        "aws:asset:path": "asset.e4a0c489a6389e0e744cf19f18cb521a1da7e7a09d4d862aa99f4b13a8f3c52b",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "CASE_ID",
            "AttributeType": "S"
          },
          {
            "AttributeName": "DOCUMENT_ID",
            "AttributeType": "S"
          },
          {
            "AttributeName": "USER_ID",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "UserIdIndex",
            "KeySchema": [
              {
                "AttributeName": "USER_ID",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "CASE_ID",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "CASE_ID",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "DOCUMENT_ID",
            "KeyType": "RANGE"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "SSEEnabled": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunctionServiceRole20E21761": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The lambda requires access to the dynamoDB table, which has a GSI, hence CDK generates a /index/* resource",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC.Arn>/index/*"
              ]
            },
            {
              "reason": "The lambda requires access to the bucket containing redacted document, with prefix redacted",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/redacted/*"
              ]
            },
            {
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            },
            {
              "reason": "The log-group name is not known at this point. Hence the wildcard",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunctionServiceRoleDefaultPolicy590C97A5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "RequestProcessorDocumentRepo94D336AB",
                        "Arn"
                      ]
                    },
                    "/redacted/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunctionServiceRoleDefaultPolicy590C97A5",
        "Roles": [
          {
            "Ref": "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunctionServiceRole20E21761"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The lambda requires access to the dynamoDB table, which has a GSI, hence CDK generates a /index/* resource",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC.Arn>/index/*"
              ]
            },
            {
              "reason": "The lambda requires access to the bucket containing redacted document, with prefix redacted",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/redacted/*"
              ]
            },
            {
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            },
            {
              "reason": "The log-group name is not known at this point. Hence the wildcard",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asset56a4d4ba59b12cff21270186dffb5b1123a3771e99c0ce99a4a85e5ccf41e782.zip"
        },
        "Environment": {
          "Variables": {
            "DDB_GSI_USER_ID": "UserIdIndex",
            "S3_REDACTED_PREFIX": "redacted",
            "CASE_DDB_TABLE_NAME": {
              "Ref": "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC"
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0281/v1.0.1\" }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        ],
        "MemorySize": 192,
        "Role": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunctionServiceRole20E21761",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunctionServiceRoleDefaultPolicy590C97A5",
        "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunctionServiceRole20E21761"
      ],
      "Metadata": {
        "aws:asset:path": "asset.56a4d4ba59b12cff21270186dffb5b1123a3771e99c0ce99a4a85e5ccf41e782",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "RequestProcessorGetDocumentUrlLambdaServiceRole8516203A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Providing a key prefix to further restrict access within the bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/initial/*",
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/redacted/*"
              ]
            },
            {
              "reason": "This lambda generates a managed policy to create log groups, log streams and put events.",
              "id": "AwsSolutions-IAM4",
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorGetDocumentUrlLambdaServiceRoleDefaultPolicy7DAB5DFB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorDocumentRepo94D336AB",
                          "Arn"
                        ]
                      },
                      "/initial/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorDocumentRepo94D336AB",
                          "Arn"
                        ]
                      },
                      "/redacted/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RequestProcessorGetDocumentUrlLambdaServiceRoleDefaultPolicy7DAB5DFB",
        "Roles": [
          {
            "Ref": "RequestProcessorGetDocumentUrlLambdaServiceRole8516203A"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Providing a key prefix to further restrict access within the bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/initial/*",
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/redacted/*"
              ]
            },
            {
              "reason": "This lambda is used to generate signed urls for contents in the bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*",
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/initial/*"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorGetDocumentUrlLambdaD731C3BA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asset90cf3bd63f75a8c4919dcfcae57d4146cb96e96f325426725a1131a3d32a00c6.zip"
        },
        "Environment": {
          "Variables": {
            "UPLOAD_DOCS_BUCKET_NAME": {
              "Ref": "RequestProcessorDocumentRepo94D336AB"
            },
            "S3_UPLOAD_PREFIX": "initial",
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0281/v1.0.1\" }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "RequestProcessorGetDocumentUrlLambdaServiceRole8516203A",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "RequestProcessorGetDocumentUrlLambdaServiceRoleDefaultPolicy7DAB5DFB",
        "RequestProcessorGetDocumentUrlLambdaServiceRole8516203A"
      ],
      "Metadata": {
        "aws:asset:path": "asset.90cf3bd63f75a8c4919dcfcae57d4146cb96e96f325426725a1131a3d32a00c6",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "RequestProcessorGetInferencesLambdaServiceRole6E6DCEF8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The lambda requires access to the dynamoDB table, which has a GSI, hence CDK generates a /index/* resource",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC.Arn>/index/*"
              ]
            },
            {
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            },
            {
              "reason": "Providing permission to inferences bucket to read its contents",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorInferences13166F85.Arn>/*",
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            },
            {
              "reason": "This lambda generates a managed policy to create log groups, log streams and put events.",
              "id": "AwsSolutions-IAM4",
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorGetInferencesLambdaServiceRoleDefaultPolicy77F9287C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:GetObject*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorInferences13166F85",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorInferences13166F85",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RequestProcessorGetInferencesLambdaServiceRoleDefaultPolicy77F9287C",
        "Roles": [
          {
            "Ref": "RequestProcessorGetInferencesLambdaServiceRole6E6DCEF8"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The lambda requires access to the dynamoDB table, which has a GSI, hence CDK generates a /index/* resource",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC.Arn>/index/*"
              ]
            },
            {
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            },
            {
              "reason": "Providing permission to inferences bucket to read its contents",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorInferences13166F85.Arn>/*",
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            },
            {
              "reason": "This lambda generates a managed policy to create log groups, log streams and put events.",
              "id": "AwsSolutions-IAM4",
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorGetInferencesLambdaD2BCF9D4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asset8875b6e0bac39c3ea7723608ce97000e061ec079e2c33d42ad16116e2001e59b.zip"
        },
        "Environment": {
          "Variables": {
            "S3_INFERENCE_BUCKET_NAME": {
              "Ref": "RequestProcessorInferences13166F85"
            },
            "CASE_DDB_TABLE_NAME": {
              "Ref": "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC"
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0281/v1.0.1\" }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "RequestProcessorGetInferencesLambdaServiceRole6E6DCEF8",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "RequestProcessorGetInferencesLambdaServiceRoleDefaultPolicy77F9287C",
        "RequestProcessorGetInferencesLambdaServiceRole6E6DCEF8"
      ],
      "Metadata": {
        "aws:asset:path": "asset.8875b6e0bac39c3ea7723608ce97000e061ec079e2c33d42ad16116e2001e59b",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointApiAccessLogGroup713BAB37": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiE0631C93": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "API endpoint to access the Document Understanding Services",
        "EndpointConfiguration": {
          "Types": [
            {
              "Fn::If": [
                "isGovCloudPartition",
                "REGIONAL",
                "EDGE"
              ]
            }
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-RestAPI"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "API endpoint to access the Document Understanding Services",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiCreateCaseApiBodyModelADAB4AB1",
        "RequestProcessorApiCreateCaseResponseModel6F42A3ED",
        "RequestProcessorApiDownloadDocumentResponseModelD19C872B",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiGetCaseResponseModel0674DFD2",
        "RequestProcessorApiGetDocumentResponseModel9AD8296F",
        "RequestProcessorApiInternalServerErrorDefaultResponse7D2EFB7C",
        "RequestProcessorApiRedactionApiRequestBodyModel15F655BB",
        "RequestProcessorApiRequestValidator569D8788",
        "RequestProcessorApiUploadDocumentApiBodyModelC2CA93C5"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
              "Arn"
            ]
          },
          "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
        },
        "DeploymentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "StageName": "prod",
        "TracingEnabled": true
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicase3F19499A": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RequestProcessorApiEndPointLambdaRestApiE0631C93",
            "RootResourceId"
          ]
        },
        "PathPart": "case",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApicase3F19499A"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionE59C19CF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/POST/case"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionE59C19CF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/POST/case"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionE59C19CF",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RequestProcessorApiCreateCaseResponseModel6F42A3ED"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "CreateCase",
        "RequestModels": {
          "application/json": {
            "Ref": "RequestProcessorApiCreateCaseApiBodyModelADAB4AB1"
          }
        },
        "RequestParameters": {
          "method.request.header.Authorization": true
        },
        "RequestValidatorId": {
          "Ref": "RequestProcessorApiRequestValidator569D8788"
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApicase3F19499A"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApicase3F19499A"
        },
        "PathPart": "{caseId}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/GET/case/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/GET/case/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RequestProcessorApiGetCaseResponseModel0674DFD2"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "GetCase",
        "RequestParameters": {
          "method.request.header.Authorization": true
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicases32787E95": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RequestProcessorApiEndPointLambdaRestApiE0631C93",
            "RootResourceId"
          ]
        },
        "PathPart": "cases",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApicases32787E95"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/GET/cases"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/GET/cases"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RequestProcessorApiGetCaseResponseModel0674DFD2"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "GetCases",
        "RequestParameters": {
          "method.request.header.Authorization": true
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApicases32787E95"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RequestProcessorApiEndPointLambdaRestApiE0631C93",
            "RootResourceId"
          ]
        },
        "PathPart": "document",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionE59C19CF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/POST/document"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionE59C19CF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/POST/document"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionE59C19CF",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ],
        "OperationName": "UploadDocument",
        "RequestModels": {
          "application/json": {
            "Ref": "RequestProcessorApiUploadDocumentApiBodyModelC2CA93C5"
          }
        },
        "RequestParameters": {
          "method.request.header.Authorization": true
        },
        "RequestValidatorId": {
          "Ref": "RequestProcessorApiRequestValidator569D8788"
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F"
        },
        "PathPart": "{caseId}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB"
        },
        "PathPart": "{documentId}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/GET/document/*/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/GET/document/*/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunction79EEF477",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RequestProcessorApiGetDocumentResponseModel9AD8296F"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "GetDocumentUrl",
        "RequestParameters": {
          "method.request.querystring.redacted": false,
          "method.request.header.Authorization": true
        },
        "RequestValidatorId": {
          "Ref": "RequestProcessorApiRequestValidator569D8788"
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F"
        },
        "PathPart": "download",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorGetDocumentUrlLambdaD731C3BA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/GET/document/download"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorGetDocumentUrlLambdaD731C3BA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/GET/document/download"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RequestProcessorGetDocumentUrlLambdaD731C3BA",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RequestProcessorApiDownloadDocumentResponseModelD19C872B"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "DownloadDocument",
        "RequestParameters": {
          "method.request.querystring.key": true,
          "method.request.header.Authorization": true
        },
        "RequestValidatorId": {
          "Ref": "RequestProcessorApiRequestValidator569D8788"
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferences69499B40": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RequestProcessorApiEndPointLambdaRestApiE0631C93",
            "RootResourceId"
          ]
        },
        "PathPart": "inferences",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiinferences69499B40"
        },
        "PathPart": "{caseId}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D"
        },
        "PathPart": "{documentId}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorGetInferencesLambdaD2BCF9D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/GET/inferences/*/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorGetInferencesLambdaD2BCF9D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/GET/inferences/*/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RequestProcessorGetInferencesLambdaD2BCF9D4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "GetInferences",
        "RequestParameters": {
          "method.request.header.Authorization": true
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD"
        },
        "PathPart": "{inferenceType}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorGetInferencesLambdaD2BCF9D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/GET/inferences/*/*/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorGetInferencesLambdaD2BCF9D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/GET/inferences/*/*/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RequestProcessorGetInferencesLambdaD2BCF9D4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ],
        "OperationName": "GetInference",
        "RequestParameters": {
          "method.request.header.Authorization": true
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RequestProcessorApiEndPointLambdaRestApiE0631C93",
            "RootResourceId"
          ]
        },
        "PathPart": "redact",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D"
        },
        "PathPart": "{caseId}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01"
        },
        "PathPart": "{documentId}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RedactApiLambda62B07765",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/POST/redact/*/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RedactApiLambda62B07765",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/POST/redact/*/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RedactApiLambda62B07765",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "201"
          }
        ],
        "OperationName": "RedactDocument",
        "RequestModels": {
          "application/json": {
            "Ref": "RequestProcessorApiRedactionApiRequestBodyModel15F655BB"
          }
        },
        "RequestParameters": {
          "method.request.header.Authorization": true
        },
        "RequestValidatorId": {
          "Ref": "RequestProcessorApiRequestValidator569D8788"
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RequestProcessorApiEndPointLambdaRestApiE0631C93",
            "RootResourceId"
          ]
        },
        "PathPart": "search",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C"
        },
        "PathPart": "kendra",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A"
        },
        "PathPart": "{query}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-APIG4"
            },
            {
              "reason": "The OPTIONS method cannot use auth as the server has to respond to the OPTIONS request for cors reasons",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchLambdaE9895880",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/GET/search/kendra/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchLambdaE9895880",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/test-invoke-stage/GET/search/kendra/*"
            ]
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "RequestProcessorApiExtUsrAuthorizerD6D3E562"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchLambdaE9895880",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0"
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
            },
            "Stage": {
              "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
            },
            "Throttle": {}
          }
        ]
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:FilterLogEvents",
                    "logs:GetLogEvents",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Module under construction. To be removed in following commits",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:*"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointLambdaRestApiE0631C93"
      ]
    },
    "RequestProcessorApiRequestValidator569D8788": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-api-request-validator"
            ]
          ]
        },
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true
      }
    },
    "RequestProcessorApiEndpointEndpointWebACLBA91D23C": {
      "Type": "AWS::WAFv2::WebACL",
      "Properties": {
        "DefaultAction": {
          "Allow": {}
        },
        "Rules": [
          {
            "Name": "AWS-AWSManagedRulesBotControlRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 0,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesBotControlRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesBotControlRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 1,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesKnownBadInputsRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesCommonRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesCommonRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAnonymousIpList",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 3,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAnonymousIpList",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAnonymousIpList",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAmazonIpReputationList",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 4,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAmazonIpReputationList",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAdminProtectionRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 5,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAdminProtectionRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAdminProtectionRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesSQLiRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 6,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesSQLiRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesSQLiRuleSet",
              "SampledRequestsEnabled": true
            }
          }
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "webACL",
          "SampledRequestsEnabled": true
        }
      }
    },
    "RequestProcessorApiEndpointWebACLAssociation0CD8E3B3": {
      "Type": "AWS::WAFv2::WebACLAssociation",
      "Properties": {
        "ResourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              "::/restapis/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              "/stages/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              }
            ]
          ]
        },
        "WebACLArn": {
          "Fn::GetAtt": [
            "RequestProcessorApiEndpointEndpointWebACLBA91D23C",
            "Arn"
          ]
        }
      }
    },
    "RequestProcessorApiExtUsrPoolsmsRoleA3DAC96B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "DocUnderstandingRequestProcessorApiExtUsrPool7A36E6FB"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cognito-idp.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "sns-publish"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The role information is not available when creating the user pool",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "The role information is not available when creating the user pool"
            }
          ]
        }
      }
    },
    "RequestProcessorApiExtUsrPoolD660310E": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1
            },
            {
              "Name": "verified_email",
              "Priority": 2
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false,
          "InviteMessageTemplate": {
            "EmailMessage": "You have been invited to join Enhanced Document Understanding on AWS app. Your temporary credentials are:</p>                     <p>                     Username: <strong>{username}</strong><br />                     Password: <strong>{####}</strong>                     </p>                     <p>                    Please use this temporary password to sign in and change your password.                     Wait until the deployent has completed before accessing the website or api.                      </p> ",
            "EmailSubject": "Invitation to join Enhanced Document Understanding on AWS app!"
          }
        },
        "AliasAttributes": [
          "email"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ],
        "EmailVerificationMessage": "Thank you for creating your profile on Enhanced Document Understanding on AWS. Your verification code is {####}",
        "EmailVerificationSubject": "Verify your email to continue using Enhanced Document Understanding on AWS",
        "EnabledMfas": [
          "SMS_MFA"
        ],
        "MfaConfiguration": "OPTIONAL",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 12,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
            "TemporaryPasswordValidityDays": 3
          }
        },
        "SmsConfiguration": {
          "ExternalId": "DocUnderstandingRequestProcessorApiExtUsrPool7A36E6FB",
          "SnsCallerArn": {
            "Fn::GetAtt": [
              "RequestProcessorApiExtUsrPoolsmsRoleA3DAC96B",
              "Arn"
            ]
          }
        },
        "SmsVerificationMessage": "Thank you for creating your profile on Enhanced Document Understanding on AWS! Your verification code is {####}",
        "UserPoolAddOns": {
          "Fn::If": [
            "isGovCloudPartition",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "AdvancedSecurityMode": "ENFORCED"
            }
          ]
        },
        "UserPoolName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-ExtUsrPool"
            ]
          ]
        },
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "Thank you for creating your profile on Enhanced Document Understanding on AWS. Your verification code is {####}",
          "EmailSubject": "Verify your email to continue using Enhanced Document Understanding on AWS",
          "SmsMessage": "Thank you for creating your profile on Enhanced Document Understanding on AWS! Your verification code is {####}"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "To enable MFA and what should be used as MFA varies on business case, hence disabling it for customers to take a decision",
              "id": "AwsSolutions-COG2"
            }
          ]
        }
      }
    },
    "RequestProcessorApiClientApp8246E796": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "AccessTokenValidity": 5,
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_SRP_AUTH"
        ],
        "IdTokenValidity": 5,
        "TokenValidityUnits": {
          "AccessToken": "minutes",
          "IdToken": "minutes"
        },
        "UserPoolId": {
          "Ref": "RequestProcessorApiExtUsrPoolD660310E"
        }
      }
    },
    "RequestProcessorApiExtUsrAuthorizerD6D3E562": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "ExtUserAuthorizer",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "RequestProcessorApiExtUsrPoolD660310E",
              "Arn"
            ]
          }
        ],
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "Type": "COGNITO_USER_POOLS"
      }
    },
    "RequestProcessorApiDefaultUser80A305EB": {
      "Type": "AWS::Cognito::UserPoolUser",
      "Properties": {
        "DesiredDeliveryMediums": [
          "EMAIL"
        ],
        "ForceAliasCreation": false,
        "UserAttributes": [
          {
            "Name": "email",
            "Value": {
              "Ref": "DefaultUserEmail"
            }
          }
        ],
        "UserPoolId": {
          "Ref": "RequestProcessorApiExtUsrPoolD660310E"
        },
        "Username": {
          "Fn::Select": [
            0,
            {
              "Fn::Split": [
                "@",
                {
                  "Ref": "DefaultUserEmail"
                }
              ]
            }
          ]
        }
      },
      "Condition": "RequestProcessorApiCognitoUserConditionA53ADA52"
    },
    "RequestProcessorApiInternalServerErrorDefaultResponse7D2EFB7C": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseType": "DEFAULT_5XX",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "StatusCode": "400"
      }
    },
    "RequestProcessorApiCreateCaseApiBodyModelADAB4AB1": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Defines the required JSON structure of the POST request to create a case",
        "Name": "CreateCaseApiBodyModel",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "Schema": {
          "type": "object",
          "properties": {
            "caseName": {
              "type": "string",
              "description": "The ID of the case to whom the document belongs",
              "pattern": "\\w+"
            }
          },
          "required": [
            "caseName"
          ],
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "RequestProcessorApiCreateCaseResponseModel6F42A3ED": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Response model to describe response of create case",
        "Name": "CreateCaseResponseModel",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "Schema": {
          "type": "object",
          "properties": {
            "ddbResponse": {
              "type": "object",
              "description": "Record written into ddb",
              "properties": {
                "CASE_ID": {
                  "type": "string"
                },
                "DOCUMENT_ID": {
                  "type": "string"
                },
                "USER_ID": {
                  "type": "string"
                },
                "CASE_NAME": {
                  "type": "string"
                },
                "CREATION_TIMESTAMP": {
                  "type": "string"
                },
                "STATUS": {
                  "type": "string"
                }
              }
            },
            "caseId": {
              "type": "string",
              "description": "ID of the case that was created"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "RequestProcessorApiGetCaseResponseModel0674DFD2": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Response to retrieve records for a CaseId",
        "Name": "GetCaseResponseModel",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "Schema": {
          "type": "object",
          "properties": {
            "Items": {
              "type": "array",
              "description": "Array of DynamoDB records that have the given caseId",
              "items": {
                "type": "object",
                "description": "Record written into ddb",
                "properties": {
                  "CASE_ID": {
                    "type": "string"
                  },
                  "DOCUMENT_ID": {
                    "type": "string"
                  },
                  "USER_ID": {
                    "type": "string"
                  },
                  "CASE_NAME": {
                    "type": "string"
                  },
                  "CREATION_TIMESTAMP": {
                    "type": "string"
                  },
                  "STATUS": {
                    "type": "string"
                  }
                }
              }
            },
            "Count": {
              "type": "integer",
              "description": "Number of records with the given CaseId"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "RequestProcessorApiUploadDocumentApiBodyModelC2CA93C5": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Defines the required JSON structure of the POST request to upload documents to S3",
        "Name": "UploadDocumentApiBodyModel",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "Schema": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "description": "The ID of the user to whom the document belongs",
              "pattern": "^[a-zA-Z0-9_+:-]{1,}"
            },
            "caseId": {
              "type": "string",
              "description": "The ID of the case to whom the document belongs",
              "pattern": "^[a-zA-Z0-9_+:-]{1,}"
            },
            "caseName": {
              "type": "string",
              "description": "The ID of the case to whom the document belongs",
              "pattern": "\\w+"
            },
            "fileName": {
              "type": "string",
              "description": "The name of the file",
              "pattern": "\\w+"
            },
            "fileExtension": {
              "type": "string",
              "description": "The extension of the file. Must begin with period",
              "pattern": "^.(pdf|jpg|jpeg|png)$"
            },
            "documentType": {
              "type": "string",
              "description": "The type of document based on business rules, such as driving license, passport, etc",
              "pattern": "\\w+"
            },
            "tagging": {
              "type": "string",
              "description": "Tags associated with the document"
            }
          },
          "required": [
            "userId",
            "caseId",
            "caseName",
            "fileName",
            "fileExtension",
            "documentType",
            "tagging"
          ],
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "RequestProcessorApiGetDocumentResponseModel9AD8296F": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Response to get location of a document",
        "Name": "GetDocumentResponseModel",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "Schema": {
          "type": "object",
          "description": "Location of the document that is requested to be downloaded. This is used by a lambda function to create an authenticated signed-url",
          "properties": {
            "DocId": {
              "type": "string",
              "description": "ID of the requested document"
            },
            "Bucket": {
              "type": "string",
              "description": "S3 bucket name"
            },
            "key": {
              "type": "string",
              "description": "Location of the requested document"
            },
            "FileName": {
              "type": "string",
              "description": "Filename"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "RequestProcessorApiDownloadDocumentResponseModelD19C872B": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Response to download a document",
        "Name": "DownloadDocumentResponseModel",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "Schema": {
          "type": "object",
          "description": "Object containing the presigned url to download a requested document",
          "properties": {
            "downloadUrl": {
              "type": "string",
              "description": "Presigned URL to download file"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "RequestProcessorApiRedactionApiRequestBodyModel15F655BB": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Defines the required JSON structure for the redaction request body",
        "Name": "RedactionApiRequestBodyModel",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        },
        "Schema": {
          "type": "object",
          "anyOf": [
            {
              "required": [
                "phrases"
              ]
            },
            {
              "required": [
                "entities"
              ]
            }
          ],
          "properties": {
            "entities": {
              "type": "object",
              "description": "Keys of this object represent the names of the entity detection inference (e.g. entity-standard or entity-medical) for which we want to redact content",
              "minProperties": 1,
              "patternProperties": {
                ".*": {
                  "type": "object",
                  "description": "Keys of this object represent entity types to be redacted. E.g. 'DATE'",
                  "minProperties": 1,
                  "patternProperties": {
                    ".*": {
                      "type": "object",
                      "description": "Specific entities to be redacted, where key is the entity text. E.g. 'December 25, 2025'",
                      "minProperties": 1,
                      "patternProperties": {
                        ".*": {
                          "type": "array",
                          "description": "Array of the page numbers for the given entity which we want to redact",
                          "minItems": 1,
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "phrases": {
              "type": "array",
              "description": "If included, redacts the given phrases (not related to entities) on pages specified.",
              "minItems": 1,
              "items": {
                "type": "object",
                "description": "Each of these objects defines a generic text to be redacted on pages specified",
                "required": [
                  "text",
                  "pages"
                ],
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The specific text to be redacted"
                  },
                  "pages": {
                    "type": "array",
                    "description": "Pages where this phrase will be redacted",
                    "minItems": 1,
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "RequestProcessorApiApiDocumentationRequestAuthHeader73CBC3E6": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "*",
          "Name": "Authorization",
          "Path": "/",
          "Type": "REQUEST_HEADER"
        },
        "Properties": "{\"description\":\"Authorization header in the form of a Cognito id token string.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationCaseIdPathParamA2872D56": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Name": "caseId",
          "Type": "PATH_PARAMETER"
        },
        "Properties": "{\"description\":\"ID associated with a case.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationDocumentIdPathParam86E204C8": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Name": "documentId",
          "Type": "PATH_PARAMETER"
        },
        "Properties": "{\"description\":\"ID associated with a document.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationApiRoot67E989A9": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Type": "API"
        },
        "Properties": "{\"info\":{\"description\":\"Enhanced Document Understanding on AWS API.\",\"contact\":{\"name\":\"Amazon.com, Inc\"}}}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationCaseResource7A4C23ED": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Path": "/case",
          "Type": "RESOURCE"
        },
        "Properties": "{\"description\":\"Create a new case or retrieve a case by its id. The case id is returned in the response body.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationCreateCaseMethodCAF88EB3": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "POST",
          "Path": "/case",
          "Type": "METHOD"
        },
        "Properties": "{\"description\":\"This endpoint is used to create new cases and retrieve an existing case details.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationCreateCaseBody27206C9C": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "POST",
          "Path": "/case",
          "Type": "REQUEST_BODY"
        },
        "Properties": "{\"description\":\"To create a new case the case name must be included in the request\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationListCasesResource1A75B3B3": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Path": "/cases",
          "Type": "RESOURCE"
        },
        "Properties": "{\"description\":\"Cases is used to retrieve all records accessible to an authenticated user\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationGetDocQueryParam3671BBA4": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "GET",
          "Name": "redacted",
          "Path": "/document/{caseId}/{documentId}",
          "Type": "QUERY_PARAMETER"
        },
        "Properties": "{\"description\":\"Boolean value to specify whether to return redacted or unredacted version of document.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationDownloadDocQueryParam0A674382": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "GET",
          "Name": "key",
          "Path": "/document/download",
          "Type": "QUERY_PARAMETER"
        },
        "Properties": "{\"description\":\"S3 key of the document to download. Will only work if request is sent by an authorized user.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationRedactMethodF6C7911C": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "POST",
          "Path": "/redact/{caseId}/{documentId}",
          "Type": "METHOD"
        },
        "Properties": "{\"description\":\"This endpoint is used to redact specific entities from a document.\\n            The request body describes the requried structure. A successful request will \\n            redact a document with a given ID, store it in the S3 bucket, and update the case records. To download a redacted document, send a request to `GET:/document/{caseId}/{documentId}?redacted=true`\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationRedactSuccessResponseE791E1D5": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Path": "/redact/{caseId}/{documentId}",
          "StatusCode": "201",
          "Type": "RESPONSE"
        },
        "Properties": "{\"description\":\"Successully request to redact entities from a document\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationKendraSearchMethodC39F7DF5": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "GET",
          "Path": "/search/kendra/{query}",
          "Type": "METHOD"
        },
        "Properties": "{\"description\":\"This endpoint is used to do a NLP based search, with AWS Kendra, across documents that have been uploaded. \\n        The search is restricted only to documents to which the user has access\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationKendraSearchPathParam4B4DD40B": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Name": "query",
          "Path": "/search/kendra/{query}",
          "Type": "PATH_PARAMETER"
        },
        "Properties": "{\"description\":\"The string to search for in the AWS Kendra Index.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationGetInferenceByTypeMethodC7E8DBAF": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "GET",
          "Path": "/inferences/{caseId}/{documentId}/{inferenceType}",
          "Type": "METHOD"
        },
        "Properties": "{\"description\":\"This endpoint is used to retrieve inference for a document within a case. The `inferenceType` path parameter is the file name of the inference results object that was stored in the S3 inference bucket.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationListInferencesMethod6BB1D513": {
      "Type": "AWS::ApiGateway::DocumentationPart",
      "Properties": {
        "Location": {
          "Method": "GET",
          "Path": "/inferences/{caseId}/{documentId}",
          "Type": "METHOD"
        },
        "Properties": "{\"description\":\"This endpoint is used to list the inference results available for a document.\"}",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorApiApiDocumentationVersionDF878A4E": {
      "Type": "AWS::ApiGateway::DocumentationVersion",
      "Properties": {
        "DocumentationVersion": "v1.0.1",
        "RestApiId": {
          "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
        }
      },
      "DependsOn": [
        "RequestProcessorApiEndPointApiAccessLogGroup713BAB37",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId811C5645",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasecaseId47871724",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdGET7823B842",
        "RequestProcessorApiEndPointLambdaRestApicasecaseIdOPTIONS5DAE6102",
        "RequestProcessorApiEndPointLambdaRestApicasecaseId8A4CEA66",
        "RequestProcessorApiEndPointLambdaRestApicaseOPTIONS604E6434",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase65C5FA66",
        "RequestProcessorApiEndPointLambdaRestApicasePOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTcase62FC1402",
        "RequestProcessorApiEndPointLambdaRestApicasePOST88FCB416",
        "RequestProcessorApiEndPointLambdaRestApicase3F19499A",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcasesFA916CF8",
        "RequestProcessorApiEndPointLambdaRestApicasesGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETcases9F01226F",
        "RequestProcessorApiEndPointLambdaRestApicasesGETADDB369B",
        "RequestProcessorApiEndPointLambdaRestApicasesOPTIONSE028AA23",
        "RequestProcessorApiEndPointLambdaRestApicases32787E95",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdE715D159",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentcaseIddocumentIdC50029B8",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdGET17953380",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentIdOPTIONSCDEF8057",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseIddocumentId7AA6516A",
        "RequestProcessorApiEndPointLambdaRestApidocumentcaseId89CAB1CB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadE6D9483B",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETdocumentdownloadAB81294C",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadGET0626BC19",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownloadOPTIONS36F528AB",
        "RequestProcessorApiEndPointLambdaRestApidocumentdownload59F50E01",
        "RequestProcessorApiEndPointLambdaRestApidocumentOPTIONSE03DB794",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentA4F14359",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTdocumentF24C9D4B",
        "RequestProcessorApiEndPointLambdaRestApidocumentPOSTB427AAE0",
        "RequestProcessorApiEndPointLambdaRestApidocument26A1A19F",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceType1A4A2477",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentIdinferenceTypeD1E8F5EA",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeGET7B761661",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceTypeOPTIONS2EC99253",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdinferenceType5781289D",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId88763751",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETinferencescaseIddocumentId80AE4108",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdGETDB874057",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdOPTIONS7D35D4BD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIddocumentIdF4A8C7AD",
        "RequestProcessorApiEndPointLambdaRestApiinferencescaseIdA4EEB37D",
        "RequestProcessorApiEndPointLambdaRestApiinferences69499B40",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdOPTIONS825D861E",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdB7D60743",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EPOSTredactcaseIddocumentIdCDEDBEE7",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentIdPOSTEDED6149",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIddocumentId5ADA8B60",
        "RequestProcessorApiEndPointLambdaRestApiredactcaseIdB2AFCB01",
        "RequestProcessorApiEndPointLambdaRestApiredact8F1D3A0D",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery1E596847",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGETApiPermissionTestDocUnderstandingRequestProcessorApiEndPointLambdaRestApi0210CA7EGETsearchkendraquery86278D7A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryGET27675B4A",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryOPTIONS265CC230",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraqueryB80BB2F0",
        "RequestProcessorApiEndPointLambdaRestApisearchkendraEC4D100A",
        "RequestProcessorApiEndPointLambdaRestApisearchAA3E577C",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentC393DF2841f894db492259b2a637f85f4783331a",
        "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11",
        "RequestProcessorApiEndPointLambdaRestApiE0631C93",
        "RequestProcessorApiEndPointLambdaRestApiUsagePlan1D481F22",
        "RequestProcessorApiEndPointLambdaRestApiAccount2B7BD356",
        "RequestProcessorApiEndPointLambdaRestApiCloudWatchRole615A0D91"
      ]
    },
    "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleCA061FC5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The log-group name is not known at this point. Hence the wildcard",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleDefaultPolicy7F5EB4D3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "SetupWorkflowConfigC35D6A7C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SetupEventOrchestrator22A3F9D1",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:GetObject*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorInferences13166F85",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorInferences13166F85",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleDefaultPolicy7F5EB4D3",
        "Roles": [
          {
            "Ref": "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleCA061FC5"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "the lambda has been granted read permissions to the inferences bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*",
                "Resource::<RequestProcessorInferences13166F85.Arn>/*"
              ]
            },
            {
              "reason": "The lambda requires access to the dynamoDB table, which has a GSI, hence CDK generates a /index/* resource",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC.Arn>/index/*"
              ]
            },
            {
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      }
    },
    "RequestProcessorEventOrchestratorLambdaFunctionE9ACCFA7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asset280aa309f6a6c8849a561be5efa279664e53ca8ebe2a17ab339b3bd96e4cbdfc.zip"
        },
        "Environment": {
          "Variables": {
            "CASE_DDB_TABLE_NAME": {
              "Ref": "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC"
            },
            "WORKFLOW_CONFIG_TABLE_NAME": {
              "Ref": "SetupWorkflowConfigC35D6A7C"
            },
            "S3_UPLOAD_PREFIX": "initial",
            "S3_INFERENCE_BUCKET_NAME": {
              "Ref": "RequestProcessorInferences13166F85"
            },
            "EVENT_BUS_ARN": {
              "Fn::GetAtt": [
                "SetupEventOrchestrator22A3F9D1",
                "Arn"
              ]
            },
            "WORKFLOW_CONFIG_NAME": {
              "Ref": "WorkflowConfigName"
            },
            "UUID": {
              "Fn::GetAtt": [
                "SetupGenUUID96034244",
                "UUID"
              ]
            },
            "KENDRA_INDEX_ID": {
              "Fn::If": [
                "IndexedStorageDeployKendraIndexConditionB9696BD9",
                {
                  "Fn::GetAtt": [
                    "IndexedStorageKendraCaseSearchNestedStackKendraCaseSearchNestedStackResource82985B33",
                    "Outputs.DocUnderstandingIndexedStorageKendraCaseSearch9BB8DDA1Id"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "KENDRA_ROLE_ARN": {
              "Fn::If": [
                "IndexedStorageDeployKendraIndexConditionB9696BD9",
                {
                  "Fn::GetAtt": [
                    "IndexedStorageKendraCaseSearchNestedStackKendraCaseSearchNestedStackResource82985B33",
                    "Outputs.DocUnderstandingIndexedStorageKendraCaseSearchKendraRole402C2F8FArn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "APP_NAMESPACE": {
              "Fn::FindInMap": [
                "Solution",
                "Data",
                "AppNamespace"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0281/v1.0.1\" }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleCA061FC5",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleDefaultPolicy7F5EB4D3",
        "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleCA061FC5"
      ],
      "Metadata": {
        "aws:asset:path": "asset.280aa309f6a6c8849a561be5efa279664e53ca8ebe2a17ab339b3bd96e4cbdfc",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "RequestProcessorEventOrchestratorLambdaFunctionAwsEventsLambdaInvokePermission1840C5AE4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorEventOrchestratorLambdaFunctionE9ACCFA7",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "RequestProcessorEventOrchestratorEventsRuleEA0B2B4F",
            "Arn"
          ]
        }
      }
    },
    "RequestProcessorEventOrchestratorLambdaFunctionAwsEventsLambdaInvokePermission264247339": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorEventOrchestratorLambdaFunctionE9ACCFA7",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "RequestProcessorEventOrchestratorOnSfnFailureEventsRule990AE648",
            "Arn"
          ]
        }
      }
    },
    "RequestProcessorEventOrchestratorEventsRuleEA0B2B4F": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.s3"
          ],
          "detail-type": [
            "Object Created"
          ],
          "account": [
            {
              "Ref": "AWS::AccountId"
            }
          ],
          "region": [
            {
              "Ref": "AWS::Region"
            }
          ],
          "detail": {
            "bucket": {
              "name": [
                {
                  "prefix": {
                    "Ref": "RequestProcessorDocumentRepo94D336AB"
                  }
                }
              ]
            },
            "object": {
              "key": [
                {
                  "prefix": "initial"
                }
              ]
            }
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "RequestProcessorEventOrchestratorLambdaFunctionE9ACCFA7",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "RequestProcessorEventOrchestratorOnSfnFailureEventsRule990AE648": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "SetupEventOrchestrator22A3F9D1"
        },
        "EventPattern": {
          "account": [
            {
              "Ref": "AWS::AccountId"
            }
          ],
          "region": [
            {
              "Ref": "AWS::Region"
            }
          ],
          "source": [
            {
              "Fn::Join": [
                "",
                [
                  "workflow-stepfunction.",
                  {
                    "Fn::FindInMap": [
                      "Solution",
                      "Data",
                      "AppNamespace"
                    ]
                  }
                ]
              ]
            }
          ],
          "detail-type": [
            "processing_failure"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "RequestProcessorEventOrchestratorLambdaFunctionE9ACCFA7",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "RedactApiLambdaServiceRole69767CEE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Providing permission to read from the upload bucket under the upload prefix",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/initial/*",
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            },
            {
              "reason": "Providing permission to upload to the upload bucket under the redaction prefix",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/redacted/*",
                "Action::s3:Put*"
              ]
            },
            {
              "reason": "Providing permission to read from the inferences bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorInferences13166F85.Arn>/*",
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            },
            {
              "reason": "The wildcard \"*\" is to allow all the Abort actions for this bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:Abort*"
              ]
            },
            {
              "reason": "This lambda generates a managed policy to create log groups, log streams and put events.",
              "id": "AwsSolutions-IAM4",
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            }
          ]
        }
      }
    },
    "RedactApiLambdaServiceRoleDefaultPolicy60081F53": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:GetObject*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RequestProcessorDocumentRepo94D336AB",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "RequestProcessorInferences13166F85",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorDocumentRepo94D336AB",
                          "Arn"
                        ]
                      },
                      "/initial/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RequestProcessorInferences13166F85",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:Abort*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "RequestProcessorDocumentRepo94D336AB",
                        "Arn"
                      ]
                    },
                    "/redacted/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RedactApiLambdaServiceRoleDefaultPolicy60081F53",
        "Roles": [
          {
            "Ref": "RedactApiLambdaServiceRole69767CEE"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Providing permission to read from the upload bucket under the upload prefix",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/initial/*",
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            },
            {
              "reason": "Providing permission to upload to the upload bucket under the redaction prefix",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorDocumentRepo94D336AB.Arn>/redacted/*",
                "Action::s3:Put*"
              ]
            },
            {
              "reason": "Providing permission to read from the inferences bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::<RequestProcessorInferences13166F85.Arn>/*",
                "Action::s3:GetBucket*",
                "Action::s3:GetObject*",
                "Action::s3:List*"
              ]
            },
            {
              "reason": "The wildcard \"*\" is to allow all the Abort actions for this bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:Abort*"
              ]
            },
            {
              "reason": "This lambda generates a managed policy to create log groups, log streams and put events.",
              "id": "AwsSolutions-IAM4",
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            }
          ]
        }
      }
    },
    "RedactApiLambda62B07765": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/assetc2d1a88cd5cd46fa2ed80a9d3c5db5775dd9d7f176492c645f7f1756d37fed50.jar"
        },
        "Environment": {
          "Variables": {
            "S3_INFERENCE_BUCKET_NAME": {
              "Ref": "RequestProcessorInferences13166F85"
            },
            "DOCUMENT_BUCKET_NAME": {
              "Ref": "RequestProcessorDocumentRepo94D336AB"
            },
            "S3_UPLOAD_PREFIX": "initial",
            "S3_REDACTED_PREFIX": "redacted",
            "UUID": {
              "Fn::GetAtt": [
                "SetupGenUUID96034244",
                "UUID"
              ]
            },
            "AWS_SDK_USER_AGENT": "AwsSolution/SO0281/v1.0.1"
          }
        },
        "Handler": "com.builder.lambda.RedactionApiHandler",
        "Layers": [
          {
            "Ref": "AspectInjectJavaUserAgentLayer18C82052"
          }
        ],
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "RedactApiLambdaServiceRole69767CEE",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::If": [
            "isGovCloudPartition",
            "java11",
            "java17"
          ]
        },
        "Timeout": 900
      },
      "DependsOn": [
        "RedactApiLambdaServiceRoleDefaultPolicy60081F53",
        "RedactApiLambdaServiceRole69767CEE"
      ],
      "Metadata": {
        "aws:asset:path": "asset.c2d1a88cd5cd46fa2ed80a9d3c5db5775dd9d7f176492c645f7f1756d37fed50.jar",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "SearchLambdaServiceRole0E246B0C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "This lambda generates a managed policy to create log groups, log streams and put events.",
              "id": "AwsSolutions-IAM4",
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            }
          ]
        }
      }
    },
    "SearchLambdaE9895880": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asseta2d518c02007b5da00cb0c72d5cc281192e2614eadd9769b56dacb382ae13d73.zip"
        },
        "Environment": {
          "Variables": {
            "KENDRA_INDEX_ID": {
              "Fn::If": [
                "IndexedStorageDeployKendraIndexConditionB9696BD9",
                {
                  "Fn::GetAtt": [
                    "IndexedStorageKendraCaseSearchNestedStackKendraCaseSearchNestedStackResource82985B33",
                    "Outputs.DocUnderstandingIndexedStorageKendraCaseSearch9BB8DDA1Id"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": \"AwsSolution/SO0281/v1.0.1\" }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "SearchLambdaServiceRole0E246B0C",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "SearchLambdaServiceRole0E246B0C"
      ],
      "Metadata": {
        "aws:asset:path": "asset.a2d518c02007b5da00cb0c72d5cc281192e2614eadd9769b56dacb382ae13d73",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The CloudFormation Conditions are added as CDK Aspects and hence causing validation error during synthesis",
              "id": "CdkNagValidationFailure"
            }
          ]
        }
      }
    },
    "IndexedStorageKendraCaseSearchNestedStackKendraCaseSearchNestedStackResource82985B33": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "QueryCapacityUnits": "0",
          "StorageCapacityUnits": "0",
          "RoleArn": {
            "Fn::GetAtt": [
              "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleCA061FC5",
              "Arn"
            ]
          },
          "QueryLambdaRoleArn": {
            "Fn::GetAtt": [
              "SearchLambdaServiceRole0E246B0C",
              "Arn"
            ]
          },
          "DocumentBucketName": {
            "Ref": "RequestProcessorDocumentRepo94D336AB"
          },
          "ExtUserPoolId": {
            "Ref": "RequestProcessorApiExtUsrPoolD660310E"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "enhanced-document-understanding-on-aws/v1.0.1/DocUnderstandingIndexedStorageKendraCaseSearch4F4F77D2.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "AppRegistryRegistrySetup9C75F927"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DocUnderstandingIndexedStorageKendraCaseSearch4F4F77D2.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "IndexedStorageDeployKendraIndexConditionB9696BD9"
    },
    "TextractNestedStackTextractNestedStackResource91F777DA": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "SyncCaseTableArn": {
            "Fn::GetAtt": [
              "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
              "Arn"
            ]
          },
          "SyncInferenceS3BucketArn": {
            "Fn::GetAtt": [
              "RequestProcessorInferences13166F85",
              "Arn"
            ]
          },
          "OrchestratorBusArn": {
            "Fn::GetAtt": [
              "SetupEventOrchestrator22A3F9D1",
              "Arn"
            ]
          },
          "AppNamespace": {
            "Fn::FindInMap": [
              "Solution",
              "Data",
              "AppNamespace"
            ]
          },
          "UploadBucketArn": {
            "Fn::GetAtt": [
              "RequestProcessorDocumentRepo94D336AB",
              "Arn"
            ]
          },
          "GenUUID": {
            "Fn::GetAtt": [
              "SetupGenUUID96034244",
              "UUID"
            ]
          },
          "referencetoDocUnderstandingAspectInjectNodeUserAgentLayer018B4ABFRef": {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          "referencetoDocUnderstandingAspectInjectNodejsSharedLibB5C8A884Ref": {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          "referencetoDocUnderstandingAspectInjectAwsNodeSdkLayerA3DE3373Ref": {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "enhanced-document-understanding-on-aws/v1.0.1/DocUnderstandingTextract150A9860.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "AppRegistryRegistrySetup9C75F927"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DocUnderstandingTextract150A9860.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeployTextractWorkflow"
    },
    "RedactionNestedStackRedactionNestedStackResourceC3173235": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "SyncCaseTableArn": {
            "Fn::GetAtt": [
              "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
              "Arn"
            ]
          },
          "SyncInferenceS3BucketArn": {
            "Fn::GetAtt": [
              "RequestProcessorInferences13166F85",
              "Arn"
            ]
          },
          "OrchestratorBusArn": {
            "Fn::GetAtt": [
              "SetupEventOrchestrator22A3F9D1",
              "Arn"
            ]
          },
          "AppNamespace": {
            "Fn::FindInMap": [
              "Solution",
              "Data",
              "AppNamespace"
            ]
          },
          "UploadBucketArn": {
            "Fn::GetAtt": [
              "RequestProcessorDocumentRepo94D336AB",
              "Arn"
            ]
          },
          "GenUUID": {
            "Fn::GetAtt": [
              "SetupGenUUID96034244",
              "UUID"
            ]
          },
          "referencetoDocUnderstandingAspectInjectJavaUserAgentLayerF4ECDB36Ref": {
            "Ref": "AspectInjectJavaUserAgentLayer18C82052"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "enhanced-document-understanding-on-aws/v1.0.1/DocUnderstandingRedaction70271C5C.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "AppRegistryRegistrySetup9C75F927"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DocUnderstandingRedaction70271C5C.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeployRedactionWorkflow"
    },
    "EntityDetectionNestedStackEntityDetectionNestedStackResource23CC574A": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "SyncCaseTableArn": {
            "Fn::GetAtt": [
              "RequestProcessorCaseManagerCreateRecordsLambdaDDbDynamoTable94F42CFC",
              "Arn"
            ]
          },
          "SyncInferenceS3BucketArn": {
            "Fn::GetAtt": [
              "RequestProcessorInferences13166F85",
              "Arn"
            ]
          },
          "OrchestratorBusArn": {
            "Fn::GetAtt": [
              "SetupEventOrchestrator22A3F9D1",
              "Arn"
            ]
          },
          "AppNamespace": {
            "Fn::FindInMap": [
              "Solution",
              "Data",
              "AppNamespace"
            ]
          },
          "UploadBucketArn": {
            "Fn::GetAtt": [
              "RequestProcessorDocumentRepo94D336AB",
              "Arn"
            ]
          },
          "GenUUID": {
            "Fn::GetAtt": [
              "SetupGenUUID96034244",
              "UUID"
            ]
          },
          "referencetoDocUnderstandingAspectInjectNodeUserAgentLayer018B4ABFRef": {
            "Ref": "AspectInjectNodeUserAgentLayer2D41D7BD"
          },
          "referencetoDocUnderstandingAspectInjectNodejsSharedLibB5C8A884Ref": {
            "Ref": "AspectInjectNodejsSharedLib5A9FFA68"
          },
          "referencetoDocUnderstandingAspectInjectAwsNodeSdkLayerA3DE3373Ref": {
            "Ref": "AspectInjectAwsNodeSdkLayerF481B4E9"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "enhanced-document-understanding-on-aws/v1.0.1/DocUnderstandingEntityDetectionA7298CA4.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "AppRegistryRegistrySetup9C75F927"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DocUnderstandingEntityDetectionA7298CA4.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeployComprehendWorkflow"
    },
    "SfnToOrchestratorRuleF9346A4A": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "SetupEventOrchestrator22A3F9D1"
        },
        "EventPattern": {
          "source": [
            {
              "Fn::Join": [
                "",
                [
                  "workflow-stepfunction.",
                  {
                    "Fn::FindInMap": [
                      "Solution",
                      "Data",
                      "AppNamespace"
                    ]
                  }
                ]
              ]
            }
          ],
          "detail": {
            "case": {
              "status": [
                "success"
              ]
            }
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "RequestProcessorEventOrchestratorLambdaFunctionE9ACCFA7",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "SfnToOrchestratorRuleAllowEventRuleDocUnderstandingRequestProcessorEventOrchestratorLambdaFunctionFE9AD64D3EECEFCE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RequestProcessorEventOrchestratorLambdaFunctionE9ACCFA7",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SfnToOrchestratorRuleF9346A4A",
            "Arn"
          ]
        }
      }
    },
    "WebConfig": {
      "Type": "Custom::WriteWebConfig",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SetupInfraSetupCustomResourceFF2EF002",
            "Arn"
          ]
        },
        "Resource": "WEBCONFIG",
        "API_ENDPOINT": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
              },
              "/"
            ]
          ]
        },
        "USER_POOL_ID": {
          "Ref": "RequestProcessorApiExtUsrPoolD660310E"
        },
        "USER_POOL_CLIENT_ID": {
          "Ref": "RequestProcessorApiClientApp8246E796"
        },
        "SSM_KEY": {
          "Fn::Join": [
            "",
            [
              "/",
              {
                "Ref": "AWS::StackName"
              },
              "/app.idp/webconfig"
            ]
          ]
        },
        "KENDRA_STACK_DEPLOYED": {
          "Fn::If": [
            "IndexedStorageDeployKendraIndexConditionB9696BD9",
            "Yes",
            "No"
          ]
        },
        "WORKFLOW_CONFIG_DDB_TABLE_NAME": {
          "Ref": "SetupWorkflowConfigC35D6A7C"
        },
        "WORKFLOW_CONFIG_NAME": {
          "Ref": "WorkflowConfigName"
        }
      },
      "DependsOn": [
        "SetupWorkflowCopyWorkflowConfig856FD4FF",
        "SetupWriteToSSMDAFB0B23"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "WebAppS3UINestedStackS3UINestedStackResource19E82599": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "WebConfigKey": {
            "Fn::Join": [
              "",
              [
                "/",
                {
                  "Ref": "AWS::StackName"
                },
                "/app.idp/webconfig"
              ]
            ]
          },
          "CustomResourceLambdaArn": {
            "Fn::GetAtt": [
              "SetupInfraSetupCustomResourceFF2EF002",
              "Arn"
            ]
          },
          "CustomResourceRoleArn": {
            "Fn::GetAtt": [
              "SetupCustomResourceLambdaRole8C9673A0",
              "Arn"
            ]
          },
          "AccessLoggingBucketArn": {
            "Fn::GetAtt": [
              "SetupAccessLog0E7EB646",
              "Arn"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "enhanced-document-understanding-on-aws/v1.0.1/DocUnderstandingWebAppS3UIC0DE7177.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "AppRegistryRegistrySetup9C75F927",
        "SetupAccessLogPolicyBE6D2A3D",
        "WebConfig"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DocUnderstandingWebAppS3UIC0DE7177.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeployS3Web"
    },
    "AppRegistryRegistrySetup9C75F927": {
      "Type": "AWS::ServiceCatalogAppRegistry::Application",
      "Properties": {
        "Description": "Service Catalog application to track and manage all your resources for the solution enhanced-document-understanding-on-aws",
        "Name": "App-enhanced-document-understanding",
        "Tags": {
          "Solutions:ApplicationType": "AWS-Solutions",
          "Solutions:SolutionID": "SO0281",
          "Solutions:SolutionName": "enhanced-document-understanding-on-aws",
          "Solutions:SolutionVersion": "v1.0.1"
        }
      }
    },
    "AppRegistryAppAttributesF8874F2D": {
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroup",
      "Properties": {
        "Attributes": {
          "applicationType": "AWS-Solutions",
          "version": "v1.0.1",
          "solutionID": "SO0281",
          "solutionName": "enhanced-document-understanding-on-aws"
        },
        "Description": "Attributes for Solutions Metadata",
        "Name": {
          "Fn::Join": [
            "",
            [
              "AttrGrp-",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        }
      }
    },
    "AppRegistryAppAttributesApplicationAttributeGroupAssociation40859f2c0295E6C43930": {
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "AttributeGroup": {
          "Fn::GetAtt": [
            "AppRegistryAppAttributesF8874F2D",
            "Id"
          ]
        }
      }
    },
    "AspectInjectPythonUserAgentLayer16FECA5F": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "python3.8",
          "python3.9",
          "python3.10",
          "python3.11"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asset789ca2218ce9744cab269c7eae9c4ba1aab770ebbc8873c5dee62f76f4f88f55.zip"
        },
        "Description": "This layer configures AWS Python SDK initialization to send user-agent information"
      },
      "Metadata": {
        "aws:asset:path": "asset.789ca2218ce9744cab269c7eae9c4ba1aab770ebbc8873c5dee62f76f4f88f55",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "AspectInjectBoto3Layer6A9F1C7C": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "python3.8",
          "python3.9",
          "python3.10",
          "python3.11"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/assetedf5bb35a2e8892a0a2b0875a8e019f17958894ba3340444eb46eb6a1b28f9a1.zip"
        },
        "Description": "Boto3 layer to be bundled with python lambda functions"
      },
      "Metadata": {
        "aws:asset:path": "asset.edf5bb35a2e8892a0a2b0875a8e019f17958894ba3340444eb46eb6a1b28f9a1",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "AspectInjectNodeUserAgentLayer2D41D7BD": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs16.x",
          "nodejs18.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asset20c59db377ad705cea146d7101b848b7e16f90751c720c10abb467036b5ac3c4.zip"
        },
        "Description": "This layer configures AWS Node SDK initialization to send user-agent information"
      },
      "Metadata": {
        "aws:asset:path": "asset.20c59db377ad705cea146d7101b848b7e16f90751c720c10abb467036b5ac3c4",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "AspectInjectNodejsSharedLib5A9FFA68": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs16.x",
          "nodejs18.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asset1ad7349a08fff9641716077abd83c9ee6eb08b0e7c09eccea598d396183ed534.zip"
        },
        "Description": "This layer contains shared libraries and functions across all lambda functions to be bundled with the lambda function"
      },
      "Metadata": {
        "aws:asset:path": "asset.1ad7349a08fff9641716077abd83c9ee6eb08b0e7c09eccea598d396183ed534",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "AspectInjectAwsNodeSdkLayerF481B4E9": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs16.x",
          "nodejs18.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/asseta5c839403249aec962a7ca4d14895683f61155e183534893e3ac3005121827b2.zip"
        },
        "Description": "AWS Node SDK to be bundled with lambda functions"
      },
      "Metadata": {
        "aws:asset:path": "asset.a5c839403249aec962a7ca4d14895683f61155e183534893e3ac3005121827b2",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "AspectInjectJavaUserAgentLayer18C82052": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "java11",
          "java17"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "enhanced-document-understanding-on-aws/v1.0.1/assete0c6bbb5d9d24bf606b77be719e738514ce05af242defda5abc0985cfe287082.zip"
        },
        "Description": "This layer configures AWS Java SDK initialization to send user-agent information"
      },
      "Metadata": {
        "aws:asset:path": "asset.e0c6bbb5d9d24bf606b77be719e738514ce05af242defda5abc0985cfe287082",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "AppRegistryAssociation": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "AppRegistryRegistrySetup9C75F927",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "AWS::StackId"
        },
        "ResourceType": "CFN_STACK"
      }
    },
    "CustomMetricsPolicyFE11102D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": [
                    "Case",
                    "Documents",
                    "FileTypes",
                    "Workflows"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomMetricsPolicyFE11102D",
        "Roles": [
          {
            "Ref": "SetupCustomResourceLambdaRole8C9673A0"
          },
          {
            "Ref": "SetupScheduledMetricsLambdaRole03AD1333"
          },
          {
            "Ref": "NotificationManagerEventRuleToCompleteNotificationLambdaFunctionServiceRoleC9375DA3"
          },
          {
            "Ref": "RequestProcessorCaseManagerCreateRecordsLambdaDDbLambdaFunctionServiceRole7E925F87"
          },
          {
            "Ref": "RequestProcessorCaseManagerFetchRecordsLambdaDdbLambdaFunctionServiceRole20E21761"
          },
          {
            "Ref": "RequestProcessorGetDocumentUrlLambdaServiceRole8516203A"
          },
          {
            "Ref": "RequestProcessorGetInferencesLambdaServiceRole6E6DCEF8"
          },
          {
            "Ref": "RequestProcessorEventOrchestratorLambdaFunctionServiceRoleCA061FC5"
          },
          {
            "Ref": "RedactApiLambdaServiceRole69767CEE"
          },
          {
            "Ref": "SearchLambdaServiceRole0E246B0C"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "This policy allows put metric data to CloudWatch. The policy is restricted using policy conditions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VUyXLbMAz9ltwlxk46nfZWL2kuydTjOMkxA1GMzEQSVC72uBr9e8FFi5P2IjyAEIFHLFes/T5j7ewCjjrl+Xtayoy1Dwb4e7J6re+haWRdOLgBBZUwQiXk+tLqa9YuLX8Xxh1GFMQGS8lPoznqQVmCFl0iDqI2mrU3Ti6tds4D3tpSOIOTXVJCleXA2p+25kZi7U6meCNUJbV22h2chHoSSsejqd4l+voFtBYUduFEIqFi7RZjLCfHxAPqkvxUQ4U5PckOsuDpQZfwEm1+BMP3rF2D3mcIKnfng0IRa6K4w0Zy/6MH/jsGmqoPNtNcyaZnNtXpHbCg2+6wuFVoG08v4i6BRhZgxBFO5OHfayu0WTTSU4twLZoSTxU9sk9z1KjahacWAPmjVVy4Sg1KvCjge2H26MlG9Kjpx00JPu0zZcE5WoqxFb8t5fEEpczBoAr3fbRhUUuDj1qoDWKpF5ZuV/KP8O4T7TaQpYQarLVP7qPpHnNR+hR7sEZuHV9w70ndbD4Zh1Y5wuvhirV0/iyyxeouGRC1DnIJoSQ85MvaPuNA/zNelTI+e29xkhpEqIPkgoMBKi/NmhKF1EadfOxF01BfQN8OC2OUzKwRQwOcWyapTas1zbhLfOu7OrupHotrtcHqn7UmvMI6l0NT9qvhlzWNNV0yS6Fs9sBmFz/iDrl08r/Uons7ZXdOhNL8Mu/v01ha50M308coy432AVq/QzIl80KkcUncjKYdhkGI+yN1CytYdvhw7UdzUGs9DnpvXHvDejkdrj4MTVNstyEKdcxRZMDLdDKLz71xh+MvxK6mlmRv+vIw/8bmX9n84k1LmSqaE1kJtg3yL3NRpQiaBQAA"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "SetupDeploymentPartition30F2F6EC": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Partition"
        },
        "aws-us-gov"
      ]
    },
    "AnonymousDataAWSCondition": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "Solution",
            "Data",
            "SendAnonymousUsageData"
          ]
        },
        "Yes"
      ]
    },
    "DeploySamples": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "FeaturesToDeploy",
            "Deploy",
            "SampleDocuments"
          ]
        },
        "Yes"
      ]
    },
    "RequestProcessorApiCognitoUserConditionA53ADA52": {
      "Fn::Not": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "DefaultUserEmail"
                },
                "placeholder@example.com"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "DefaultUserEmail"
                },
                ""
              ]
            }
          ]
        }
      ]
    },
    "IndexedStorageDeployKendraIndexConditionB9696BD9": {
      "Fn::Equals": [
        {
          "Ref": "DeployKendraIndex"
        },
        "Yes"
      ]
    },
    "AnonymousDataAWS": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "Solution",
            "Data",
            "SendAnonymousUsageData"
          ]
        },
        "Yes"
      ]
    },
    "DeployTextractWorkflow": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "FeaturesToDeploy",
            "Deploy",
            "TextractWorkflow"
          ]
        },
        "Yes"
      ]
    },
    "DeployRedactionWorkflow": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "FeaturesToDeploy",
            "Deploy",
            "RedactionWorkflow"
          ]
        },
        "Yes"
      ]
    },
    "DeployComprehendWorkflow": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "FeaturesToDeploy",
            "Deploy",
            "ComprehendWorkflow"
          ]
        },
        "Yes"
      ]
    },
    "DeployCustomDashboard": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "FeaturesToDeploy",
            "Deploy",
            "CustomDashboard"
          ]
        },
        "Yes"
      ]
    },
    "DeployWebApp": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "FeaturesToDeploy",
            "Deploy",
            "WebApp"
          ]
        },
        "Yes"
      ]
    },
    "isGovCloudPartition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Partition"
        },
        "aws-us-gov"
      ]
    },
    "DeployS3Web": {
      "Fn::And": [
        {
          "Condition": "DeployWebApp"
        },
        {
          "Fn::Not": [
            {
              "Condition": "isGovCloudPartition"
            }
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Outputs": {
    "RequestProcessorApiEndPointLambdaRestApiEndpointFED5375C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RequestProcessorApiEndPointLambdaRestApiE0631C93"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "RequestProcessorApiEndPointLambdaRestApiDeploymentStageprod0CCF6E11"
            },
            "/"
          ]
        ]
      }
    },
    "UserPoolId": {
      "Value": {
        "Ref": "RequestProcessorApiExtUsrPoolD660310E"
      }
    },
    "UserPoolClientId": {
      "Value": {
        "Ref": "RequestProcessorApiClientApp8246E796"
      }
    },
    "WebConfigKey": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "/",
            {
              "Ref": "AWS::StackName"
            },
            "/app.idp/webconfig"
          ]
        ]
      },
      "Export": {
        "Name": "WebConfig"
      }
    },
    "CloudFrontWebUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "WebAppS3UINestedStackS3UINestedStackResource19E82599",
                "Outputs.DocUnderstandingWebAppS3UIWebsiteUICloudFrontDistribution86C53AC3DomainName"
              ]
            }
          ]
        ]
      },
      "Condition": "DeployWebApp"
    }
  }
}